{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Using Dynamic Mapping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import transportation_tutorials as tt\n",
    "import geopandas as gpd\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import folium\n",
    "from shapely.geometry import Polygon"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Questions"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Using folium, create a dynamic map and place markers on the centroids \n",
    "of the five MAZ's with the highest population density MAZs. Use popup \n",
    "text on markers to show population density and total employment \n",
    "information for each of those MAZs. By clicking the markers, you \n",
    "should be able to answer the following questions:\n",
    "\n",
    "1. Where is the highest population density?\n",
    "2. What is the total employment in the MAZ that has the highest population density?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To answer the questions, use the following files:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "maz = gpd.read_file(tt.data('SERPM8-MAZSHAPE'))\n",
    "maz_data = pd.read_csv(tt.data('SERPM8-MAZDATA', '*.csv'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>OBJECTID</th>\n",
       "      <th>MAZ</th>\n",
       "      <th>SHAPE_LENG</th>\n",
       "      <th>SHAPE_AREA</th>\n",
       "      <th>ACRES</th>\n",
       "      <th>POINT_X</th>\n",
       "      <th>POINT_Y</th>\n",
       "      <th>geometry</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>5347</td>\n",
       "      <td>8589.393674</td>\n",
       "      <td>3.111034e+06</td>\n",
       "      <td>71</td>\n",
       "      <td>953130</td>\n",
       "      <td>724165</td>\n",
       "      <td>POLYGON ((953970.4660769962 723936.0810402408,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>5348</td>\n",
       "      <td>11974.067469</td>\n",
       "      <td>7.628753e+06</td>\n",
       "      <td>175</td>\n",
       "      <td>907018</td>\n",
       "      <td>634551</td>\n",
       "      <td>POLYGON ((908505.2801046632 635081.7738410756,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>5349</td>\n",
       "      <td>9446.131753</td>\n",
       "      <td>4.007041e+06</td>\n",
       "      <td>92</td>\n",
       "      <td>923725</td>\n",
       "      <td>707062</td>\n",
       "      <td>POLYGON ((922736.6374686621 708387.6918614879,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>5350</td>\n",
       "      <td>21773.153739</td>\n",
       "      <td>2.487397e+07</td>\n",
       "      <td>571</td>\n",
       "      <td>908988</td>\n",
       "      <td>713484</td>\n",
       "      <td>POLYGON ((908334.2374677472 715692.2628822401,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>5351</td>\n",
       "      <td>17882.701416</td>\n",
       "      <td>1.963139e+07</td>\n",
       "      <td>451</td>\n",
       "      <td>909221</td>\n",
       "      <td>717493</td>\n",
       "      <td>POLYGON ((911883.0187559947 719309.3261861578,...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   OBJECTID   MAZ    SHAPE_LENG    SHAPE_AREA  ACRES  POINT_X  POINT_Y  \\\n",
       "0         1  5347   8589.393674  3.111034e+06     71   953130   724165   \n",
       "1         2  5348  11974.067469  7.628753e+06    175   907018   634551   \n",
       "2         3  5349   9446.131753  4.007041e+06     92   923725   707062   \n",
       "3         4  5350  21773.153739  2.487397e+07    571   908988   713484   \n",
       "4         5  5351  17882.701416  1.963139e+07    451   909221   717493   \n",
       "\n",
       "                                            geometry  \n",
       "0  POLYGON ((953970.4660769962 723936.0810402408,...  \n",
       "1  POLYGON ((908505.2801046632 635081.7738410756,...  \n",
       "2  POLYGON ((922736.6374686621 708387.6918614879,...  \n",
       "3  POLYGON ((908334.2374677472 715692.2628822401,...  \n",
       "4  POLYGON ((911883.0187559947 719309.3261861578,...  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "maz.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "#maz = maz.to_crs(epsg = 4326)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'init': 'epsg:2236'}"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "maz.crs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a28780a20>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "maz.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mgra</th>\n",
       "      <th>TAZ</th>\n",
       "      <th>HH</th>\n",
       "      <th>POP</th>\n",
       "      <th>emp_self</th>\n",
       "      <th>emp_ag</th>\n",
       "      <th>emp_const_non_bldg_prod</th>\n",
       "      <th>emp_const_non_bldg_office</th>\n",
       "      <th>emp_utilities_prod</th>\n",
       "      <th>emp_utilities_office</th>\n",
       "      <th>...</th>\n",
       "      <th>EmpDenBin</th>\n",
       "      <th>DuDenBin</th>\n",
       "      <th>POINT_X</th>\n",
       "      <th>POINT_Y</th>\n",
       "      <th>ACRES</th>\n",
       "      <th>HotelRoomTotal</th>\n",
       "      <th>mall_flag</th>\n",
       "      <th>beachAcres</th>\n",
       "      <th>geoSRate</th>\n",
       "      <th>geoSRateNm</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2901</td>\n",
       "      <td>43</td>\n",
       "      <td>169</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>841743</td>\n",
       "      <td>586817</td>\n",
       "      <td>510</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2902</td>\n",
       "      <td>9</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1006</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>855391</td>\n",
       "      <td>585688</td>\n",
       "      <td>5678</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2903</td>\n",
       "      <td>403</td>\n",
       "      <td>1389</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>858417</td>\n",
       "      <td>549492</td>\n",
       "      <td>85</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2903</td>\n",
       "      <td>477</td>\n",
       "      <td>1659</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>858468</td>\n",
       "      <td>552269</td>\n",
       "      <td>103</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2903</td>\n",
       "      <td>374</td>\n",
       "      <td>1389</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>859899</td>\n",
       "      <td>552161</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 76 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   mgra   TAZ   HH   POP  emp_self  emp_ag  emp_const_non_bldg_prod  \\\n",
       "0     1  2901   43   169         0       0                        0   \n",
       "1     2  2902    9    21         0       1                     1006   \n",
       "2     3  2903  403  1389         0       0                        6   \n",
       "3     4  2903  477  1659         0       0                        3   \n",
       "4     5  2903  374  1389         0       0                       11   \n",
       "\n",
       "   emp_const_non_bldg_office  emp_utilities_prod  emp_utilities_office  ...  \\\n",
       "0                          0                   0                     0  ...   \n",
       "1                          0                   8                     0  ...   \n",
       "2                          0                   0                     0  ...   \n",
       "3                          0                   0                     0  ...   \n",
       "4                          0                   0                     0  ...   \n",
       "\n",
       "   EmpDenBin  DuDenBin  POINT_X  POINT_Y  ACRES  HotelRoomTotal  mall_flag  \\\n",
       "0          1         1   841743   586817    510               0          0   \n",
       "1          1         1   855391   585688   5678               0          0   \n",
       "2          1         1   858417   549492     85               0          0   \n",
       "3          1         1   858468   552269    103               0          0   \n",
       "4          1         1   859899   552161     72               0          0   \n",
       "\n",
       "   beachAcres  geoSRate  geoSRateNm  \n",
       "0           0         1           1  \n",
       "1           0         1           1  \n",
       "2           0         1           1  \n",
       "3           0         1           1  \n",
       "4           0         1           1  \n",
       "\n",
       "[5 rows x 76 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "maz_data.head()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
