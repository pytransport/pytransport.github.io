{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Using Pivot Tables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import transportation_tutorials as tt\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Questions"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. Within the Jupiter study area, what is the average distance for bike tours to work?\n",
    "   *(Hint: It is 4.03 miles)*\n",
    "2. What tour purpose has the highest average tour distance? *(Hint: Work tours)*\n",
    "2. What is the median distance of walking for all tour purposes? *(Hint: 0.548 miles)*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data\n",
    "\n",
    "To answer the questions, use the following data file:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hh_id</th>\n",
       "      <th>person_id</th>\n",
       "      <th>person_num</th>\n",
       "      <th>person_type</th>\n",
       "      <th>tour_id</th>\n",
       "      <th>tour_category</th>\n",
       "      <th>tour_purpose</th>\n",
       "      <th>orig_mgra</th>\n",
       "      <th>dest_mgra</th>\n",
       "      <th>start_period</th>\n",
       "      <th>end_period</th>\n",
       "      <th>tour_mode</th>\n",
       "      <th>tour_distance</th>\n",
       "      <th>tour_time</th>\n",
       "      <th>atWork_freq</th>\n",
       "      <th>num_ob_stops</th>\n",
       "      <th>num_ib_stops</th>\n",
       "      <th>out_btap</th>\n",
       "      <th>out_atap</th>\n",
       "      <th>in_btap</th>\n",
       "      <th>in_atap</th>\n",
       "      <th>util_1</th>\n",
       "      <th>util_2</th>\n",
       "      <th>util_3</th>\n",
       "      <th>util_4</th>\n",
       "      <th>util_5</th>\n",
       "      <th>util_6</th>\n",
       "      <th>util_7</th>\n",
       "      <th>util_8</th>\n",
       "      <th>util_9</th>\n",
       "      <th>util_10</th>\n",
       "      <th>util_11</th>\n",
       "      <th>util_12</th>\n",
       "      <th>util_13</th>\n",
       "      <th>util_14</th>\n",
       "      <th>util_15</th>\n",
       "      <th>util_16</th>\n",
       "      <th>util_17</th>\n",
       "      <th>util_18</th>\n",
       "      <th>util_19</th>\n",
       "      <th>util_20</th>\n",
       "      <th>prob_1</th>\n",
       "      <th>prob_2</th>\n",
       "      <th>prob_3</th>\n",
       "      <th>prob_4</th>\n",
       "      <th>prob_5</th>\n",
       "      <th>prob_6</th>\n",
       "      <th>prob_7</th>\n",
       "      <th>prob_8</th>\n",
       "      <th>prob_9</th>\n",
       "      <th>prob_10</th>\n",
       "      <th>prob_11</th>\n",
       "      <th>prob_12</th>\n",
       "      <th>prob_13</th>\n",
       "      <th>prob_14</th>\n",
       "      <th>prob_15</th>\n",
       "      <th>prob_16</th>\n",
       "      <th>prob_17</th>\n",
       "      <th>prob_18</th>\n",
       "      <th>prob_19</th>\n",
       "      <th>prob_20</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1690841</td>\n",
       "      <td>4502948</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>MANDATORY</td>\n",
       "      <td>Work</td>\n",
       "      <td>7736</td>\n",
       "      <td>9290</td>\n",
       "      <td>8</td>\n",
       "      <td>29</td>\n",
       "      <td>6</td>\n",
       "      <td>22.261</td>\n",
       "      <td>32.311001</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.395076</td>\n",
       "      <td>-998.970825</td>\n",
       "      <td>-2.360061</td>\n",
       "      <td>-2.051275</td>\n",
       "      <td>-2.361161</td>\n",
       "      <td>-1.139561</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>-996.401001</td>\n",
       "      <td>-997.447021</td>\n",
       "      <td>-996.244019</td>\n",
       "      <td>-996.244019</td>\n",
       "      <td>-997.664978</td>\n",
       "      <td>-999.883789</td>\n",
       "      <td>-999.883789</td>\n",
       "      <td>-1001.335999</td>\n",
       "      <td>-999.883789</td>\n",
       "      <td>-999.883789</td>\n",
       "      <td>-1001.335999</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>0.340576</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000096</td>\n",
       "      <td>0.091587</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.567742</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1690841</td>\n",
       "      <td>4502948</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>AT_WORK</td>\n",
       "      <td>Work-Based</td>\n",
       "      <td>9290</td>\n",
       "      <td>7980</td>\n",
       "      <td>13</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>1.910</td>\n",
       "      <td>4.752000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.259837</td>\n",
       "      <td>-998.668518</td>\n",
       "      <td>-0.758937</td>\n",
       "      <td>-999.608398</td>\n",
       "      <td>-0.687137</td>\n",
       "      <td>-999.858276</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>-5.843162</td>\n",
       "      <td>-28.534241</td>\n",
       "      <td>-8.014107</td>\n",
       "      <td>-1024.000000</td>\n",
       "      <td>-1024.000000</td>\n",
       "      <td>-30.581329</td>\n",
       "      <td>-1024.000000</td>\n",
       "      <td>-32.709736</td>\n",
       "      <td>-30.581329</td>\n",
       "      <td>-1024.000000</td>\n",
       "      <td>-32.709736</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>0.555677</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.204790</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.236415</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.002799</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000319</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1690841</td>\n",
       "      <td>4502948</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>AT_WORK</td>\n",
       "      <td>Work-Based</td>\n",
       "      <td>9290</td>\n",
       "      <td>10608</td>\n",
       "      <td>19</td>\n",
       "      <td>23</td>\n",
       "      <td>3</td>\n",
       "      <td>1.357</td>\n",
       "      <td>3.777000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.195235</td>\n",
       "      <td>-998.668518</td>\n",
       "      <td>-0.694335</td>\n",
       "      <td>-999.608398</td>\n",
       "      <td>-0.622535</td>\n",
       "      <td>-999.858276</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>-4.755019</td>\n",
       "      <td>-28.262205</td>\n",
       "      <td>-8.655456</td>\n",
       "      <td>-1024.000000</td>\n",
       "      <td>-1024.000000</td>\n",
       "      <td>-33.426655</td>\n",
       "      <td>-1024.000000</td>\n",
       "      <td>-31.728464</td>\n",
       "      <td>-33.426655</td>\n",
       "      <td>-1024.000000</td>\n",
       "      <td>-31.728464</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>0.553007</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.203806</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.235279</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.007751</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000157</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1690841</td>\n",
       "      <td>4502949</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>MANDATORY</td>\n",
       "      <td>Work</td>\n",
       "      <td>7736</td>\n",
       "      <td>8289</td>\n",
       "      <td>27</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>30.930</td>\n",
       "      <td>55.431000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-2.548089</td>\n",
       "      <td>-998.970825</td>\n",
       "      <td>-3.130183</td>\n",
       "      <td>-1.918921</td>\n",
       "      <td>-3.237083</td>\n",
       "      <td>-1.397364</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>-996.401001</td>\n",
       "      <td>-997.447021</td>\n",
       "      <td>-996.244019</td>\n",
       "      <td>-996.244019</td>\n",
       "      <td>-997.664978</td>\n",
       "      <td>-999.883789</td>\n",
       "      <td>-999.883789</td>\n",
       "      <td>-1001.335999</td>\n",
       "      <td>-999.883789</td>\n",
       "      <td>-999.883789</td>\n",
       "      <td>-1001.335999</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>0.068926</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.242591</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.688483</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1690841</td>\n",
       "      <td>4502949</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>MANDATORY</td>\n",
       "      <td>Work</td>\n",
       "      <td>7736</td>\n",
       "      <td>8289</td>\n",
       "      <td>31</td>\n",
       "      <td>36</td>\n",
       "      <td>4</td>\n",
       "      <td>30.930</td>\n",
       "      <td>55.431000</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-2.493357</td>\n",
       "      <td>-998.970825</td>\n",
       "      <td>-3.075933</td>\n",
       "      <td>-1.860832</td>\n",
       "      <td>-3.182833</td>\n",
       "      <td>-1.339275</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>-996.401001</td>\n",
       "      <td>-997.447021</td>\n",
       "      <td>-996.244019</td>\n",
       "      <td>-996.244019</td>\n",
       "      <td>-997.664978</td>\n",
       "      <td>-999.883789</td>\n",
       "      <td>-999.883789</td>\n",
       "      <td>-1001.335999</td>\n",
       "      <td>-999.883789</td>\n",
       "      <td>-999.883789</td>\n",
       "      <td>-1001.335999</td>\n",
       "      <td>-999.0</td>\n",
       "      <td>0.068497</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.242703</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.688801</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     hh_id  person_id  person_num  person_type  tour_id tour_category  \\\n",
       "0  1690841    4502948           1            1        0     MANDATORY   \n",
       "1  1690841    4502948           1            1        1       AT_WORK   \n",
       "2  1690841    4502948           1            1        2       AT_WORK   \n",
       "3  1690841    4502949           2            2        0     MANDATORY   \n",
       "4  1690841    4502949           2            2        1     MANDATORY   \n",
       "\n",
       "  tour_purpose  orig_mgra  dest_mgra  start_period  end_period  tour_mode  \\\n",
       "0         Work       7736       9290             8          29          6   \n",
       "1   Work-Based       9290       7980            13          14          1   \n",
       "2   Work-Based       9290      10608            19          23          3   \n",
       "3         Work       7736       8289            27          30          4   \n",
       "4         Work       7736       8289            31          36          4   \n",
       "\n",
       "   tour_distance  tour_time  atWork_freq  num_ob_stops  num_ib_stops  \\\n",
       "0         22.261  32.311001            6             0             0   \n",
       "1          1.910   4.752000            0             0             0   \n",
       "2          1.357   3.777000            0             0             0   \n",
       "3         30.930  55.431000            1             1             0   \n",
       "4         30.930  55.431000            1             0             0   \n",
       "\n",
       "   out_btap  out_atap  in_btap  in_atap    util_1      util_2    util_3  \\\n",
       "0         0         0        0        0 -1.395076 -998.970825 -2.360061   \n",
       "1         0         0        0        0 -0.259837 -998.668518 -0.758937   \n",
       "2         0         0        0        0 -0.195235 -998.668518 -0.694335   \n",
       "3         0         0        0        0 -2.548089 -998.970825 -3.130183   \n",
       "4         0         0        0        0 -2.493357 -998.970825 -3.075933   \n",
       "\n",
       "       util_4    util_5      util_6  util_7  util_8      util_9     util_10  \\\n",
       "0   -2.051275 -2.361161   -1.139561  -999.0  -999.0 -996.401001 -997.447021   \n",
       "1 -999.608398 -0.687137 -999.858276  -999.0  -999.0   -5.843162  -28.534241   \n",
       "2 -999.608398 -0.622535 -999.858276  -999.0  -999.0   -4.755019  -28.262205   \n",
       "3   -1.918921 -3.237083   -1.397364  -999.0  -999.0 -996.401001 -997.447021   \n",
       "4   -1.860832 -3.182833   -1.339275  -999.0  -999.0 -996.401001 -997.447021   \n",
       "\n",
       "      util_11      util_12      util_13     util_14      util_15      util_16  \\\n",
       "0 -996.244019  -996.244019  -997.664978 -999.883789  -999.883789 -1001.335999   \n",
       "1   -8.014107 -1024.000000 -1024.000000  -30.581329 -1024.000000   -32.709736   \n",
       "2   -8.655456 -1024.000000 -1024.000000  -33.426655 -1024.000000   -31.728464   \n",
       "3 -996.244019  -996.244019  -997.664978 -999.883789  -999.883789 -1001.335999   \n",
       "4 -996.244019  -996.244019  -997.664978 -999.883789  -999.883789 -1001.335999   \n",
       "\n",
       "      util_17      util_18      util_19  util_20    prob_1  prob_2    prob_3  \\\n",
       "0 -999.883789  -999.883789 -1001.335999   -999.0  0.340576     0.0  0.000096   \n",
       "1  -30.581329 -1024.000000   -32.709736   -999.0  0.555677     0.0  0.204790   \n",
       "2  -33.426655 -1024.000000   -31.728464   -999.0  0.553007     0.0  0.203806   \n",
       "3 -999.883789  -999.883789 -1001.335999   -999.0  0.068926     0.0  0.000000   \n",
       "4 -999.883789  -999.883789 -1001.335999   -999.0  0.068497     0.0  0.000000   \n",
       "\n",
       "     prob_4    prob_5    prob_6  prob_7  prob_8    prob_9  prob_10   prob_11  \\\n",
       "0  0.091587  0.000000  0.567742     0.0     0.0  0.000000      0.0  0.000000   \n",
       "1  0.000000  0.236415  0.000000     0.0     0.0  0.002799      0.0  0.000319   \n",
       "2  0.000000  0.235279  0.000000     0.0     0.0  0.007751      0.0  0.000157   \n",
       "3  0.242591  0.000000  0.688483     0.0     0.0  0.000000      0.0  0.000000   \n",
       "4  0.242703  0.000000  0.688801     0.0     0.0  0.000000      0.0  0.000000   \n",
       "\n",
       "   prob_12  prob_13  prob_14  prob_15  prob_16  prob_17  prob_18  prob_19  \\\n",
       "0      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n",
       "1      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n",
       "2      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n",
       "3      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n",
       "4      0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n",
       "\n",
       "   prob_20  \n",
       "0      0.0  \n",
       "1      0.0  \n",
       "2      0.0  \n",
       "3      0.0  \n",
       "4      0.0  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tour = pd.read_csv(tt.data('SERPM8-BASE2015-TOURS'))\n",
    "tour.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "tour_mode_dict = {\n",
    "    1: \"DRIVEALONEFREE\",\n",
    "    2: \"DRIVEALONEPAY\",\n",
    "    3: \"SHARED2GP\",\n",
    "    4: \"SHARED2PAY\",\n",
    "    5: \"SHARED3GP\",\n",
    "    6: \"SHARED3PAY\",\n",
    "    7: \"TNCALONE\",\n",
    "    8: \"TNCSHARED\",\n",
    "    9: \"WALK\",\n",
    "    10: \"BIKE\",\n",
    "    11: \"WALK_MIX\",\n",
    "    12: \"WALK_PRMW\",\n",
    "    13: \"WALK_PRMD\",\n",
    "    14: \"PNR_MIX\",\n",
    "    15: \"PNR_PRMW\",\n",
    "    16: \"PNR_PRMD\",\n",
    "    17: \"KNR_MIX\",\n",
    "    18: \"KNR_PRMW\",\n",
    "    19: \"KNR_PRMD\",\n",
    "    20: \"SCHBUS\",\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Solution"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To find the answers in this exercise, we need to deal with three variables: `tour_mode`, `tour_purpose` and `tour_distance`. Let's look at the data type of these three variables. We use `.info()` to view the data types of dataframe columns. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 47485 entries, 0 to 47484\n",
      "Data columns (total 3 columns):\n",
      "tour_mode        47485 non-null int64\n",
      "tour_purpose     47485 non-null object\n",
      "tour_distance    47485 non-null float64\n",
      "dtypes: float64(1), int64(1), object(1)\n",
      "memory usage: 1.1+ MB\n"
     ]
    }
   ],
   "source": [
    "tour[['tour_mode', 'tour_purpose', 'tour_distance']].info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we can see, `tour_mode` column in the data is categorized as integers. It is often helpful to have string category for easier exploration. Given that we know the notations of integer categories, we can convert the integer categories to string categories using a dictionary like `tour_mode_dict`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "tour['tour_mode'] = tour['tour_mode'].map(tour_mode_dict)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DRIVEALONEFREE    25911\n",
       "SHARED2GP         10013\n",
       "SHARED3GP          4857\n",
       "DRIVEALONEPAY      2057\n",
       "SCHBUS             1590\n",
       "WALK               1213\n",
       "BIKE                674\n",
       "SHARED2PAY          500\n",
       "SHARED3PAY          465\n",
       "WALK_MIX            171\n",
       "PNR_PRMW             11\n",
       "KNR_PRMD              9\n",
       "KNR_MIX               5\n",
       "KNR_PRMW              3\n",
       "PNR_PRMD              3\n",
       "PNR_MIX               3\n",
       "Name: tour_mode, dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tour.tour_mode.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Work             16238\n",
       "Shop              6291\n",
       "School            5605\n",
       "Discretionary     4980\n",
       "Maintenance       4787\n",
       "Eating Out        3064\n",
       "Visiting          2641\n",
       "Work-Based        2260\n",
       "University         820\n",
       "Escort             799\n",
       "Name: tour_purpose, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tour.tour_purpose.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we have the perfect data types for required variables, we create a pivot table using `.pivot_table()` method and set the categorical columns (`tour_mode` and `tour_purpose`) in `tour` dataframe as `index` and `columns`. Then, we can set the continuous variable column, `tour_distance` as `values` in the `.pivot_table()` method.\n",
    "\n",
    "Please note that `.pivot_table()` method by default calculates the average values of the column that is set as `values`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>tour_purpose</th>\n",
       "      <th>Discretionary</th>\n",
       "      <th>Eating Out</th>\n",
       "      <th>Escort</th>\n",
       "      <th>Maintenance</th>\n",
       "      <th>School</th>\n",
       "      <th>Shop</th>\n",
       "      <th>University</th>\n",
       "      <th>Visiting</th>\n",
       "      <th>Work</th>\n",
       "      <th>Work-Based</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tour_mode</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>BIKE</th>\n",
       "      <td>2.764216</td>\n",
       "      <td>3.739237</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.872279</td>\n",
       "      <td>3.100353</td>\n",
       "      <td>4.323302</td>\n",
       "      <td>4.953091</td>\n",
       "      <td>2.448940</td>\n",
       "      <td>4.034763</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DRIVEALONEFREE</th>\n",
       "      <td>5.681107</td>\n",
       "      <td>6.299282</td>\n",
       "      <td>3.848886</td>\n",
       "      <td>4.993209</td>\n",
       "      <td>4.396832</td>\n",
       "      <td>8.658878</td>\n",
       "      <td>7.974719</td>\n",
       "      <td>6.533719</td>\n",
       "      <td>12.089045</td>\n",
       "      <td>3.387014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DRIVEALONEPAY</th>\n",
       "      <td>38.526133</td>\n",
       "      <td>21.259400</td>\n",
       "      <td>23.726999</td>\n",
       "      <td>22.798727</td>\n",
       "      <td>NaN</td>\n",
       "      <td>59.314263</td>\n",
       "      <td>NaN</td>\n",
       "      <td>34.439682</td>\n",
       "      <td>38.741760</td>\n",
       "      <td>19.173934</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNR_MIX</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>33.410000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNR_PRMD</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.558556</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNR_PRMW</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39.154332</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PNR_MIX</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21.311667</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PNR_PRMD</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>61.115000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PNR_PRMW</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>58.980637</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SCHBUS</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.816528</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SHARED2GP</th>\n",
       "      <td>7.469143</td>\n",
       "      <td>6.521744</td>\n",
       "      <td>4.544895</td>\n",
       "      <td>6.026752</td>\n",
       "      <td>4.176316</td>\n",
       "      <td>9.935834</td>\n",
       "      <td>8.809288</td>\n",
       "      <td>8.371339</td>\n",
       "      <td>13.427365</td>\n",
       "      <td>4.131103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SHARED2PAY</th>\n",
       "      <td>26.186025</td>\n",
       "      <td>22.228364</td>\n",
       "      <td>23.677999</td>\n",
       "      <td>28.893666</td>\n",
       "      <td>NaN</td>\n",
       "      <td>59.844746</td>\n",
       "      <td>21.773001</td>\n",
       "      <td>33.488765</td>\n",
       "      <td>39.481301</td>\n",
       "      <td>13.410200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SHARED3GP</th>\n",
       "      <td>7.622825</td>\n",
       "      <td>6.677294</td>\n",
       "      <td>6.378542</td>\n",
       "      <td>6.842151</td>\n",
       "      <td>4.308441</td>\n",
       "      <td>10.631094</td>\n",
       "      <td>8.269645</td>\n",
       "      <td>8.709989</td>\n",
       "      <td>13.986657</td>\n",
       "      <td>4.055721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SHARED3PAY</th>\n",
       "      <td>21.648273</td>\n",
       "      <td>22.139000</td>\n",
       "      <td>25.274000</td>\n",
       "      <td>20.237000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>59.383289</td>\n",
       "      <td>16.806000</td>\n",
       "      <td>38.686500</td>\n",
       "      <td>37.353821</td>\n",
       "      <td>13.419333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WALK</th>\n",
       "      <td>0.637523</td>\n",
       "      <td>0.906817</td>\n",
       "      <td>0.491000</td>\n",
       "      <td>0.782691</td>\n",
       "      <td>0.973146</td>\n",
       "      <td>0.810000</td>\n",
       "      <td>1.343474</td>\n",
       "      <td>0.612707</td>\n",
       "      <td>0.714053</td>\n",
       "      <td>0.385786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WALK_MIX</th>\n",
       "      <td>3.486778</td>\n",
       "      <td>3.483111</td>\n",
       "      <td>5.693667</td>\n",
       "      <td>4.597381</td>\n",
       "      <td>2.434500</td>\n",
       "      <td>8.946885</td>\n",
       "      <td>3.589333</td>\n",
       "      <td>3.416000</td>\n",
       "      <td>9.022067</td>\n",
       "      <td>0.754857</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "tour_purpose    Discretionary  Eating Out     Escort  Maintenance    School  \\\n",
       "tour_mode                                                                     \n",
       "BIKE                 2.764216    3.739237        NaN     2.872279  3.100353   \n",
       "DRIVEALONEFREE       5.681107    6.299282   3.848886     4.993209  4.396832   \n",
       "DRIVEALONEPAY       38.526133   21.259400  23.726999    22.798727       NaN   \n",
       "KNR_MIX                   NaN         NaN        NaN          NaN       NaN   \n",
       "KNR_PRMD                  NaN         NaN        NaN          NaN       NaN   \n",
       "KNR_PRMW                  NaN         NaN        NaN          NaN       NaN   \n",
       "PNR_MIX                   NaN         NaN        NaN          NaN       NaN   \n",
       "PNR_PRMD                  NaN         NaN        NaN          NaN       NaN   \n",
       "PNR_PRMW                  NaN         NaN        NaN          NaN       NaN   \n",
       "SCHBUS                    NaN         NaN        NaN          NaN  5.816528   \n",
       "SHARED2GP            7.469143    6.521744   4.544895     6.026752  4.176316   \n",
       "SHARED2PAY          26.186025   22.228364  23.677999    28.893666       NaN   \n",
       "SHARED3GP            7.622825    6.677294   6.378542     6.842151  4.308441   \n",
       "SHARED3PAY          21.648273   22.139000  25.274000    20.237000       NaN   \n",
       "WALK                 0.637523    0.906817   0.491000     0.782691  0.973146   \n",
       "WALK_MIX             3.486778    3.483111   5.693667     4.597381  2.434500   \n",
       "\n",
       "tour_purpose         Shop  University   Visiting       Work  Work-Based  \n",
       "tour_mode                                                                \n",
       "BIKE             4.323302    4.953091   2.448940   4.034763         NaN  \n",
       "DRIVEALONEFREE   8.658878    7.974719   6.533719  12.089045    3.387014  \n",
       "DRIVEALONEPAY   59.314263         NaN  34.439682  38.741760   19.173934  \n",
       "KNR_MIX               NaN         NaN        NaN  33.410000         NaN  \n",
       "KNR_PRMD              NaN         NaN        NaN  37.558556         NaN  \n",
       "KNR_PRMW              NaN         NaN        NaN  39.154332         NaN  \n",
       "PNR_MIX               NaN         NaN        NaN  21.311667         NaN  \n",
       "PNR_PRMD              NaN         NaN        NaN  61.115000         NaN  \n",
       "PNR_PRMW              NaN         NaN        NaN  58.980637         NaN  \n",
       "SCHBUS                NaN         NaN        NaN        NaN         NaN  \n",
       "SHARED2GP        9.935834    8.809288   8.371339  13.427365    4.131103  \n",
       "SHARED2PAY      59.844746   21.773001  33.488765  39.481301   13.410200  \n",
       "SHARED3GP       10.631094    8.269645   8.709989  13.986657    4.055721  \n",
       "SHARED3PAY      59.383289   16.806000  38.686500  37.353821   13.419333  \n",
       "WALK             0.810000    1.343474   0.612707   0.714053    0.385786  \n",
       "WALK_MIX         8.946885    3.589333   3.416000   9.022067    0.754857  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tour.pivot_table(index = 'tour_mode', columns = 'tour_purpose', values = 'tour_distance')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the pivot table that we just created, we can see that the average distance of biking to work is 4.034763 mile, which is the answer to our first question listed above."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "____"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To answer the second question, we just need a one-dimensional pivot table that we can create by ignoring either `index` or `columns` in `.pivot_table()` method. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>tour_purpose</th>\n",
       "      <th>Discretionary</th>\n",
       "      <th>Eating Out</th>\n",
       "      <th>Escort</th>\n",
       "      <th>Maintenance</th>\n",
       "      <th>School</th>\n",
       "      <th>Shop</th>\n",
       "      <th>University</th>\n",
       "      <th>Visiting</th>\n",
       "      <th>Work</th>\n",
       "      <th>Work-Based</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>tour_distance</th>\n",
       "      <td>6.355063</td>\n",
       "      <td>6.341543</td>\n",
       "      <td>4.266534</td>\n",
       "      <td>5.413463</td>\n",
       "      <td>4.53435</td>\n",
       "      <td>13.421542</td>\n",
       "      <td>7.796431</td>\n",
       "      <td>7.534867</td>\n",
       "      <td>15.804213</td>\n",
       "      <td>3.841985</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "tour_purpose   Discretionary  Eating Out    Escort  Maintenance   School  \\\n",
       "tour_distance       6.355063    6.341543  4.266534     5.413463  4.53435   \n",
       "\n",
       "tour_purpose        Shop  University  Visiting       Work  Work-Based  \n",
       "tour_distance  13.421542    7.796431  7.534867  15.804213    3.841985  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tour.pivot_table(columns = 'tour_purpose', values = 'tour_distance')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It is pretty clear that the work tours have the highest average tour distance as shown in the table above. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "_____"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we want to create a pivot table with median values of the column assigned in `values`, we can use `aggfunc` argument to specify that requirement. Again, we can use a one-dimensional pivot table to find the answer of third question. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>median</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>tour_distance</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tour_mode</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>BIKE</th>\n",
       "      <td>2.890500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DRIVEALONEFREE</th>\n",
       "      <td>6.098000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DRIVEALONEPAY</th>\n",
       "      <td>31.275000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNR_MIX</th>\n",
       "      <td>29.497999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNR_PRMD</th>\n",
       "      <td>36.278000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNR_PRMW</th>\n",
       "      <td>18.084999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PNR_MIX</th>\n",
       "      <td>16.518000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PNR_PRMD</th>\n",
       "      <td>55.566002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PNR_PRMW</th>\n",
       "      <td>56.125999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SCHBUS</th>\n",
       "      <td>2.624000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SHARED2GP</th>\n",
       "      <td>5.912000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SHARED2PAY</th>\n",
       "      <td>31.558000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SHARED3GP</th>\n",
       "      <td>5.085000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SHARED3PAY</th>\n",
       "      <td>30.006001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WALK</th>\n",
       "      <td>0.548000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WALK_MIX</th>\n",
       "      <td>3.294000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      median\n",
       "               tour_distance\n",
       "tour_mode                   \n",
       "BIKE                2.890500\n",
       "DRIVEALONEFREE      6.098000\n",
       "DRIVEALONEPAY      31.275000\n",
       "KNR_MIX            29.497999\n",
       "KNR_PRMD           36.278000\n",
       "KNR_PRMW           18.084999\n",
       "PNR_MIX            16.518000\n",
       "PNR_PRMD           55.566002\n",
       "PNR_PRMW           56.125999\n",
       "SCHBUS              2.624000\n",
       "SHARED2GP           5.912000\n",
       "SHARED2PAY         31.558000\n",
       "SHARED3GP           5.085000\n",
       "SHARED3PAY         30.006001\n",
       "WALK                0.548000\n",
       "WALK_MIX            3.294000"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tour.pivot_table(index = 'tour_mode', values = 'tour_distance', aggfunc = ['median'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the table, it is obvious that the median walking distance for all kinds of tour is almost half a mile (0.548 mile). "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
