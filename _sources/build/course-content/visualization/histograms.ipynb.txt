{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import transportation_tutorials as tt\n",
    "from matplotlib import pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Histograms and Frequency Plots\n",
    "\n",
    "In this section, we will review the creation of histograms and \n",
    "frequency plots for data.  These two kinds of plots are very\n",
    "similar: histograms plot the distribution of continuous data\n",
    "by grouping similar values together in (typically homogeneously \n",
    "sized) bins, while frequency plots are a similar visualization\n",
    "for discrete (categorical) data that is by its nature already\n",
    "\"binned\".  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Computing Frequency Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We'll create some frequency plots of trip mode using data from the \n",
    "example `trips` data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "trips = pd.read_csv(tt.data('SERPM8-BASE2015-TRIPS'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 123874 entries, 0 to 123873\n",
      "Data columns (total 20 columns):\n",
      "hh_id              123874 non-null int64\n",
      "person_id          123874 non-null int64\n",
      "person_num         123874 non-null int64\n",
      "tour_id            123874 non-null int64\n",
      "stop_id            123874 non-null int64\n",
      "inbound            123874 non-null int64\n",
      "tour_purpose       123874 non-null object\n",
      "orig_purpose       123874 non-null object\n",
      "dest_purpose       123874 non-null object\n",
      "orig_mgra          123874 non-null int64\n",
      "dest_mgra          123874 non-null int64\n",
      "parking_mgra       123874 non-null int64\n",
      "stop_period        123874 non-null int64\n",
      "trip_mode          123874 non-null int64\n",
      "trip_board_tap     123874 non-null int64\n",
      "trip_alight_tap    123874 non-null int64\n",
      "tour_mode          123874 non-null int64\n",
      "smplRate_geo       123874 non-null float64\n",
      "autotech           123874 non-null int64\n",
      "tncmemb            123874 non-null int64\n",
      "dtypes: float64(1), int64(16), object(3)\n",
      "memory usage: 18.9+ MB\n"
     ]
    }
   ],
   "source": [
    "trips.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The pandas.Series object has a `value_counts` method that\n",
    "counts the number of each of unique values in the series.\n",
    "It returns a new Series, with the original values as the\n",
    "index. By default the result is sorted in decreasing order \n",
    "of frequency, but by setting `sort` to False we can get \n",
    "the results in order by the original values, which in this\n",
    "case will make a more readable figure (as similar modes have\n",
    "adjacent code numbers)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1     77187\n",
       "2      6659\n",
       "3     19264\n",
       "4      1348\n",
       "5     10355\n",
       "6       872\n",
       "9      3290\n",
       "10     1563\n",
       "11      330\n",
       "14        6\n",
       "15       16\n",
       "16        5\n",
       "17        9\n",
       "18        5\n",
       "19       18\n",
       "20     2947\n",
       "Name: trip_mode, dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trip_mode_counts = trips.trip_mode.value_counts(sort=False)\n",
    "trip_mode_counts"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are 20 distinct trip modes recognized in the SERPM \n",
    "trip file. They are identified by code numbers, but we\n",
    "can create a python dictionary that maps the code numbers\n",
    "to slightly more human-friendly names that will be used in our\n",
    "figures."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "trip_mode_dictionary = {\n",
    "    1: \"DRIVEALONEFREE\",\n",
    "    2: \"DRIVEALONEPAY\",\n",
    "    3: \"SHARED2GP\",\n",
    "    4: \"SHARED2PAY\",\n",
    "    5: \"SHARED3GP\",\n",
    "    6: \"SHARED3PAY\",\n",
    "    7: \"TNCALONE\",\n",
    "    8: \"TNCSHARED\",\n",
    "    9: \"WALK\",\n",
    "    10: \"BIKE\",\n",
    "    11: \"WALK_MIX\",\n",
    "    12: \"WALK_PRMW\",\n",
    "    13: \"WALK_PRMD\",\n",
    "    14: \"PNR_MIX\",\n",
    "    15: \"PNR_PRMW\",\n",
    "    16: \"PNR_PRMD\",\n",
    "    17: \"KNR_MIX\",\n",
    "    18: \"KNR_PRMW\",\n",
    "    19: \"KNR_PRMD\",\n",
    "    20: \"SCHBUS\",\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can apply this dictionary to the `trip_mode_counts` index using the \n",
    "`map` method."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DRIVEALONEFREE    77187\n",
       "DRIVEALONEPAY      6659\n",
       "SHARED2GP         19264\n",
       "SHARED2PAY         1348\n",
       "SHARED3GP         10355\n",
       "SHARED3PAY          872\n",
       "WALK               3290\n",
       "BIKE               1563\n",
       "WALK_MIX            330\n",
       "PNR_MIX               6\n",
       "PNR_PRMW             16\n",
       "PNR_PRMD              5\n",
       "KNR_MIX               9\n",
       "KNR_PRMW              5\n",
       "KNR_PRMD             18\n",
       "SCHBUS             2947\n",
       "Name: trip_mode, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trip_mode_counts.index = trip_mode_counts.index.map(trip_mode_dictionary)\n",
    "trip_mode_counts"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plotting Frequency Data\n",
    "\n",
    "Now we have a Series that contains the data we want to use.\n",
    "We can plot this data using the `plot` method. This convenient\n",
    "method makes it easy to generate a quick visualization of the\n",
    "data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "trip_mode_counts.plot(kind='bar');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `plot` method takes a `kind` argument to define\n",
    "the kind of plot to generate -- a variety of kinds\n",
    "are available, including the 'bar' chart we see above,\n",
    "or a horizontally oriented version in a 'barh' chart:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "trip_mode_counts.plot(kind='barh');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "or a 'pie' chart:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "trip_mode_counts.plot(kind='pie');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You might notice the plotting function isn't necessarily \n",
    "smart about things like overlapping labels. For a quick\n",
    "visualization created to help you understand your own data,\n",
    "this might not be a big deal, but for generating figures\n",
    "that will be inserted into reports or shared with others,\n",
    "you'll want to manage these kinds of problems by manipulating\n",
    "the visualization data before plotting it."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Customizing Plots\n",
    "\n",
    "If the default output isn't exactly what you want, it\n",
    "is possible to customize the output, both by giving additional\n",
    "arguments to the `plot` method, and by manipulating the\n",
    "resulting chart (actually a `Axes` object) before \n",
    "rendering the results.\n",
    "\n",
    "The arguments that the `plot` method will accept vary\n",
    "depending on the plot kind, to customize\n",
    "the appearance of the result. For example, the `barh` \n",
    "plot can accept arguments for `color` and `figsize` to\n",
    "make a tall figure with red bars:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "trip_mode_counts.plot(kind='barh', color='red');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "But using the `color` argument on a pie chart doens't make\n",
    "sense and results in an error:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pie() got an unexpected keyword argument 'color'\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "try:\n",
    "    trip_mode_counts.plot(kind='pie', color='red')\n",
    "except TypeError as err:\n",
    "    print(err)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A more powerful set of figure customization tools is \n",
    "available by manipulating the return value of the `plot`\n",
    "method, which is a matplotlib `Axes` object. \n",
    "This object is can be further modified or customized to create a well\n",
    "crafted output figure.  For example, we can change the\n",
    "colors, add some axis labels, and format the tick marks like this:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = trip_mode_counts.plot(kind='bar')\n",
    "ax.set_title(\"Trip Mode Frequency\", fontweight='bold')\n",
    "ax.set_xlabel(\"Trip Mode\")\n",
    "ax.set_ylabel(\"Number of Trips\");\n",
    "ax.set_yticklabels([f\"{i:,.0f}\" for i in ax.get_yticks()])\n",
    "ax.set_yticks([5000,15000,25000,35000], minor=True);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This figure has a lot of detail that is probably unnecessary\n",
    "for our presentation. In particular, there are a lot of different\n",
    "variations of transit modes, but most have a trivial share of\n",
    "trips (at least within the Jupiter study area).  It might be better\n",
    "to aggregate all the transit trips into a single bucket for this \n",
    "figure.  We could do so in a variety of ways -- we could manipulate\n",
    "the final counts to sum up all the transit parts, or we could manipulate\n",
    "the original source data before we tally the numbers.  Let's do the \n",
    "latter: we'll add a new code (21) to the dictionary for general transit, \n",
    "map all the transit modes to it, and recompute the tally."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DRIVEALONEFREE    77187\n",
       "DRIVEALONEPAY      6659\n",
       "SHARED2GP         19264\n",
       "SHARED2PAY         1348\n",
       "SHARED3GP         10355\n",
       "SHARED3PAY          872\n",
       "WALK               3290\n",
       "BIKE               1563\n",
       "SCHBUS             2947\n",
       "TRANSIT             389\n",
       "Name: trip_mode, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tm = {11,12,13,14,15,16,17,18,19}\n",
    "trip_mode_dictionary[21] = 'TRANSIT'\n",
    "trip_mode_counts = trips.trip_mode.map(lambda x: 21 if x in tm else x).value_counts(sort=False)\n",
    "trip_mode_counts.index = trip_mode_counts.index.map(trip_mode_dictionary)\n",
    "trip_mode_counts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = trip_mode_counts.plot(kind='bar', color='green')\n",
    "ax.set_title(\"Trip Mode Frequency\")\n",
    "ax.set_xlabel(\"Trip Mode\")\n",
    "ax.set_ylabel(\"Number of Trips\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plotting Histogram Data\n",
    "\n",
    "We'll create some histograms of household income using data from the \n",
    "example `households` data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "hh = pd.read_csv(tt.data('SERPM8-BASE2015-HOUSEHOLDS'), index_col=0)\n",
    "hh.set_index('hh_id', inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 18178 entries, 1690841 to 1726370\n",
      "Data columns (total 8 columns):\n",
      "home_mgra       18178 non-null int64\n",
      "income          18178 non-null int64\n",
      "autos           18178 non-null int64\n",
      "transponder     18178 non-null int64\n",
      "cdap_pattern    18178 non-null object\n",
      "jtf_choice      18178 non-null int64\n",
      "autotech        18178 non-null int64\n",
      "tncmemb         18178 non-null int64\n",
      "dtypes: int64(7), object(1)\n",
      "memory usage: 1.2+ MB\n"
     ]
    }
   ],
   "source": [
    "hh.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As with plotting general figures, pandas includes a pre-made method for\n",
    "making simple histograms, using the `hist` method on a pandas.Series."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "hh.income.hist();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Also like the `plot` method, the `hist` method includes\n",
    "a limited ability to customize the output by passing \n",
    "certain arguments.  For example, we can increase the\n",
    "number of bins from the default 10 to a more interesting\n",
    "50, get rid of the grid lines, and change the color to\n",
    "red:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "hh.income.hist(bins=50, grid=False, color='red');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It's also possible to give explicit boundaries to the bins\n",
    "argument of `hist` by using a list or array, but this is\n",
    "not generally useful as this function doesn't properly\n",
    "normalize the result, giving a histogram that is at best\n",
    "misleading:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYQAAAD8CAYAAAB3u9PLAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAFNxJREFUeJzt3X+s3fV93/Hnq/wKNVkwJVw5tjU7qluVzBqhV4Qs03QTWjCkGqkUNCMUTELkaoMqWSxNpv2DthkSnUoykWYk7vAgLY3D8mNY1BlzKVdR/uBnSzGGUG7ACwYPmpGQ3ETL6uy9P87HyYk599e5957re8/zIR2d73mfz/fH29/LefH9nu85J1WFJEk/t9QbIEk6MRgIkiTAQJAkNQaCJAkwECRJjYEgSQIMBElSYyBIkgADQZLUnLzUGzCds88+uzZs2ND3/D/4wQ9YtWrVwm3QMjBsPQ9bv2DPw2I+PT/22GPfrqo3z3W+EzoQNmzYwKOPPtr3/OPj44yNjS3cBi0Dw9bzsPUL9jws5tNzkv/Zz3yeMpIkAQaCJKkxECRJgIEgSWoMBEkSYCBIkhoDQZIEGAiSpGbGQEjyhiQPJ/nbJAeT/H6rb0zyUJJnk3whyamtflp7PNGe39C1rBta/ZkklyxWU5KkuZvNJ5V/BLynqiaTnAJ8PclXgY8Bn6yqPUk+A1wL3Nbuv1NVv5hkK/CHwL9Kci6wFXgb8BbgL5P8UlX9eBH6mtaGnX/Rs37o5vcOeEsk6cQx4xFCdUy2h6e0WwHvAb7Y6ncC72vTl7fHtOcvSpJW31NVP6qq54EJ4IIF6UKSNG+z+i6jJCcBjwG/CHwa+Cbw3ao62oYcBta26bXACwBVdTTJa8AvtPqDXYvtnqd7XduB7QAjIyOMj4/PraMuk5OTPeffsfno6wfDvNZ1opiq55Vq2PoFex4WS9HzrAKhndY5L8mZwFeAX+k1rN1niuemqh+/rl3ALoDR0dGazxdaTfXlUNdMdcroqv7XdaIYti8BG7Z+wZ6HxVL0PKerjKrqu8A4cCFwZpJjgbIOeKlNHwbWA7Tn3wS82l3vMY8kaYnN5iqjN7cjA5KcDvwa8DTwAPD+NmwbcE+b3tse057/q6qqVt/arkLaCGwCHl6oRiRJ8zObU0ZrgDvb+wg/B9xdVfcmeQrYk+TfA38D3N7G3w78aZIJOkcGWwGq6mCSu4GngKPAdUtxhZEkqbcZA6GqngDe3qP+HD2uEqqq/wNcMcWybgJumvtmSpIWm59UliQBBoIkqTEQJEmAgSBJagwESRJgIEiSGgNBkgQYCJKkxkCQJAEGgiSpMRAkSYCBIElqDARJEjDLX0wbFhum+iW1m9874C2RpMHzCEGSBBgIkqTGQJAkAQaCJKkxECRJgIEgSWoMBEkSYCBIkhoDQZIEGAiSpMZAkCQBswiEJOuTPJDk6SQHk3yk1X8vyYtJHm+3y7rmuSHJRJJnklzSVd/SahNJdi5OS5Kkfszmy+2OAjuq6q+TvBF4LMn+9twnq+qPugcnORfYCrwNeAvwl0l+qT39aeDXgcPAI0n2VtVTC9GIJGl+ZgyEqjoCHGnT30/yNLB2mlkuB/ZU1Y+A55NMABe05yaq6jmAJHvaWANBkk4AqarZD042AF8D/gnwMeAa4HvAo3SOIr6T5I+BB6vqz9o8twNfbYvYUlUfbvUPAO+oquuPW8d2YDvAyMjIr+7Zs6ff3picnOSMM854Xf3Ai6/NaTmb176p720YtKl6XqmGrV+w52Exn57f/e53P1ZVo3Odb9a/h5DkDOBLwEer6ntJbgM+DlS7vwX4EJAesxe93694XRpV1S5gF8Do6GiNjY3NdhNfZ3x8nF7zXzPF7x5M5dBV/W/DoE3V80o1bP2CPQ+Lpeh5VoGQ5BQ6YXBXVX0ZoKpe7nr+T4B728PDwPqu2dcBL7XpqeqSpCU2m6uMAtwOPF1Vn+iqr+ka9pvAk216L7A1yWlJNgKbgIeBR4BNSTYmOZXOG897F6YNSdJ8zeYI4V3AB4ADSR5vtd8BrkxyHp3TPoeA3wKoqoNJ7qbzZvFR4Lqq+jFAkuuB+4CTgN1VdXABe5EkzcNsrjL6Or3fF9g3zTw3ATf1qO+bbj5J0tLxk8qSJMBAkCQ1BoIkCTAQJEmNgSBJAgwESVIz66+u0PJw4MXX5vzVHMvZjs1Hh6pfsOdhcceWVQNfp0cIkiTAQJAkNQaCJAkwECRJjYEgSQIMBElSYyBIkgADQZLUGAiSJMBAkCQ1BoIkCTAQJEmNgSBJAgwESVJjIEiSAANBktQYCJIkwECQJDUzBkKS9UkeSPJ0koNJPtLqZyXZn+TZdr+61ZPk1iQTSZ5Icn7Xsra18c8m2bZ4bUmS5mo2RwhHgR1V9SvAhcB1Sc4FdgL3V9Um4P72GOBSYFO7bQdug06AADcC7wAuAG48FiKSpKU3YyBU1ZGq+us2/X3gaWAtcDlwZxt2J/C+Nn058LnqeBA4M8ka4BJgf1W9WlXfAfYDWxa0G0lS306ey+AkG4C3Aw8BI1V1BDqhkeScNmwt8ELXbIdbbar68evYTufIgpGREcbHx+eyiT9jcnKy5/w7Nh+d03Lmsw2DNnL63PtbzoatX7DnYTHV69dimnUgJDkD+BLw0ar6XpIph/ao1TT1ny1U7QJ2AYyOjtbY2NhsN/F1xsfH6TX/NTv/Yk7LOXRV/9swaJ+66x5uOTCnnF/Wdmw+OlT9gj0Pizu2rOr5+rWYZnWVUZJT6ITBXVX15VZ+uZ0Kot2/0uqHgfVds68DXpqmLkk6AczmKqMAtwNPV9Unup7aCxy7UmgbcE9X/ep2tdGFwGvt1NJ9wMVJVrc3ky9uNUnSCWA2x2DvAj4AHEjyeKv9DnAzcHeSa4FvAVe05/YBlwETwA+BDwJU1atJPg480sb9QVW9uiBdSJLmbcZAqKqv0/v8P8BFPcYXcN0Uy9oN7J7LBkqSBsNPKkuSAANBktQYCJIkwECQJDUGgiQJMBAkSY2BIEkCDARJUmMgSJIAA0GS1AzX98kOyIYZvl770M3vHdCWSNLseYQgSQIMBElSYyBIkgADQZLUGAiSJMBAkCQ1BoIkCTAQJEmNgSBJAgwESVJjIEiSAANBktQYCJIkwECQJDUzBkKS3UleSfJkV+33kryY5PF2u6zruRuSTCR5JsklXfUtrTaRZOfCtyJJmo/ZHCHcAWzpUf9kVZ3XbvsAkpwLbAXe1ub5T0lOSnIS8GngUuBc4Mo2VpJ0gpjxB3Kq6mtJNsxyeZcDe6rqR8DzSSaAC9pzE1X1HECSPW3sU3PeYknSopjPewjXJ3minVJa3WprgRe6xhxutanqkqQTRL8/oXkb8HGg2v0twIeA9Bhb9A6e6rXgJNuB7QAjIyOMj4/3uYkwOTnZc/4dm4/OaTlz3YaZlj+fnmYycvrc+1vOhq1fsOdhMdXr12LqKxCq6uVj00n+BLi3PTwMrO8aug54qU1PVT9+2buAXQCjo6M1NjbWzyYCnRfeXvNfM8NvHh/v0FVz24aZlj/X5c3Fp+66h1sODM9PZe/YfHSo+gV7HhZ3bFnV8/VrMfV1yijJmq6HvwkcuwJpL7A1yWlJNgKbgIeBR4BNSTYmOZXOG897+99sSdJCmzFyk3weGAPOTnIYuBEYS3IendM+h4DfAqiqg0nupvNm8VHguqr6cVvO9cB9wEnA7qo6uODdSJL6NpurjK7sUb59mvE3ATf1qO8D9s1p6yRJA+MnlSVJgIEgSWoMBEkSYCBIkhoDQZIEGAiSpMZAkCQBBoIkqTEQJEmAgSBJagwESRJgIEiSGgNBkgQYCJKkxkCQJAH9/6bysrNhjj+bKUnDZmgC4UQyXTgduvm9A9wSSfopTxlJkgADQZLUGAiSJMD3EGal+5z/Yp/jn++b3zs2L9CGSBo6HiFIkgADQZLUeMpojgZ5+kiSBskjBEkSMItASLI7yStJnuyqnZVkf5Jn2/3qVk+SW5NMJHkiyfld82xr459Nsm1x2pEk9Ws2Rwh3AFuOq+0E7q+qTcD97THApcCmdtsO3AadAAFuBN4BXADceCxEJEknhhkDoaq+Brx6XPly4M42fSfwvq7656rjQeDMJGuAS4D9VfVqVX0H2M/rQ0aStIT6fQ9hpKqOALT7c1p9LfBC17jDrTZVXZJ0gljoq4zSo1bT1F+/gGQ7ndNNjIyMMD4+3vfGTE5O/mT+HZuP9r2cqUy1bYuxrtkaOX1p1z9ow9Yv2POw6H79GpR+A+HlJGuq6kg7JfRKqx8G1neNWwe81Opjx9XHey24qnYBuwBGR0drbGys17BZGR8f59j81yzC118fumqsZ30x1jVbOzYf5ZYDw3M18bD1C/Y8LO7Ysor5vP71o99TRnuBY1cKbQPu6apf3a42uhB4rZ1Sug+4OMnq9mbyxa0mSTpBzBi5ST5P5//uz05ymM7VQjcDdye5FvgWcEUbvg+4DJgAfgh8EKCqXk3yceCRNu4Pqur4N6qXHT+kJmklmTEQqurKKZ66qMfYAq6bYjm7gd1z2jpJ0sD4SWVJEmAgSJIaA0GSBBgIkqTGQJAkASv89xAOvPjakn5ITJKWE48QJEmAgSBJagwESRKwwt9DGKQNvlchaZnzCEGSBBgIkqTGQJAkAQaCJKkxECRJgIEgSWoMBEkSYCBIkhoDQZIEGAiSpMZAkCQBBoIkqTEQJEmAgSBJagwESRIwz0BIcijJgSSPJ3m01c5Ksj/Js+1+dasnya1JJpI8keT8hWhAkrQwFuII4d1VdV5VjbbHO4H7q2oTcH97DHApsKndtgO3LcC6JUkLZDFOGV0O3Nmm7wTe11X/XHU8CJyZZM0irF+S1If5BkIB/yPJY0m2t9pIVR0BaPfntPpa4IWueQ+3miTpBDDf31R+V1W9lOQcYH+Sb0wzNj1q9bpBnWDZDjAyMsL4+HjfGzdyOuzYfLTv+ZejYet52PoFex4Wk5OT83r968e8AqGqXmr3ryT5CnAB8HKSNVV1pJ0SeqUNPwys75p9HfBSj2XuAnYBjI6O1tjYWN/b96m77uGWA/PNvOVlx+ajQ9XzsPUL9jws7tiyivm8/vWj71NGSVYleeOxaeBi4ElgL7CtDdsG3NOm9wJXt6uNLgReO3ZqSZK09OYTuSPAV5IcW86fV9V/T/IIcHeSa4FvAVe08fuAy4AJ4IfAB+exbknSAus7EKrqOeCf9qj/b+CiHvUCrut3fZKkxeUnlSVJgIEgSWoMBEkSYCBIkhoDQZIEGAiSpMZAkCQBBoIkqTEQJEmAgSBJagwESRJgIEiSGgNBkgQYCJKkxkCQJAEGgiSpMRAkSYCBIElqDARJEmAgSJIaA0GSBBgIkqTGQJAkAQaCJKkxECRJwBIEQpItSZ5JMpFk56DXL0nqbaCBkOQk4NPApcC5wJVJzh3kNkiSehv0EcIFwERVPVdV/xfYA1w+4G2QJPUw6EBYC7zQ9fhwq0mSlliqanArS64ALqmqD7fHHwAuqKrf7hqzHdjeHv4y8Mw8Vnk28O15zL8cDVvPw9Yv2POwmE/P/7iq3jzXmU7uc2X9Ogys73q8Dnipe0BV7QJ2LcTKkjxaVaMLsazlYth6HrZ+wZ6HxVL0POhTRo8Am5JsTHIqsBXYO+BtkCT1MNAjhKo6muR64D7gJGB3VR0c5DZIknob9CkjqmofsG9Aq1uQU0/LzLD1PGz9gj0Pi4H3PNA3lSVJJy6/ukKSBKzQQFhuX4+RZH2SB5I8neRgko+0+llJ9id5tt2vbvUkubX190SS87uWta2NfzbJtq76ryY50Oa5NUmmW8cAez8pyd8kubc93pjkobY9X2gXH5DktPZ4oj2/oWsZN7T6M0ku6ar3/DuYah0D6vfMJF9M8o22v9+50vdzkn/b/q6fTPL5JG9Yafs5ye4kryR5squ2ZPt1unVMq6pW1I3Om9XfBN4KnAr8LXDuUm/XDNu8Bji/Tb8R+Ds6X+3xH4Cdrb4T+MM2fRnwVSDAhcBDrX4W8Fy7X92mV7fnHgbe2eb5KnBpq/dcxwB7/xjw58C97fHdwNY2/RngX7fpfwN8pk1vBb7Qps9t+/g0YGPb9ydN93cw1ToG1O+dwIfb9KnAmSt5P9P54OnzwOld//bXrLT9DPwL4Hzgya7aku3XqdYxYx+D+g9hULf2j3Zf1+MbgBuWervm2MM9wK/T+VDemlZbAzzTpj8LXNk1/pn2/JXAZ7vqn221NcA3uuo/GTfVOgbU5zrgfuA9wL3tj/fbwMnH70s6V6a9s02f3Mbl+P17bNxUfwfTrWMA/f4jOi+OOa6+YvczP/12grPafrsXuGQl7mdgAz8bCEu2X6dax0w9rMRTRsv66zHaIfLbgYeAkao6AtDuz2nDpupxuvrhHnWmWccg/Efg3wH/rz3+BeC7VXW0x3b+pLf2/Gtt/Fz/LaZbx2J7K/D3wH9J5zTZf06yihW8n6vqReCPgG8BR+jst8dY2fv5mKXcr329Dq7EQEiP2rK4lCrJGcCXgI9W1femG9qjVn3Ul0yS3wBeqarHuss9htYMzy2nf4uT6ZxWuK2q3g78gM5h/lSWU289tXPal9M5zfMWYBWdbzs+3krazzMZRC999b8SA2HGr8c4ESU5hU4Y3FVVX27ll5Osac+vAV5p9al6nK6+rkd9unUstncB/zLJITrfevseOkcMZyY59vmY7u38SW/t+TcBrzL3f4tvT7OOxXYYOFxVD7XHX6QTECt5P/8a8HxV/X1V/QPwZeCfsbL38zFLuV/7eh1ciYGw7L4eo10xcDvwdFV9ouupvcCxKw220Xlv4Vj96nYlwYXAa+1w8T7g4iSr2/+ZXUznvOkR4PtJLmzruvq4ZfVax6Kqqhuqal1VbaCzj/6qqq4CHgDe32N7urfz/W18tfrWdnXKRmATnTfgev4dtHmmWseiqqr/BbyQ5Jdb6SLgKVbwfqZzqujCJD/ftulYzyt2P3dZyv061TqmN4g3lgZ9o/MO+9/Rufrgd5d6e2axvf+czuHcE8Dj7XYZnfOg9wPPtvuz2vjQ+aGhbwIHgNGuZX0ImGi3D3bVR4En2zx/zE8/lNhzHQPuf4yfXmX0Vjr/oU8A/xU4rdXf0B5PtOff2jX/77a+nqFdfTHd38FU6xhQr+cBj7Z9/d/oXE2yovcz8PvAN9p2/SmdK4VW1H4GPk/nPZJ/oPN/59cu5X6dbh3T3fyksiQJWJmnjCRJfTAQJEmAgSBJagwESRJgIEiSGgNBkgQYCJKkxkCQJAHw/wFx9QRkz5c8gwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "bins = np.array([0,10,20,40,60,70,80,90,100,125,150,200,1000]) * 1000\n",
    "hh.income.hist(bins=bins);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Instead, if non-uniform bin sizes are desired, it's better\n",
    "to use the `hist` function from a matplotlib `Axes`, which allows for\n",
    "correct normalization for density:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "ax.hist(hh.income, bins=bins, density=True);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You'll note that the y-axis on this figure has changed scale, as\n",
    "instead of giving the count of observations in each bin it now \n",
    "gives the density (i.e., expected number of households within each \n",
    "one-dollar-width interval, averaged across all such intervals in each bin).\n",
    "The resulting figure looks much more similar to the red histogram\n",
    "shown above."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Also like `plot`, the return value of the `hist`\n",
    "method is a matplotlib `Axes` object, \n",
    "that can be further modified or customized to create a well\n",
    "crafted output figure.  For example, we can change the\n",
    "plot limits on the x axis so we don't give so much area\n",
    "to plot a long tail, add some axis labels, and format the \n",
    "tick marks like this:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = hh.income.hist(grid=False, bins=80)\n",
    "ax.set_xlim(0,350_000)\n",
    "ax.set_title(\"Household Income Histogram\");\n",
    "ax.set_xticklabels([f\"${i/1000:.0f}K\" for i in ax.get_xticks()]);\n",
    "ax.set_ylabel(\"Relative Frequency\");\n",
    "ax.set_yticks([]);"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
