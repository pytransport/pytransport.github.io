{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:39.949928Z",
     "start_time": "2020-03-20T04:30:38.872308Z"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import larch\n",
    "import os\n",
    "import gzip"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Practical Mode Choice\n",
    "\n",
    "The practical use of discrete choice models for transportation forecasting includes several distinct elements:\n",
    "\n",
    "- Managing data\n",
    "- Specialized software tools\n",
    "- Building useful models\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Formats"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Data for discrete choice models is generally structured in one of two basic formats: \n",
    "\n",
    "- case-only (\"idco\") format (or \"IDCase\" or \"wide\")\n",
    "    - each record contains all the information for mode choice over\n",
    "      alternatives for a single trip\n",
    "    - there is one row of data per decision maker\n",
    "    - there are many columns of data describing all of the alternatives\n",
    "- case-alternative (\"idca\") format (or \"IDCase-IDAlt\" or \"tall\")\n",
    "    - each record contains all the information for a single alternative \n",
    "      available to a single decision maker \n",
    "    - there is one row for each alternative for each decision makers\n",
    "    - there are fewer columns as data that varies by alternative is\n",
    "      all in the same column"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### idco Format\n",
    "\n",
    "In the **idco** case-only format, each record provides all the relevant information\n",
    "about an individual choice, including the variables related to the decision maker\n",
    "or the choice itself, as well as alternative related variables for all available\n",
    "alternatives and a variable indicating which alternative was chosen.\n",
    "\n",
    "caseid | Income | Alt 1 Time | Alt 1 Cost | Alt 2 Time | Alt 2 Cost | Alt 3 Time | Alt 3 Cost | Chosen Alt\n",
    "------ | ------ | ---------- | ---------- | ---------- | ---------- | ---------- | ---------- | ----------\n",
    "1      | 30,000 | 30         | 150        | 40         | 100        | 20         | 200        | 1\n",
    "2      | 30,000 | 25         | 125        | 35         | 100        | -1         | -1         | 2\n",
    "3      | 40,000 | 40         | 125        | 50         | 75         | 30         | 175        | 3\n",
    "4      | 50,000 | 15         | 225        | 20         | 150        | 10         | 250        | 3\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### idca Format\n",
    "\n",
    "In the **idca** case-alternative format, each record can include information on the variables\n",
    "related to the decision maker or the choice itself, the attributes of that\n",
    "particular alternative, and a choice variable that indicates whether the\n",
    "alternative was or was not chosen.\n",
    "\n",
    "\n",
    "caseid | Alt Number | Number Of Alts | Income | Time | Cost | Chosen\n",
    "------ | ---------- | -------------- | ------ | ---- | ---- | ------\n",
    "1      | 1          | 3              | 30,000 | 30   | 150  | 1\n",
    "1      | 2          | 3              | 30,000 | 40   | 100  | 0\n",
    "1      | 3          | 3              | 30,000 | 20   | 200  | 0\n",
    "2      | 1          | 2              | 30,000 | 25   | 125  | 0\n",
    "2      | 2          | 2              | 30,000 | 35   | 100  | 1\n",
    "3      | 1          | 3              | 40,000 | 40   | 125  | 0\n",
    "3      | 2          | 3              | 40,000 | 50   | 75   | 0\n",
    "3      | 3          | 3              | 40,000 | 30   | 175  | 1\n",
    "4      | 1          | 3              | 50,000 | 15   | 225  | 0\n",
    "4      | 2          | 3              | 50,000 | 20   | 150  | 0\n",
    "4      | 3          | 3              | 50,000 | 10   | 250  | 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Format Agnositicism\n",
    "\n",
    "In the abstract, these two data formats are completely interchangable: any data that\n",
    "you can express in `idco` format, you can also express in `idca` format, and vice versa.\n",
    "The preference for one format or another is generally for convenience, or because one\n",
    "format or the other is much more memory efficient for a certain data set."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Many specialized tools for discrete choice model estimation require data to be either \n",
    "in `idco` or `idca` format.  However, Larch, which we will use here, does not demand you\n",
    "employ one or the other of these data formats.  You can use either, or both\n",
    "simultaneously, to express utility function data."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note: Internally, Larch uses two distinct sub-types for data in `idca` format: a dense version\n",
    "labeled as `idca` and a sparse version labeled as `idce`.  The dense `idca` version\n",
    "enforces a constraint that every case must have a row for every alternative, even\n",
    "when the alternative is not available and has no meaningful data.  In this case, the\n",
    "data storage is no more space efficient than `idco` format, but the utility function\n",
    "can be computed in an efficient fashion using simple linear algebra tools. The sparse `idce`\n",
    "version allows such unavailable alternative to be omitted entirely, but it must\n",
    "maintain an separate but associated lookup table to find the first alternative in\n",
    "each case efficiently."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Important Data Features"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition to the generalized storage of data in tables, discrete choice model data also \n",
    "has a number of special features that need to be defined explicitly:\n",
    "    \n",
    "- What is the set of possible alternatives that might be chosen by any decision maker\n",
    "- Of the possible alternatives, which are actually available for each individual decision maker\n",
    "- Of the available alternatives, which is actually chosen by each individual decision maker"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Possible Alternatives**\n",
    "\n",
    "The raw data may help guide the process for identifying each of these features, but\n",
    "it does not necessarily specifically determine them.  For example, the raw data may \n",
    "identify a set of modal alternatives as:\n",
    "\n",
    "- Drive alone\n",
    "- Shared ride driver\n",
    "- Shared ride passenger\n",
    "- Rail\n",
    "- Bus\n",
    "- Walk\n",
    "\n",
    "It is generally difficult (but not impossible) to disambiguate these modes into\n",
    "more detailed categories, e.g. to split the \"Bus\" mode into express bus vs local bus.\n",
    "Alternatively, it is possible to merge modes, e.g. combining the two shared ride options,\n",
    "or combining rail and bus into a single transit mode.\n",
    "\n",
    "In most applications, the set of *possible* alternatives is common across all decision \n",
    "makers.  This facilitates a more stratightforward set up of what the utility of each\n",
    "possible alternative should look like, and allows for the use of alternative specific\n",
    "constants."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Available Alternatives**\n",
    "\n",
    "In addition to defining the possible alternatives, the definition of the available alternatives\n",
    "is also important.  Which alternatives are actually available may vary across decision makers.\n",
    "For example, the \"drive alone\" alternative may be considered unavailable for travelers who are \n",
    "too young to have a driver's license, or who do not own a car."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Chosen Alternatives**\n",
    "\n",
    "The chosen alternative is that which is actually observed to have been chosen by the\n",
    "decision maker.  In `idco` data, this can be expressed as a categorical data column that\n",
    "indicates the actually chosen alternative, or it can be expressed as a series of dummy\n",
    "variable columns, one for each possible alternative.  The latter is sometimes called \n",
    "*one hot encoding*.\n",
    "\n",
    "Categorical encoding of `idco` choice data looks like this:\n",
    "\n",
    "caseid | Chosen Alt\n",
    "------ | ----------\n",
    "1      | 1\n",
    "2      | 2\n",
    "3      | 3\n",
    "4      | 3\n",
    "\n",
    "Dummy or \"one hot\" encoding of the same `idco` choice data looks like this:\n",
    "\n",
    "caseid | Choose 1 | Choose 2 | Choose 3 \n",
    "------ | -------- | -------- | -------- \n",
    "1      | 1        | 0        | 0        \n",
    "2      | 0        | 1        | 0        \n",
    "3      | 0        | 0        | 1        \n",
    "4      | 0        | 0        | 1        \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Example Data in Larch"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The MTC sample dataset used here is the same used in the [Self Instructing Course in Mode Choice Modeling: Multinomial and Nested Logit Models](http://www.caee.utexas.edu/prof/bhat/courses/lm_draft_060131final-060630.pdf):\n",
    "\n",
    "> The San Francisco Bay Area work mode choice data set comprises 5029 home-to-work commute trips in the\n",
    "> San Francisco Bay Area. The data is drawn from the San Francisco Bay Area Household Travel Survey\n",
    "> conducted by the Metropolitan Transportation Commission (MTC) in the spring and fall of 1990. This\n",
    "> survey included a one day travel diary for each household member older than five years and detailed\n",
    "> individual and household socio-demographic information."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    "In this example we will import the MTC example dataset, starting from a csv\n",
    "text file in |idca| format.  Suppose that data file is gzipped, named \"MTCwork.csv.gz\" and\n",
    "is located in the current directory (use [`os.getcwd`](https://docs.python.org/3/library/os.html#os.getcwd) \n",
    "to see what is the\n",
    "current directory).  For this example, we'll use the `example_file` method to find\n",
    "the file that comes with Larch."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:39.955721Z",
     "start_time": "2020-03-20T04:30:39.952245Z"
    }
   },
   "outputs": [],
   "source": [
    "from larch.data_warehouse import example_file"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    "We can take a peek at the contents of the file, examining the first 10 lines:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:39.964200Z",
     "start_time": "2020-03-20T04:30:39.958907Z"
    },
    "doc_only": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "casenum,altnum,chose,ivtt,ovtt,tottime,totcost,hhid,perid,numalts,dist,wkzone,hmzone,rspopden,rsempden,wkpopden,wkempden,vehavdum,femdum,age,drlicdum,noncadum,numveh,hhsize,hhinc,famtype,hhowndum,numemphh,numadlt,nmlt5,nm5to11,nm12to16,wkccbd,wknccbd,corredis,vehbywrk,vocc,wgt\n",
      " 1,1,1,13.38,2,15.38,70.63,2,1,2,7.69,664,726,15.52,9.96,37.26,3.48,1,0,35,1,0,4,1,42.5,7,0,1,1,0,0,0,0,0,0,4,1,1\n",
      " 1,2,0,18.38,2,20.38,35.32,2,1,2,7.69,664,726,15.52,9.96,37.26,3.48,1,0,35,1,0,4,1,42.5,7,0,1,1,0,0,0,0,0,0,4,1,1\n",
      " 1,3,0,20.38,2,22.38,20.18,2,1,2,7.69,664,726,15.52,9.96,37.26,3.48,1,0,35,1,0,4,1,42.5,7,0,1,1,0,0,0,0,0,0,4,1,1\n",
      " 1,4,0,25.9,15.2,41.1,115.64,2,1,2,7.69,664,726,15.52,9.96,37.26,3.48,1,0,35,1,0,4,1,42.5,7,0,1,1,0,0,0,0,0,0,4,1,1\n",
      " 1,5,0,40.5,2,42.5,0,2,1,2,7.69,664,726,15.52,9.96,37.26,3.48,1,0,35,1,0,4,1,42.5,7,0,1,1,0,0,0,0,0,0,4,1,1\n",
      " 2,1,0,29.92,10,39.92,390.81,3,1,2,11.62,738,9,35.81,53.33,32.91,764.19,1,0,40,1,0,1,1,17.5,7,0,1,1,0,0,0,1,0,1,1,0,1\n",
      " 2,2,0,34.92,10,44.92,195.4,3,1,2,11.62,738,9,35.81,53.33,32.91,764.19,1,0,40,1,0,1,1,17.5,7,0,1,1,0,0,0,1,0,1,1,0,1\n",
      " 2,3,0,21.92,10,31.92,97.97,3,1,2,11.62,738,9,35.81,53.33,32.91,764.19,1,0,40,1,0,1,1,17.5,7,0,1,1,0,0,0,1,0,1,1,0,1\n",
      " 2,4,1,22.96,14.2,37.16,185,3,1,2,11.62,738,9,35.81,53.33,32.91,764.19,1,0,40,1,0,1,1,17.5,7,0,1,1,0,0,0,1,0,1,1,0,1\n",
      "\n"
     ]
    }
   ],
   "source": [
    "with gzip.open(example_file(\"MTCwork.csv.gz\"), 'rt') as previewfile:\n",
    "    print(*(next(previewfile) for x in range(10)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The first line of the file contains column headers. After that, each line represents\n",
    "an alternative available to a decision maker. In our sample data, we see the first 5\n",
    "lines of data share a ``caseid`` of 1, indicating that they are 5 different alternatives\n",
    "available to the first decision maker.  The identity of the alternatives is given by the\n",
    "number in the column ``altid``. The observed choice of the decision maker is\n",
    "indicated in the column ``chose`` with a 1 in the appropriate row. \n",
    "\n",
    "We can load this data easily using pandas.  We'll also set the index of the resulting DataFrame to\n",
    "be the case and alt identifiers.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:40.053255Z",
     "start_time": "2020-03-20T04:30:39.968378Z"
    }
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv(example_file(\"MTCwork.csv.gz\"))\n",
    "df.set_index(['casenum','altnum'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:40.093434Z",
     "start_time": "2020-03-20T04:30:40.055276Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>chose</th>\n",
       "      <th>ivtt</th>\n",
       "      <th>ovtt</th>\n",
       "      <th>tottime</th>\n",
       "      <th>totcost</th>\n",
       "      <th>hhid</th>\n",
       "      <th>perid</th>\n",
       "      <th>numalts</th>\n",
       "      <th>dist</th>\n",
       "      <th>wkzone</th>\n",
       "      <th>...</th>\n",
       "      <th>numadlt</th>\n",
       "      <th>nmlt5</th>\n",
       "      <th>nm5to11</th>\n",
       "      <th>nm12to16</th>\n",
       "      <th>wkccbd</th>\n",
       "      <th>wknccbd</th>\n",
       "      <th>corredis</th>\n",
       "      <th>vehbywrk</th>\n",
       "      <th>vocc</th>\n",
       "      <th>wgt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>casenum</th>\n",
       "      <th>altnum</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">1</th>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>13.38</td>\n",
       "      <td>2.0</td>\n",
       "      <td>15.38</td>\n",
       "      <td>70.63</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7.69</td>\n",
       "      <td>664</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>18.38</td>\n",
       "      <td>2.0</td>\n",
       "      <td>20.38</td>\n",
       "      <td>35.32</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7.69</td>\n",
       "      <td>664</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>20.38</td>\n",
       "      <td>2.0</td>\n",
       "      <td>22.38</td>\n",
       "      <td>20.18</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7.69</td>\n",
       "      <td>664</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>25.90</td>\n",
       "      <td>15.2</td>\n",
       "      <td>41.10</td>\n",
       "      <td>115.64</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7.69</td>\n",
       "      <td>664</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>40.50</td>\n",
       "      <td>2.0</td>\n",
       "      <td>42.50</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>7.69</td>\n",
       "      <td>664</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">2</th>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>29.92</td>\n",
       "      <td>10.0</td>\n",
       "      <td>39.92</td>\n",
       "      <td>390.81</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>11.62</td>\n",
       "      <td>738</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>34.92</td>\n",
       "      <td>10.0</td>\n",
       "      <td>44.92</td>\n",
       "      <td>195.40</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>11.62</td>\n",
       "      <td>738</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>21.92</td>\n",
       "      <td>10.0</td>\n",
       "      <td>31.92</td>\n",
       "      <td>97.97</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>11.62</td>\n",
       "      <td>738</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>22.96</td>\n",
       "      <td>14.2</td>\n",
       "      <td>37.16</td>\n",
       "      <td>185.00</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>11.62</td>\n",
       "      <td>738</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>58.95</td>\n",
       "      <td>10.0</td>\n",
       "      <td>68.95</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>11.62</td>\n",
       "      <td>738</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">3</th>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>8.60</td>\n",
       "      <td>6.0</td>\n",
       "      <td>14.60</td>\n",
       "      <td>37.76</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4.10</td>\n",
       "      <td>696</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>13.60</td>\n",
       "      <td>6.0</td>\n",
       "      <td>19.60</td>\n",
       "      <td>18.88</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4.10</td>\n",
       "      <td>696</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.33</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>12 rows × 36 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                chose   ivtt  ovtt  tottime  totcost  hhid  perid  numalts  \\\n",
       "casenum altnum                                                               \n",
       "1       1           1  13.38   2.0    15.38    70.63     2      1        2   \n",
       "        2           0  18.38   2.0    20.38    35.32     2      1        2   \n",
       "        3           0  20.38   2.0    22.38    20.18     2      1        2   \n",
       "        4           0  25.90  15.2    41.10   115.64     2      1        2   \n",
       "        5           0  40.50   2.0    42.50     0.00     2      1        2   \n",
       "2       1           0  29.92  10.0    39.92   390.81     3      1        2   \n",
       "        2           0  34.92  10.0    44.92   195.40     3      1        2   \n",
       "        3           0  21.92  10.0    31.92    97.97     3      1        2   \n",
       "        4           1  22.96  14.2    37.16   185.00     3      1        2   \n",
       "        5           0  58.95  10.0    68.95     0.00     3      1        2   \n",
       "3       1           1   8.60   6.0    14.60    37.76     5      1        2   \n",
       "        2           0  13.60   6.0    19.60    18.88     5      1        2   \n",
       "\n",
       "                 dist  wkzone  ...  numadlt  nmlt5  nm5to11  nm12to16  wkccbd  \\\n",
       "casenum altnum                 ...                                              \n",
       "1       1        7.69     664  ...        1      0        0         0       0   \n",
       "        2        7.69     664  ...        1      0        0         0       0   \n",
       "        3        7.69     664  ...        1      0        0         0       0   \n",
       "        4        7.69     664  ...        1      0        0         0       0   \n",
       "        5        7.69     664  ...        1      0        0         0       0   \n",
       "2       1       11.62     738  ...        1      0        0         0       1   \n",
       "        2       11.62     738  ...        1      0        0         0       1   \n",
       "        3       11.62     738  ...        1      0        0         0       1   \n",
       "        4       11.62     738  ...        1      0        0         0       1   \n",
       "        5       11.62     738  ...        1      0        0         0       1   \n",
       "3       1        4.10     696  ...        3      2        0         0       0   \n",
       "        2        4.10     696  ...        3      2        0         0       0   \n",
       "\n",
       "                wknccbd  corredis  vehbywrk  vocc  wgt  \n",
       "casenum altnum                                          \n",
       "1       1             0         0      4.00     1    1  \n",
       "        2             0         0      4.00     1    1  \n",
       "        3             0         0      4.00     1    1  \n",
       "        4             0         0      4.00     1    1  \n",
       "        5             0         0      4.00     1    1  \n",
       "2       1             0         1      1.00     0    1  \n",
       "        2             0         1      1.00     0    1  \n",
       "        3             0         1      1.00     0    1  \n",
       "        4             0         1      1.00     0    1  \n",
       "        5             0         1      1.00     0    1  \n",
       "3       1             1         0      0.33     1    1  \n",
       "        2             1         0      0.33     1    1  \n",
       "\n",
       "[12 rows x 36 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:40.118296Z",
     "start_time": "2020-03-20T04:30:40.096093Z"
    },
    "doc_only": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "MultiIndex: 22033 entries, (1, 1) to (5029, 6)\n",
      "Data columns (total 36 columns):\n",
      " #   Column    Non-Null Count  Dtype  \n",
      "---  ------    --------------  -----  \n",
      " 0   chose     22033 non-null  int64  \n",
      " 1   ivtt      22033 non-null  float64\n",
      " 2   ovtt      22033 non-null  float64\n",
      " 3   tottime   22033 non-null  float64\n",
      " 4   totcost   22033 non-null  float64\n",
      " 5   hhid      22033 non-null  int64  \n",
      " 6   perid     22033 non-null  int64  \n",
      " 7   numalts   22033 non-null  int64  \n",
      " 8   dist      22033 non-null  float64\n",
      " 9   wkzone    22033 non-null  int64  \n",
      " 10  hmzone    22033 non-null  int64  \n",
      " 11  rspopden  22033 non-null  float64\n",
      " 12  rsempden  22033 non-null  float64\n",
      " 13  wkpopden  22033 non-null  float64\n",
      " 14  wkempden  22033 non-null  float64\n",
      " 15  vehavdum  22033 non-null  int64  \n",
      " 16  femdum    22033 non-null  int64  \n",
      " 17  age       22033 non-null  int64  \n",
      " 18  drlicdum  22033 non-null  int64  \n",
      " 19  noncadum  22033 non-null  int64  \n",
      " 20  numveh    22033 non-null  int64  \n",
      " 21  hhsize    22033 non-null  int64  \n",
      " 22  hhinc     22033 non-null  float64\n",
      " 23  famtype   22033 non-null  int64  \n",
      " 24  hhowndum  22033 non-null  int64  \n",
      " 25  numemphh  22033 non-null  int64  \n",
      " 26  numadlt   22033 non-null  int64  \n",
      " 27  nmlt5     22033 non-null  int64  \n",
      " 28  nm5to11   22033 non-null  int64  \n",
      " 29  nm12to16  22033 non-null  int64  \n",
      " 30  wkccbd    22033 non-null  int64  \n",
      " 31  wknccbd   22033 non-null  int64  \n",
      " 32  corredis  22033 non-null  int64  \n",
      " 33  vehbywrk  22033 non-null  float64\n",
      " 34  vocc      22033 non-null  int64  \n",
      " 35  wgt       22033 non-null  int64  \n",
      "dtypes: float64(11), int64(25)\n",
      "memory usage: 6.2 MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can use a specialized data pre-processor built into Larch to convert this\n",
    "single table of data into a few related tables in the appropriate formats.\n",
    "This requires identifying what the \"choice\" column is in this data.  We'll\n",
    "let the pre-processor automatically infer all of the possible alternatives,\n",
    "and use the `crack` argument to tell it to seperate the data into distinct\n",
    "`idca` and `idco` tables as appropriate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:40.158905Z",
     "start_time": "2020-03-20T04:30:40.120513Z"
    }
   },
   "outputs": [],
   "source": [
    "d = larch.DataFrames.from_idce(df, choice='chose', crack=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    "By setting `crack` to `True`, Larch automatically analyzed the data to find variables that do not vary within\n",
    "cases, and transformed those into `idco` format variables.  If you would prefer that\n",
    "Larch not do this you can omit this argument or set it to False.  This is particularly\n",
    "important for larger datasets (the data sample included is only a tiny extract of the data\n",
    "that might be available for this kind of model), as breaking the data into seperate `idca` and `idco` parts is\n",
    "a relatively expensive operation, and it is not actually required for most model structures.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:40.166420Z",
     "start_time": "2020-03-20T04:30:40.162597Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Int64Index([1, 2, 3, 4, 5, 6], dtype='int64', name='altnum')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d.alternative_codes()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:40.171625Z",
     "start_time": "2020-03-20T04:30:40.169547Z"
    }
   },
   "outputs": [],
   "source": [
    "d.alternative_names()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The set of all possible alternative codes is deduced automatically from all the values\n",
    "in the `altid` column.  However, the alterative codes are not very descriptive when\n",
    "they are set automatically, as the csv data file does not have enough information to\n",
    "tell what each alternative code number means.  But we can refer to a seperate data \n",
    "dictionary, or our personal knowledge of the data, to assign more human-legible names\n",
    "to the alternative code numbers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:40.175937Z",
     "start_time": "2020-03-20T04:30:40.173342Z"
    }
   },
   "outputs": [],
   "source": [
    "d.set_alternative_names({\n",
    "    1: 'DA',\n",
    "    2: 'SR2',\n",
    "    3: 'SR3+',\n",
    "    4: 'Transit',\n",
    "    5: 'Bike',\n",
    "    6: 'Walk',\n",
    "})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:40.180573Z",
     "start_time": "2020-03-20T04:30:40.177534Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['DA', 'SR2', 'SR3+', 'Transit', 'Bike', 'Walk']"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d.alternative_names()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we want a more detailed look at the data, we can specify `verbose=True` \n",
    "when calling the `info` method on the DataFrames we've set up."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:40.190937Z",
     "start_time": "2020-03-20T04:30:40.182348Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "larch.DataFrames:  (not computation-ready)\n",
      "  n_cases: 5029\n",
      "  n_alts: 6\n",
      "  data_ce: 22033 rows\n",
      "    - ivtt    (22033 non-null float64)\n",
      "    - ovtt    (22033 non-null float64)\n",
      "    - tottime (22033 non-null float64)\n",
      "    - totcost (22033 non-null float64)\n",
      "  data_co:\n",
      "    - hhid     (5029 non-null int64)\n",
      "    - perid    (5029 non-null int64)\n",
      "    - numalts  (5029 non-null int64)\n",
      "    - dist     (5029 non-null float64)\n",
      "    - wkzone   (5029 non-null int64)\n",
      "    - hmzone   (5029 non-null int64)\n",
      "    - rspopden (5029 non-null float64)\n",
      "    - rsempden (5029 non-null float64)\n",
      "    - wkpopden (5029 non-null float64)\n",
      "    - wkempden (5029 non-null float64)\n",
      "    - vehavdum (5029 non-null int64)\n",
      "    - femdum   (5029 non-null int64)\n",
      "    - age      (5029 non-null int64)\n",
      "    - drlicdum (5029 non-null int64)\n",
      "    - noncadum (5029 non-null int64)\n",
      "    - numveh   (5029 non-null int64)\n",
      "    - hhsize   (5029 non-null int64)\n",
      "    - hhinc    (5029 non-null float64)\n",
      "    - famtype  (5029 non-null int64)\n",
      "    - hhowndum (5029 non-null int64)\n",
      "    - numemphh (5029 non-null int64)\n",
      "    - numadlt  (5029 non-null int64)\n",
      "    - nmlt5    (5029 non-null int64)\n",
      "    - nm5to11  (5029 non-null int64)\n",
      "    - nm12to16 (5029 non-null int64)\n",
      "    - wkccbd   (5029 non-null int64)\n",
      "    - wknccbd  (5029 non-null int64)\n",
      "    - corredis (5029 non-null int64)\n",
      "    - vehbywrk (5029 non-null float64)\n",
      "    - vocc     (5029 non-null int64)\n",
      "    - wgt      (5029 non-null int64)\n",
      "  data_av: <populated>\n",
      "  data_ch: chose\n"
     ]
    }
   ],
   "source": [
    "d.info(verbose=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You might notice that the choice and availability information in the data\n",
    "receives special treatment in the `larch.DataFrames` structure.  These two\n",
    "features in the data are seperated from the rest and stored in their own\n",
    "special `pandas.DataFrame` objects."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:40.201659Z",
     "start_time": "2020-03-20T04:30:40.192610Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>altnum</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>casenum</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "altnum     1    2    3    4    5    6\n",
       "casenum                              \n",
       "1        1.0  0.0  0.0  0.0  0.0  0.0\n",
       "2        0.0  0.0  0.0  1.0  0.0  0.0\n",
       "3        1.0  0.0  0.0  0.0  0.0  0.0\n",
       "4        0.0  0.0  0.0  1.0  0.0  0.0\n",
       "5        0.0  1.0  0.0  0.0  0.0  0.0"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d.data_ch.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The availability data in this example has been inferred from the presence\n",
    "or absence of rows in the original csv data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:40.210998Z",
     "start_time": "2020-03-20T04:30:40.203682Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>altnum</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>casenum</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "altnum   1  2  3  4  5  6\n",
       "casenum                  \n",
       "1        1  1  1  1  1  0\n",
       "2        1  1  1  1  1  0\n",
       "3        1  1  1  1  0  0\n",
       "4        1  1  1  1  0  0\n",
       "5        0  1  1  1  1  0"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d.data_av.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Once we have loaded the data like this, it is useful to make a review of the data from a statistical\n",
    "point of view, to make sure that it conforms with our expectations.  One usful tool to do this is\n",
    "with the `describe` method that's part of `pandas`, and can be used on any DataFrame."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:40.303161Z",
     "start_time": "2020-03-20T04:30:40.212845Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hhid</th>\n",
       "      <th>perid</th>\n",
       "      <th>numalts</th>\n",
       "      <th>dist</th>\n",
       "      <th>wkzone</th>\n",
       "      <th>hmzone</th>\n",
       "      <th>rspopden</th>\n",
       "      <th>rsempden</th>\n",
       "      <th>wkpopden</th>\n",
       "      <th>wkempden</th>\n",
       "      <th>...</th>\n",
       "      <th>numadlt</th>\n",
       "      <th>nmlt5</th>\n",
       "      <th>nm5to11</th>\n",
       "      <th>nm12to16</th>\n",
       "      <th>wkccbd</th>\n",
       "      <th>wknccbd</th>\n",
       "      <th>corredis</th>\n",
       "      <th>vehbywrk</th>\n",
       "      <th>vocc</th>\n",
       "      <th>wgt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.0</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.000000</td>\n",
       "      <td>5029.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4682.154703</td>\n",
       "      <td>1.586598</td>\n",
       "      <td>2.0</td>\n",
       "      <td>11.730147</td>\n",
       "      <td>554.781666</td>\n",
       "      <td>486.712667</td>\n",
       "      <td>22.628196</td>\n",
       "      <td>35.332877</td>\n",
       "      <td>57.210072</td>\n",
       "      <td>79.318789</td>\n",
       "      <td>...</td>\n",
       "      <td>2.260091</td>\n",
       "      <td>0.208391</td>\n",
       "      <td>0.194671</td>\n",
       "      <td>0.152913</td>\n",
       "      <td>0.121893</td>\n",
       "      <td>0.167230</td>\n",
       "      <td>0.158680</td>\n",
       "      <td>1.334498</td>\n",
       "      <td>1.055478</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2698.243528</td>\n",
       "      <td>0.796214</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.435474</td>\n",
       "      <td>327.061505</td>\n",
       "      <td>344.231497</td>\n",
       "      <td>85.434143</td>\n",
       "      <td>69.458563</td>\n",
       "      <td>262.055620</td>\n",
       "      <td>166.364233</td>\n",
       "      <td>...</td>\n",
       "      <td>0.984142</td>\n",
       "      <td>0.565447</td>\n",
       "      <td>0.530010</td>\n",
       "      <td>0.444495</td>\n",
       "      <td>0.327195</td>\n",
       "      <td>0.373218</td>\n",
       "      <td>0.365413</td>\n",
       "      <td>0.805854</td>\n",
       "      <td>0.770054</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.260000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.080000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2368.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.430000</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>10.130000</td>\n",
       "      <td>9.710000</td>\n",
       "      <td>11.130000</td>\n",
       "      <td>13.260000</td>\n",
       "      <td>...</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4734.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>7.670000</td>\n",
       "      <td>556.000000</td>\n",
       "      <td>449.000000</td>\n",
       "      <td>15.070000</td>\n",
       "      <td>18.900000</td>\n",
       "      <td>17.390000</td>\n",
       "      <td>23.970000</td>\n",
       "      <td>...</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>6991.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>16.190000</td>\n",
       "      <td>839.000000</td>\n",
       "      <td>796.000000</td>\n",
       "      <td>23.760000</td>\n",
       "      <td>32.170000</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>46.230000</td>\n",
       "      <td>...</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>9438.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>101.470000</td>\n",
       "      <td>1099.000000</td>\n",
       "      <td>1099.000000</td>\n",
       "      <td>5802.000000</td>\n",
       "      <td>1068.000000</td>\n",
       "      <td>7449.000000</td>\n",
       "      <td>1068.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              hhid        perid  numalts         dist       wkzone  \\\n",
       "count  5029.000000  5029.000000   5029.0  5029.000000  5029.000000   \n",
       "mean   4682.154703     1.586598      2.0    11.730147   554.781666   \n",
       "std    2698.243528     0.796214      0.0    11.435474   327.061505   \n",
       "min       2.000000     1.000000      2.0     0.260000     1.000000   \n",
       "25%    2368.000000     1.000000      2.0     3.430000   250.000000   \n",
       "50%    4734.000000     1.000000      2.0     7.670000   556.000000   \n",
       "75%    6991.000000     2.000000      2.0    16.190000   839.000000   \n",
       "max    9438.000000     8.000000      2.0   101.470000  1099.000000   \n",
       "\n",
       "            hmzone     rspopden     rsempden     wkpopden     wkempden  ...  \\\n",
       "count  5029.000000  5029.000000  5029.000000  5029.000000  5029.000000  ...   \n",
       "mean    486.712667    22.628196    35.332877    57.210072    79.318789  ...   \n",
       "std     344.231497    85.434143    69.458563   262.055620   166.364233  ...   \n",
       "min       1.000000     0.000000     0.080000     0.000000     0.000000  ...   \n",
       "25%     200.000000    10.130000     9.710000    11.130000    13.260000  ...   \n",
       "50%     449.000000    15.070000    18.900000    17.390000    23.970000  ...   \n",
       "75%     796.000000    23.760000    32.170000    36.000000    46.230000  ...   \n",
       "max    1099.000000  5802.000000  1068.000000  7449.000000  1068.000000  ...   \n",
       "\n",
       "           numadlt        nmlt5      nm5to11     nm12to16       wkccbd  \\\n",
       "count  5029.000000  5029.000000  5029.000000  5029.000000  5029.000000   \n",
       "mean      2.260091     0.208391     0.194671     0.152913     0.121893   \n",
       "std       0.984142     0.565447     0.530010     0.444495     0.327195   \n",
       "min       1.000000     0.000000     0.000000     0.000000     0.000000   \n",
       "25%       2.000000     0.000000     0.000000     0.000000     0.000000   \n",
       "50%       2.000000     0.000000     0.000000     0.000000     0.000000   \n",
       "75%       3.000000     0.000000     0.000000     0.000000     0.000000   \n",
       "max      10.000000     8.000000     5.000000     4.000000     1.000000   \n",
       "\n",
       "           wknccbd     corredis     vehbywrk         vocc     wgt  \n",
       "count  5029.000000  5029.000000  5029.000000  5029.000000  5029.0  \n",
       "mean      0.167230     0.158680     1.334498     1.055478     1.0  \n",
       "std       0.373218     0.365413     0.805854     0.770054     0.0  \n",
       "min       0.000000     0.000000     0.000000     0.000000     1.0  \n",
       "25%       0.000000     0.000000     1.000000     1.000000     1.0  \n",
       "50%       0.000000     0.000000     1.000000     1.000000     1.0  \n",
       "75%       0.000000     0.000000     1.500000     1.000000     1.0  \n",
       "max       1.000000     1.000000     8.000000     9.000000     1.0  \n",
       "\n",
       "[8 rows x 31 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d.data_co.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "An additional tool that is provided once Larch is loaded is the `statistics` measure, which computes a \n",
    "different set of statistics that might be more useful for reviewing data typically used in\n",
    "discrete choice modeling."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:42.314040Z",
     "start_time": "2020-03-20T04:30:40.304647Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div xmlns=\"http://www.w3.org/2000/svg\"><table class=\"dataframe larch_dataframe\"><thead><th></th><th>description</th><th>n</th><th>minimum</th><th>maximum</th><th>median</th><th>histogram</th><th>mean</th><th>stdev</th><th>zeros</th><th>positives</th><th>negatives</th><th>nonzero_minimum</th><th>nonzero_maximum</th><th>nonzero_mean</th><th>nonzero_stdev</th></thead><tbody><tr><th>hhid</th><td>hhid</td><td>5029</td><td>2</td><td>9438</td><td>4734</td><td><div class=\"figure\" metadata=\"gASV7gEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLDYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ2iWAQAAAAAAAHkBAAAAAAAAdQEAAAAAAACOAQAAAAAAAIUBAAAAAAAAgAEAAAAAAACUAQAAAAAAAG8BAAAAAAAAjwEAAAAAAACsAQAAAAAAAJABAAAAAAAAcwEAAAAAAABNAQAAAAAAAJR0lGKMCWJpbl9lZGdlc5RoBGgHSwCFlGgJh5RSlChLAUsOhZRoDowCZjiUSwBLAYeUUpQoSwNoEk5OTkr/////Sv////9LAHSUYolDcAAAAAAAAABA7MRO7MS+hkDsxE7sxLaWQLETO7ETB6FA7MRO7MSypkAndmIndl6sQLETO7ETBbFATuzETuzas0DsxE7sxLC2QIqd2ImdhrlAJ3ZiJ3ZcvEDETuzETjK/QLETO7ETBMFAAAAAAABvwkCUdJRijBF6ZXJvc19hcmVfZHJvcHBlZJSJjBJyYW5nZV9pc190cnVuY2F0ZWSUSwB1Lg==\" range_is_truncated=\"0\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title></title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 3.272727 20.571429  L 8.307692 20.571429  L 8.307692 1.986649  L 3.272727 1.986649  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 8.307692 20.571429  L 13.342657 20.571429  L 13.342657 3.314133  L 8.307692 3.314133  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 13.342657 20.571429  L 18.377622 20.571429  L 18.377622 3.497234  L 13.342657 3.497234  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 18.377622 20.571429  L 23.412587 20.571429  L 23.412587 2.352851  L 18.377622 2.352851  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 23.412587 20.571429  L 28.447552 20.571429  L 28.447552 2.764829  L 23.412587 2.764829  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 28.447552 20.571429  L 33.482517 20.571429  L 33.482517 2.993706  L 28.447552 2.993706  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 33.482517 20.571429  L 38.517483 20.571429  L 38.517483 2.0782  L 33.482517 2.0782  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 38.517483 20.571429  L 43.552448 20.571429  L 43.552448 3.771886  L 38.517483 3.771886  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 43.552448 20.571429  L 48.587413 20.571429  L 48.587413 2.307076  L 43.552448 2.307076  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_11\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 48.587413 20.571429  L 53.622378 20.571429  L 53.622378 0.979592  L 48.587413 0.979592  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_12\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 53.622378 20.571429  L 58.657343 20.571429  L 58.657343 2.261301  L 53.622378 2.261301  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_13\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 58.657343 20.571429  L 63.692308 20.571429  L 63.692308 3.588785  L 58.657343 3.588785  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_14\">\n",
       "    <path clip-path=\"url(#pba6fcf21d2)\" d=\"M 63.692308 20.571429  L 68.727273 20.571429  L 68.727273 5.328247  L 63.692308 5.328247  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"pba6fcf21d2\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>4682.15</td><td>2697.98</td><td>0</td><td>5029</td><td>0</td><td>2</td><td>9438</td><td>4682.15</td><td>2697.98</td></tr><tr><th>perid</th><td>perid</td><td>5029</td><td>1</td><td>8</td><td>1</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0jFCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKBwAAAAAAAAAAAAAAAAAAAAAAAAAAAABEAQAAAAAAAAAAAAAAAAAAbAAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1AAAAAAAADwP1VVVVVVVfU/qqqqqqqq+j8AAAAAAAAAQKqqqqqqqgJAVVVVVVVVBUAAAAAAAAAIQKqqqqqqqgpAVVVVVVVVDUAAAAAAAAAQQJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklImMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are green if the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#pe3e20984d9)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 0.979592  L 3.272727 0.979592  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#pe3e20984d9)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 20.571429  L 10.545455 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#pe3e20984d9)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 20.571429  L 17.818182 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#pe3e20984d9)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 7.766028  L 25.090909 7.766028  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#pe3e20984d9)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 20.571429  L 32.363636 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#pe3e20984d9)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 20.571429  L 39.636364 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#pe3e20984d9)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 18.269015  L 46.909091 18.269015  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#pe3e20984d9)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 20.571429  L 54.181818 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#pe3e20984d9)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 19.803957  L 61.454545 19.803957  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"pe3e20984d9\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>1.5866</td><td>0.796135</td><td>0</td><td>5029</td><td>0</td><td>1</td><td>8</td><td>1.5866</td><td>0.796135</td></tr><tr><th>numalts</th><td>numalts</td><td>5029</td><td>2</td><td>2</td><td>2</td><td><div class=\"figure\" metadata=\"gASVCQEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLAYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQwilEwAAAAAAAJR0lGKMCWJpbl9lZGdlc5RoBGgHSwCFlGgJh5RSlChLAUsChZRoEYlDEAAAAAAAAAAAAQAAAAAAAACUdJRijBF6ZXJvc19hcmVfZHJvcHBlZJSJjBJyYW5nZV9pc190cnVuY2F0ZWSUiXUu\" range_is_truncated=\"False\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are purple if the data is represented as discrete values.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p96f9b8c33b)\" d=\"M 3.272727 20.571429  L 68.727273 20.571429  L 68.727273 0.979592  L 3.272727 0.979592  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p96f9b8c33b\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>2</td><td>0</td><td>0</td><td>5029</td><td>0</td><td>2</td><td>2</td><td>2</td><td>0</td></tr><tr><th>dist</th><td>dist</td><td>5029</td><td>0.26</td><td>101.47</td><td>7.67</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0heCAAAAAAAABUEAAAAAAAA9wIAAAAAAACMAQAAAAAAAAkBAAAAAAAAswAAAAAAAABtAAAAAAAAADsAAAAAAAAAGAAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1CkcD0K16PQP2LFR09ChxhA3dn1liMCKECF6CMDU+AxQBvkzDqUvzdAsd91ctWePUCjbQ9VC79BQG7r4/CrrkRAOWm4jEyeR0AE54wo7Y1KQJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklImMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are green if the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p169bae23e0)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 0.979592  L 3.272727 0.979592  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p169bae23e0)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 11.01332  L 10.545455 11.01332  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p169bae23e0)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 13.629223  L 17.818182 13.629223  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p169bae23e0)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 16.949408  L 25.090909 16.949408  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p169bae23e0)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 18.147602  L 32.363636 18.147602  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p169bae23e0)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 18.934202  L 39.636364 18.934202  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p169bae23e0)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 19.574458  L 46.909091 19.574458  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p169bae23e0)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 20.031784  L 54.181818 20.031784  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p169bae23e0)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 20.351912  L 61.454545 20.351912  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p169bae23e0\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>11.7301</td><td>11.4343</td><td>0</td><td>5029</td><td>0</td><td>0.26</td><td>101.47</td><td>11.7301</td><td>11.4343</td></tr><tr><th>wkzone</th><td>wkzone</td><td>5029</td><td>1</td><td>1099</td><td>556</td><td><div class=\"figure\" metadata=\"gASV7gEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLDYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ2hyAQAAAAAAAL8BAAAAAAAAwgEAAAAAAABMAQAAAAAAAFQBAAAAAAAAUgEAAAAAAACdAQAAAAAAAC4BAAAAAAAAhgEAAAAAAACeAQAAAAAAAFEBAAAAAAAA3AEAAAAAAACkAQAAAAAAAJR0lGKMCWJpbl9lZGdlc5RoBGgHSwCFlGgJh5RSlChLAUsOhZRoDowCZjiUSwBLAYeUUpQoSwNoEk5OTkr/////Sv////9LAHSUYolDcAAAAAAAAPA/2Ymd2IldVUDZiZ3YiT1lQMZO7MROzG9A2Ymd2IktdUBP7MRO7HR6QMZO7MROvH9AntiJndiBgkDZiZ3YiSWFQBQ7sRM7yYdAT+zETuxsikCKndiJnRCNQMZO7MROtI9AAAAAAAAskUCUdJRijBF6ZXJvc19hcmVfZHJvcHBlZJSJjBJyYW5nZV9pc190cnVuY2F0ZWSUSwB1Lg==\" range_is_truncated=\"0\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title></title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 3.272727 20.571429  L 8.307692 20.571429  L 8.307692 5.34248  L 3.272727 5.34248  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 8.307692 20.571429  L 13.342657 20.571429  L 13.342657 2.173212  L 8.307692 2.173212  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 13.342657 20.571429  L 18.377622 20.571429  L 18.377622 2.049734  L 13.342657 2.049734  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 18.377622 20.571429  L 23.412587 20.571429  L 23.412587 6.906534  L 18.377622 6.906534  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 23.412587 20.571429  L 28.447552 20.571429  L 28.447552 6.577259  L 23.412587 6.577259  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 28.447552 20.571429  L 33.482517 20.571429  L 33.482517 6.659578  L 28.447552 6.659578  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 33.482517 20.571429  L 38.517483 20.571429  L 38.517483 3.572629  L 33.482517 3.572629  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 38.517483 20.571429  L 43.552448 20.571429  L 43.552448 8.141314  L 38.517483 8.141314  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 43.552448 20.571429  L 48.587413 20.571429  L 48.587413 4.519293  L 43.552448 4.519293  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_11\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 48.587413 20.571429  L 53.622378 20.571429  L 53.622378 3.53147  L 48.587413 3.53147  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_12\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 53.622378 20.571429  L 58.657343 20.571429  L 58.657343 6.700737  L 53.622378 6.700737  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_13\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 58.657343 20.571429  L 63.692308 20.571429  L 63.692308 0.979592  L 58.657343 0.979592  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_14\">\n",
       "    <path clip-path=\"url(#pcd8a753c5c)\" d=\"M 63.692308 20.571429  L 68.727273 20.571429  L 68.727273 3.284514  L 63.692308 3.284514  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"pcd8a753c5c\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>554.782</td><td>327.029</td><td>0</td><td>5029</td><td>0</td><td>1</td><td>1099</td><td>554.782</td><td>327.029</td></tr><tr><th>hmzone</th><td>hmzone</td><td>5029</td><td>1</td><td>1099</td><td>449</td><td><div class=\"figure\" metadata=\"gASV7gEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLDYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ2hjAwAAAAAAAAwBAAAAAAAA3QEAAAAAAAA4AgAAAAAAACkBAAAAAAAAtgAAAAAAAAAvAQAAAAAAACMBAAAAAAAAuAEAAAAAAAA2AQAAAAAAAB8BAAAAAAAAdQEAAAAAAABuAQAAAAAAAJR0lGKMCWJpbl9lZGdlc5RoBGgHSwCFlGgJh5RSlChLAUsOhZRoDowCZjiUSwBLAYeUUpQoSwNoEk5OTkr/////Sv////9LAHSUYolDcAAAAAAAAPA/2Ymd2IldVUDZiZ3YiT1lQMZO7MROzG9A2Ymd2IktdUBP7MRO7HR6QMZO7MROvH9AntiJndiBgkDZiZ3YiSWFQBQ7sRM7yYdAT+zETuxsikCKndiJnRCNQMZO7MROtI9AAAAAAAAskUCUdJRijBF6ZXJvc19hcmVfZHJvcHBlZJSJjBJyYW5nZV9pc190cnVuY2F0ZWSUSwB1Lg==\" range_is_truncated=\"0\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title></title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 3.272727 20.571429  L 8.307692 20.571429  L 8.307692 0.979592  L 3.272727 0.979592  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 8.307692 20.571429  L 13.342657 20.571429  L 13.342657 14.515359  L 8.307692 14.515359  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 13.342657 20.571429  L 18.377622 20.571429  L 18.377622 9.792529  L 13.342657 9.792529  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 18.377622 20.571429  L 23.412587 20.571429  L 23.412587 7.736177  L 18.377622 7.736177  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 23.412587 20.571429  L 28.447552 20.571429  L 28.447552 13.860038  L 23.412587 13.860038  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 28.447552 20.571429  L 33.482517 20.571429  L 33.482517 16.458725  L 28.447552 16.458725  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 33.482517 20.571429  L 38.517483 20.571429  L 38.517483 13.724454  L 33.482517 13.724454  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 38.517483 20.571429  L 43.552448 20.571429  L 43.552448 13.995622  L 38.517483 13.995622  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 43.552448 20.571429  L 48.587413 20.571429  L 48.587413 10.628628  L 43.552448 10.628628  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_11\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 48.587413 20.571429  L 53.622378 20.571429  L 53.622378 13.566274  L 48.587413 13.566274  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_12\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 53.622378 20.571429  L 58.657343 20.571429  L 58.657343 14.086011  L 53.622378 14.086011  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_13\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 58.657343 20.571429  L 63.692308 20.571429  L 63.692308 12.142645  L 58.657343 12.142645  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_14\">\n",
       "    <path clip-path=\"url(#pc376b16485)\" d=\"M 63.692308 20.571429  L 68.727273 20.571429  L 68.727273 12.300826  L 63.692308 12.300826  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"pc376b16485\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>486.713</td><td>344.197</td><td>0</td><td>5029</td><td>0</td><td>1</td><td>1099</td><td>486.713</td><td>344.197</td></tr><tr><th>rspopden</th><td>rspopden</td><td>5029</td><td>0</td><td>5802</td><td>15.07</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0hVBwAAAAAAANkHAAAAAAAAJgIAAAAAAAAQAQAAAAAAAHEAAAAAAAAASAAAAAAAAAAvAAAAAAAAABoAAAAAAAAADAAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1AAAAAAAAAAAHNNFwBuRylAc00XAG5HOUAWehGAkvVCQHNNFwBuR0lA0CAdgEmZT0AWehGAkvVSQMVjFECAHlZAc00XAG5HWUAhNxrAW3BcQJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklImMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are green if the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p7dc1ef4dd4)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 2.26686  L 3.272727 2.26686  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p7dc1ef4dd4)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 0.979592  L 10.545455 0.979592  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p7dc1ef4dd4)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 15.20781  L 17.818182 15.20781  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p7dc1ef4dd4)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 17.918875  L 25.090909 17.918875  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p7dc1ef4dd4)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 19.469449  L 32.363636 19.469449  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p7dc1ef4dd4)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 19.869282  L 39.636364 19.869282  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p7dc1ef4dd4)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 20.113083  L 46.909091 20.113083  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p7dc1ef4dd4)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 20.317876  L 54.181818 20.317876  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p7dc1ef4dd4)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 20.454404  L 61.454545 20.454404  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p7dc1ef4dd4\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>22.6282</td><td>85.4256</td><td>5</td><td>5024</td><td>0</td><td>1.37</td><td>5802</td><td>22.6507</td><td>85.4652</td></tr><tr><th>rsempden</th><td>rsempden</td><td>5029</td><td>0.08</td><td>1068</td><td>18.9</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0ixEAAAAAAAAJ8BAAAAAAAAfQAAAAAAAAAvAAAAAAAAAD0AAAAAAAAAGgAAAAAAAAAQAAAAAAAAAAcAAAAAAAAADQAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1B7FK5H4Xq0P0KGyg5Tl0ZAvZp4VjSSVkAt+cWSX+xgQPukT/qkj2ZAyVDZYeoybEBLfrHkF+twQDJUdpi6vHNAGSo7TF2OdkAAAAAAAGB5QJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklImMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are green if the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#pa831fdf647)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 0.979592  L 3.272727 0.979592  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#pa831fdf647)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 18.668641  L 10.545455 18.668641  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#pa831fdf647)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 19.9983  L 17.818182 19.9983  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#pa831fdf647)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 20.355932  L 25.090909 20.355932  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#pa831fdf647)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 20.291742  L 32.363636 20.291742  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#pa831fdf647)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 20.452218  L 39.636364 20.452218  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#pa831fdf647)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 20.498068  L 46.909091 20.498068  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#pa831fdf647)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 20.539333  L 54.181818 20.539333  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#pa831fdf647)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 20.511823  L 61.454545 20.511823  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"pa831fdf647\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>35.3329</td><td>69.4517</td><td>0</td><td>5029</td><td>0</td><td>0.08</td><td>1068</td><td>35.3329</td><td>69.4517</td></tr><tr><th>wkpopden</th><td>wkpopden</td><td>5029</td><td>0</td><td>7449</td><td>17.39</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0ilDgAAAAAAAC4CAAAAAAAACAEAAAAAAACMAAAAAAAAAHAAAAAAAAAAHAAAAAAAAAAEAAAAAAAAABEAAAAAAAAAcQAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1AAAAAAAAAAAAAAAAAA4EFAAAAAAADgUUAAAAAAANBaQAAAAAAA4GFAAAAAAABYZkAAAAAAANBqQAAAAAAASG9AAAAAAADgcUAAAAAAABx0QJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklImMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are green if the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#pb241d6471e)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 0.979592  L 3.272727 0.979592  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#pb241d6471e)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 17.655386  L 10.545455 17.655386  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#pb241d6471e)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 19.191795  L 17.818182 19.191795  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#pb241d6471e)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 19.839805  L 25.090909 19.839805  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#pb241d6471e)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 19.98613  L 32.363636 19.98613  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#pb241d6471e)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 20.425104  L 39.636364 20.425104  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#pb241d6471e)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 20.550525  L 46.909091 20.550525  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#pb241d6471e)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 20.482589  L 54.181818 20.482589  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#pb241d6471e)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 19.980904  L 61.454545 19.980904  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"pb241d6471e\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>57.2101</td><td>262.03</td><td>209</td><td>4820</td><td>0</td><td>1.37</td><td>7449</td><td>59.6908</td><td>267.373</td></tr><tr><th>wkempden</th><td>wkempden</td><td>5029</td><td>0</td><td>1068</td><td>23.97</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0iAEAAAAAAAACoBAAAAAAAAdAAAAAAAAAARAAAAAAAAAFUAAAAAAAAABgAAAAAAAAAEAAAAAAAAAFgAAAAAAAAAuwAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1AAAAAAAAAAAAvXo3A9OlVAC9ejcD06ZUCQwvUoXNdvQAvXo3A9OnVAzszMzMyIekCQwvUoXNd/QCpcj8L1koJAC9ejcD06hUDsUbgeheGHQJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklImMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are green if the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#pc5ef1afe38)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 0.979592  L 3.272727 0.979592  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#pc5ef1afe38)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 19.189239  L 10.545455 19.189239  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#pc5ef1afe38)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 20.033395  L 17.818182 20.033395  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#pc5ef1afe38)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 20.492579  L 25.090909 20.492579  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#pc5ef1afe38)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 20.17718  L 32.363636 20.17718  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#pc5ef1afe38)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 20.543599  L 39.636364 20.543599  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#pc5ef1afe38)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 20.552876  L 46.909091 20.552876  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#pc5ef1afe38)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 20.163265  L 54.181818 20.163265  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#pc5ef1afe38)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 19.704082  L 61.454545 19.704082  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"pc5ef1afe38\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>79.3188</td><td>166.348</td><td>2</td><td>5027</td><td>0</td><td>0.08</td><td>1068</td><td>79.3503</td><td>166.373</td></tr><tr><th>vehavdum</th><td>vehavdum</td><td>5029</td><td>0</td><td>1</td><td>1</td><td><div class=\"figure\" metadata=\"gASVGQEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLAoWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQxCgAAAAAAAAAAUTAAAAAAAAlHSUYowJYmluX2VkZ2VzlGgEaAdLAIWUaAmHlFKUKEsBSwOFlGgRiUMYAAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAlHSUYowRemVyb3NfYXJlX2Ryb3BwZWSUiYwScmFuZ2VfaXNfdHJ1bmNhdGVklIl1Lg==\" range_is_truncated=\"False\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are purple if the data is represented as discrete values.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p9c04fd88e4)\" d=\"M 3.272727 20.571429  L 32.363636 20.571429  L 32.363636 19.927622  L 3.272727 19.927622  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p9c04fd88e4)\" d=\"M 39.636364 20.571429  L 68.727273 20.571429  L 68.727273 0.979592  L 39.636364 0.979592  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p9c04fd88e4\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>0.968185</td><td>0.175509</td><td>160</td><td>4869</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><th>femdum</th><td>femdum</td><td>5029</td><td>0</td><td>1</td><td>0</td><td><div class=\"figure\" metadata=\"gASVGQEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLAoWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQxAaCwAAAAAAAIsIAAAAAAAAlHSUYowJYmluX2VkZ2VzlGgEaAdLAIWUaAmHlFKUKEsBSwOFlGgRiUMYAAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAlHSUYowRemVyb3NfYXJlX2Ryb3BwZWSUiYwScmFuZ2VfaXNfdHJ1bmNhdGVklIl1Lg==\" range_is_truncated=\"False\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are purple if the data is represented as discrete values.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p33336d349d)\" d=\"M 3.272727 20.571429  L 32.363636 20.571429  L 32.363636 0.979592  L 3.272727 0.979592  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p33336d349d)\" d=\"M 39.636364 20.571429  L 68.727273 20.571429  L 68.727273 5.494952  L 39.636364 5.494952  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p33336d349d\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>0.434878</td><td>0.495741</td><td>2842</td><td>2187</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><th>age</th><td>age</td><td>5029</td><td>18</td><td>83</td><td>38</td><td><div class=\"figure\" metadata=\"gASV7gEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLDYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ2jtAAAAAAAAAG8CAAAAAAAAGQMAAAAAAAD3AgAAAAAAAC8DAAAAAAAAUQIAAAAAAAAFAgAAAAAAAFMBAAAAAAAA4QAAAAAAAABZAAAAAAAAABkAAAAAAAAACwAAAAAAAAADAAAAAAAAAJR0lGKMCWJpbl9lZGdlc5RoBGgHSwCFlGgJh5RSlChLAUsOhZRoDowCZjiUSwBLAYeUUpQoSwNoEk5OTkr/////Sv////9LAHSUYolDcAAAAAAAADJAAAAAAAAAN0AAAAAAAAA8QAAAAAAAgEBAAAAAAAAAQ0AAAAAAAIBFQAAAAAAAAEhAAAAAAACASkAAAAAAAABNQAAAAAAAgE9AAAAAAAAAUUAAAAAAAEBSQAAAAAAAgFNAAAAAAADAVECUdJRijBF6ZXJvc19hcmVfZHJvcHBlZJSJjBJyYW5nZV9pc190cnVuY2F0ZWSUSwB1Lg==\" range_is_truncated=\"0\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title></title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 3.272727 20.571429  L 8.307692 20.571429  L 8.307692 14.874171  L 3.272727 14.874171  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 8.307692 20.571429  L 13.342657 20.571429  L 13.342657 5.595092  L 8.307692 5.595092  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 13.342657 20.571429  L 18.377622 20.571429  L 18.377622 1.508451  L 13.342657 1.508451  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 18.377622 20.571429  L 23.412587 20.571429  L 23.412587 2.325779  L 18.377622 2.325779  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 23.412587 20.571429  L 28.447552 20.571429  L 28.447552 0.979592  L 23.412587 0.979592  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 28.447552 20.571429  L 33.482517 20.571429  L 33.482517 6.316264  L 28.447552 6.316264  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 33.482517 20.571429  L 38.517483 20.571429  L 38.517483 8.143233  L 33.482517 8.143233  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 38.517483 20.571429  L 43.552448 20.571429  L 43.552448 12.422186  L 38.517483 12.422186  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 43.552448 20.571429  L 48.587413 20.571429  L 48.587413 15.162639  L 43.552448 15.162639  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_11\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 48.587413 20.571429  L 53.622378 20.571429  L 53.622378 18.431952  L 48.587413 18.431952  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_12\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 53.622378 20.571429  L 58.657343 20.571429  L 58.657343 19.970452  L 53.622378 19.970452  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_13\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 58.657343 20.571429  L 63.692308 20.571429  L 63.692308 20.306999  L 58.657343 20.306999  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_14\">\n",
       "    <path clip-path=\"url(#p9169e1e59c)\" d=\"M 63.692308 20.571429  L 68.727273 20.571429  L 68.727273 20.499311  L 63.692308 20.499311  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p9169e1e59c\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>39.0555</td><td>11.3922</td><td>0</td><td>5029</td><td>0</td><td>18</td><td>83</td><td>39.0555</td><td>11.3922</td></tr><tr><th>drlicdum</th><td>drlicdum</td><td>5029</td><td>0</td><td>1</td><td>1</td><td><div class=\"figure\" metadata=\"gASVGQEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLAoWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQxDHAAAAAAAAAN4SAAAAAAAAlHSUYowJYmluX2VkZ2VzlGgEaAdLAIWUaAmHlFKUKEsBSwOFlGgRiUMYAAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAlHSUYowRemVyb3NfYXJlX2Ryb3BwZWSUiYwScmFuZ2VfaXNfdHJ1bmNhdGVklIl1Lg==\" range_is_truncated=\"False\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are purple if the data is represented as discrete values.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p4ed7a063db)\" d=\"M 3.272727 20.571429  L 32.363636 20.571429  L 32.363636 19.764229  L 3.272727 19.764229  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p4ed7a063db)\" d=\"M 39.636364 20.571429  L 68.727273 20.571429  L 68.727273 0.979592  L 39.636364 0.979592  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p4ed7a063db\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>0.96043</td><td>0.194948</td><td>199</td><td>4830</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><th>noncadum</th><td>noncadum</td><td>5029</td><td>0</td><td>1</td><td>0</td><td><div class=\"figure\" metadata=\"gASVGQEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLAoWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQxA0DgAAAAAAAHEFAAAAAAAAlHSUYowJYmluX2VkZ2VzlGgEaAdLAIWUaAmHlFKUKEsBSwOFlGgRiUMYAAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAlHSUYowRemVyb3NfYXJlX2Ryb3BwZWSUiYwScmFuZ2VfaXNfdHJ1bmNhdGVklIl1Lg==\" range_is_truncated=\"False\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are purple if the data is represented as discrete values.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p918299b4c1)\" d=\"M 3.272727 20.571429  L 32.363636 20.571429  L 32.363636 0.979592  L 3.272727 0.979592  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p918299b4c1)\" d=\"M 39.636364 20.571429  L 68.727273 20.571429  L 68.727273 13.065535  L 39.636364 13.065535  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p918299b4c1\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>0.276993</td><td>0.447513</td><td>3636</td><td>1393</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><th>numveh</th><td>numveh</td><td>5029</td><td>0</td><td>14</td><td>2</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0igAAAAAAAAACUEAAAAAAAAFQgAAAAAAAAAAAAAAAAAAO0DAAAAAAAAogEAAAAAAACxAAAAAAAAAAAAAAAAAAAAWAAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1AAAAAAAAAAAOQYS36x5Oc/5BhLfrHk9z+rUrgehesBQOQYS36x5AdAHd/d3d3dDUCrUrgehesRQMi1gU4b6BRA5BhLfrHkF0AAfBSuR+EaQJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklImMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are green if the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p633ab6226e)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 19.056352  L 3.272727 19.056352  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p633ab6226e)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 10.524576  L 10.545455 10.524576  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p633ab6226e)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 0.979592  L 17.818182 0.979592  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p633ab6226e)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 20.571429  L 25.090909 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p633ab6226e)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 11.054852  L 32.363636 11.054852  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p633ab6226e)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 16.61329  L 39.636364 16.61329  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p633ab6226e)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 18.895375  L 46.909091 18.895375  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p633ab6226e)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 20.571429  L 54.181818 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p633ab6226e)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 19.738136  L 61.454545 19.738136  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p633ab6226e\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>2.32551</td><td>1.30999</td><td>160</td><td>4869</td><td>0</td><td>1</td><td>14</td><td>2.40193</td><td>1.26052</td></tr><tr><th>hhsize</th><td>hhsize</td><td>5029</td><td>1</td><td>13</td><td>2</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0jXAgAAAAAAABYHAAAAAAAAAAAAAAAAAAAaBAAAAAAAAHQDAAAAAAAAAAAAAAAAAABiAQAAAAAAAHYAAAAAAAAAMgAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1AAAAAAAADwP6qqqqqqqvo/qqqqqqqqAkAAAAAAAAAIQFVVVVVVVQ1AVVVVVVVVEUAAAAAAAAAUQKqqqqqqqhZAVVVVVVVVGUAAAAAAAAAcQJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklImMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are green if the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p8a3e43fcd2)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 12.719573  L 3.272727 12.719573  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p8a3e43fcd2)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 0.979592  L 10.545455 0.979592  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p8a3e43fcd2)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 20.571429  L 17.818182 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p8a3e43fcd2)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 9.23106  L 25.090909 9.23106  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p8a3e43fcd2)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 11.023918  L 32.363636 11.023918  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p8a3e43fcd2)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 20.571429  L 39.636364 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p8a3e43fcd2)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 16.748104  L 46.909091 16.748104  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p8a3e43fcd2)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 19.296987  L 54.181818 19.296987  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p8a3e43fcd2)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 20.031411  L 61.454545 20.031411  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p8a3e43fcd2\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>2.81607</td><td>1.41075</td><td>0</td><td>5029</td><td>0</td><td>1</td><td>13</td><td>2.81607</td><td>1.41075</td></tr><tr><th>hhinc</th><td>hhinc</td><td>5029</td><td>3</td><td>145</td><td>55</td><td><div class=\"figure\" metadata=\"gASV7gEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLDYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ2ilAAAAAAAAAHkBAAAAAAAA9AIAAAAAAAAbAwAAAAAAANsDAAAAAAAA8wIAAAAAAAAAAAAAAAAAAG4CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0BAAAAAAAAAAAAAAAAAAD/AAAAAAAAAJR0lGKMCWJpbl9lZGdlc5RoBGgHSwCFlGgJh5RSlChLAUsOhZRoDowCZjiUSwBLAYeUUpQoSwNoEk5OTkr/////Sv////9LAHSUYolDcAAAAAAAAAhAip3YiZ3YK0CKndiJndg4QCh2Yid24kFAip3YiZ1YR0DsxE7sxM5MQCh2Yid2IlFA2Ymd2IndU0CKndiJnZhWQDuxEzuxU1lA7MRO7MQOXECe2Imd2MleQCh2Yid2wmBAAAAAAAAgYkCUdJRijBF6ZXJvc19hcmVfZHJvcHBlZJSJjBJyYW5nZV9pc190cnVuY2F0ZWSUSwB1Lg==\" range_is_truncated=\"0\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title></title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 3.272727 20.571429  L 8.307692 20.571429  L 8.307692 17.296198  L 3.272727 17.296198  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 8.307692 20.571429  L 13.342657 20.571429  L 13.342657 13.088022  L 8.307692 13.088022  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 13.342657 20.571429  L 18.377622 20.571429  L 18.377622 5.564915  L 13.342657 5.564915  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 18.377622 20.571429  L 23.412587 20.571429  L 23.412587 4.79077  L 18.377622 4.79077  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 23.412587 20.571429  L 28.447552 20.571429  L 28.447552 0.979592  L 23.412587 0.979592  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 28.447552 20.571429  L 33.482517 20.571429  L 33.482517 5.584765  L 28.447552 5.584765  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 33.482517 20.571429  L 38.517483 20.571429  L 38.517483 20.571429  L 33.482517 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 38.517483 20.571429  L 43.552448 20.571429  L 43.552448 8.2248  L 38.517483 8.2248  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 43.552448 20.571429  L 48.587413 20.571429  L 48.587413 20.571429  L 43.552448 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_11\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 48.587413 20.571429  L 53.622378 20.571429  L 53.622378 20.571429  L 48.587413 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_12\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 53.622378 20.571429  L 58.657343 20.571429  L 58.657343 14.279015  L 53.622378 14.279015  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_13\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 58.657343 20.571429  L 63.692308 20.571429  L 63.692308 20.571429  L 58.657343 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_14\">\n",
       "    <path clip-path=\"url(#p8fceab2ac3)\" d=\"M 63.692308 20.571429  L 68.727273 20.571429  L 68.727273 15.509708  L 63.692308 15.509708  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p8fceab2ac3\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>58.4573</td><td>32.4047</td><td>0</td><td>5029</td><td>0</td><td>3</td><td>145</td><td>58.4573</td><td>32.4047</td></tr><tr><th>famtype</th><td>famtype</td><td>5029</td><td>1</td><td>99</td><td>4</td><td><div class=\"figure\" metadata=\"gASV7gEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLDYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ2igDwAAAAAAAIUCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAAAAAAAJR0lGKMCWJpbl9lZGdlc5RoBGgHSwCFlGgJh5RSlChLAUsOhZRoDowCZjiUSwBLAYeUUpQoSwNoEk5OTkr/////Sv////9LAHSUYolDcAAAAAAAAPA/O7ETO7ETIUA7sRM7sRMwQNiJndiJnTdAdmIndmInP0CKndiJnVhDQNiJndiJHUdAJ3ZiJ3biSkB2Yid2YqdOQGIndmInNlFAip3YiZ0YU0CxEzuxE/tUQNiJndiJ3VZAAAAAAADAWECUdJRijBF6ZXJvc19hcmVfZHJvcHBlZJSJjBJyYW5nZV9pc190cnVuY2F0ZWSUSwB1Lg==\" range_is_truncated=\"0\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title></title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 3.272727 20.571429  L 8.307692 20.571429  L 8.307692 0.979592  L 3.272727 0.979592  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 8.307692 20.571429  L 13.342657 20.571429  L 13.342657 17.412245  L 8.307692 17.412245  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 13.342657 20.571429  L 18.377622 20.571429  L 18.377622 20.571429  L 13.342657 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 18.377622 20.571429  L 23.412587 20.571429  L 23.412587 20.571429  L 18.377622 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 23.412587 20.571429  L 28.447552 20.571429  L 28.447552 20.571429  L 23.412587 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 28.447552 20.571429  L 33.482517 20.571429  L 33.482517 20.571429  L 28.447552 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 33.482517 20.571429  L 38.517483 20.571429  L 38.517483 20.571429  L 33.482517 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 38.517483 20.571429  L 43.552448 20.571429  L 43.552448 20.571429  L 38.517483 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 43.552448 20.571429  L 48.587413 20.571429  L 48.587413 20.571429  L 43.552448 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_11\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 48.587413 20.571429  L 53.622378 20.571429  L 53.622378 20.571429  L 48.587413 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_12\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 53.622378 20.571429  L 58.657343 20.571429  L 58.657343 20.571429  L 53.622378 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_13\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 58.657343 20.571429  L 63.692308 20.571429  L 63.692308 20.571429  L 58.657343 20.571429  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_14\">\n",
       "    <path clip-path=\"url(#p120512affc)\" d=\"M 63.692308 20.571429  L 68.727273 20.571429  L 68.727273 18.690612  L 63.692308 18.690612  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p120512affc\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>11.895</td><td>25.2633</td><td>0</td><td>5029</td><td>0</td><td>1</td><td>99</td><td>11.895</td><td>25.2633</td></tr><tr><th>hhowndum</th><td>hhowndum</td><td>5029</td><td>0</td><td>1</td><td>1</td><td><div class=\"figure\" metadata=\"gASVGQEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLAoWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQxBaBwAAAAAAAEsMAAAAAAAAlHSUYowJYmluX2VkZ2VzlGgEaAdLAIWUaAmHlFKUKEsBSwOFlGgRiUMYAAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAlHSUYowRemVyb3NfYXJlX2Ryb3BwZWSUiYwScmFuZ2VfaXNfdHJ1bmNhdGVklIl1Lg==\" range_is_truncated=\"False\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are purple if the data is represented as discrete values.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p6a28701f82)\" d=\"M 3.272727 20.571429  L 32.363636 20.571429  L 32.363636 8.854925  L 3.272727 8.854925  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p6a28701f82)\" d=\"M 39.636364 20.571429  L 68.727273 20.571429  L 68.727273 0.979592  L 39.636364 0.979592  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p6a28701f82\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>0.625771</td><td>0.483923</td><td>1882</td><td>3147</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><th>numemphh</th><td>numemphh</td><td>5029</td><td>1</td><td>8</td><td>2</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0hFBgAAAAAAAAAAAAAAAAAAhgoAAAAAAAAAAAAAAAAAABUCAAAAAAAAAAAAAAAAAACPAAAAAAAAAAAAAAAAAAAAKwAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1AAAAAAAADwP8dxHMdxHPc/juM4juM4/j+qqqqqqqoCQI7jOI7jOAZAchzHcRzHCUBVVVVVVVUNQBzHcRzHcRBAjuM4juM4EkAAAAAAAAAUQJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklImMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are green if the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p8981d34141)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 8.899232  L 3.272727 8.899232  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p8981d34141)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 20.571429  L 10.545455 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p8981d34141)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 0.979592  L 17.818182 0.979592  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p8981d34141)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 20.571429  L 25.090909 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p8981d34141)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 16.695241  L 32.363636 16.695241  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p8981d34141)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 20.571429  L 39.636364 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p8981d34141)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 19.531476  L 46.909091 19.531476  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p8981d34141)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 20.571429  L 54.181818 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p8981d34141)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 20.258716  L 61.454545 20.258716  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p8981d34141\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>1.8799</td><td>0.808517</td><td>0</td><td>5029</td><td>0</td><td>1</td><td>8</td><td>1.8799</td><td>0.808517</td></tr><tr><th>numadlt</th><td>numadlt</td><td>5029</td><td>1</td><td>10</td><td>2</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0gzAwAAAAAAACkLAAAAAAAAAAAAAAAAAAAuAwAAAAAAAAAAAAAAAAAAfQEAAAAAAAAAAAAAAAAAAGsAAAAAAAAAAAAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1AAAAAAAADwP45Tl9sfZPg/jlOX2x9kAEBV/WLJL5YEQBynLrc/yAhA41D6pE/6DEBV/WLJL5YQQDjSSMA3rxJAHKcutz/IFEAAfBSuR+EWQJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklImMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are green if the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p5a9caf3494)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 14.955148  L 3.272727 14.955148  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p5a9caf3494)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 0.979592  L 10.545455 0.979592  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p5a9caf3494)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 20.571429  L 17.818182 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p5a9caf3494)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 14.989435  L 25.090909 14.989435  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p5a9caf3494)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 20.571429  L 32.363636 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p5a9caf3494)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 17.958727  L 39.636364 17.958727  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p5a9caf3494)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 20.571429  L 46.909091 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p5a9caf3494)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 19.837678  L 54.181818 19.837678  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p5a9caf3494)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 20.571429  L 61.454545 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p5a9caf3494\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>2.26009</td><td>0.984045</td><td>0</td><td>5029</td><td>0</td><td>1</td><td>10</td><td>2.26009</td><td>0.984045</td></tr><tr><th>nmlt5</th><td>nmlt5</td><td>5029</td><td>0</td><td>8</td><td>0</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0gFAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxQAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1AAAAAAAADwP3Icx3Ecx/E/5DiO4ziO8z9VVVVVVVX1P8dxHMdxHPc/OY7jOI7j+D+qqqqqqqr6PxzHcRzHcfw/juM4juM4/j8AAAAAAAAAQJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklIiMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"True\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are red if the zeros are numerous and have been excluded, and the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p9133f3e924)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 0.979592  L 3.272727 0.979592  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p9133f3e924)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 20.571429  L 10.545455 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p9133f3e924)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 20.571429  L 17.818182 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p9133f3e924)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 20.571429  L 25.090909 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p9133f3e924)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 20.571429  L 32.363636 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p9133f3e924)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 20.571429  L 39.636364 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p9133f3e924)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 20.571429  L 46.909091 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p9133f3e924)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 20.571429  L 54.181818 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p9133f3e924)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 13.106067  L 61.454545 13.106067  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p9133f3e924\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>0.208391</td><td>0.565391</td><td>4275</td><td>754</td><td>0</td><td>1</td><td>8</td><td>1.38992</td><td>0.699908</td></tr><tr><th>nm5to11</th><td>nm5to11</td><td>5029</td><td>0</td><td>5</td><td>0</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0jSAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2QAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1AAAAAAAADwP3Icx3Ecx/E/5DiO4ziO8z9VVVVVVVX1P8dxHMdxHPc/OY7jOI7j+D+qqqqqqqr6PxzHcRzHcfw/juM4juM4/j8AAAAAAAAAQJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklIiMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"True\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are red if the zeros are numerous and have been excluded, and the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p3eac735277)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 0.979592  L 3.272727 0.979592  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p3eac735277)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 20.571429  L 10.545455 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p3eac735277)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 20.571429  L 17.818182 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p3eac735277)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 20.571429  L 25.090909 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p3eac735277)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 20.571429  L 32.363636 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p3eac735277)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 20.571429  L 39.636364 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p3eac735277)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 20.571429  L 46.909091 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p3eac735277)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 20.571429  L 54.181818 20.571429  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p3eac735277)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 11.448191  L 61.454545 11.448191  z \" style=\"fill:#f60100;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p3eac735277\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>0.194671</td><td>0.529957</td><td>4322</td><td>707</td><td>0</td><td>1</td><td>5</td><td>1.38472</td><td>0.591494</td></tr><tr><th>nm12to16</th><td>nm12to16</td><td>5029</td><td>0</td><td>4</td><td>0</td><td><div class=\"figure\" metadata=\"gASVSQEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLBYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQyg6EQAAAAAAAOkBAAAAAAAAbwAAAAAAAAASAAAAAAAAAAEAAAAAAAAAlHSUYowJYmluX2VkZ2VzlGgEaAdLAIWUaAmHlFKUKEsBSwaFlGgRiUMwAAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAAwAAAAAAAAAEAAAAAAAAAAUAAAAAAAAAlHSUYowRemVyb3NfYXJlX2Ryb3BwZWSUiYwScmFuZ2VfaXNfdHJ1bmNhdGVklIl1Lg==\" range_is_truncated=\"False\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are purple if the data is represented as discrete values.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p7dbb0075c8)\" d=\"M 3.272727 20.571429  L 14.181818 20.571429  L 14.181818 0.979592  L 3.272727 0.979592  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p7dbb0075c8)\" d=\"M 16.909091 20.571429  L 27.818182 20.571429  L 27.818182 18.399  L 16.909091 18.399  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p7dbb0075c8)\" d=\"M 30.545455 20.571429  L 41.454545 20.571429  L 41.454545 20.078301  L 30.545455 20.078301  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p7dbb0075c8)\" d=\"M 44.181818 20.571429  L 55.090909 20.571429  L 55.090909 20.491462  L 44.181818 20.491462  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p7dbb0075c8)\" d=\"M 57.818182 20.571429  L 68.727273 20.571429  L 68.727273 20.566986  L 57.818182 20.566986  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p7dbb0075c8\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>0.152913</td><td>0.444451</td><td>4410</td><td>619</td><td>0</td><td>1</td><td>4</td><td>1.24233</td><td>0.501454</td></tr><tr><th>wkccbd</th><td>wkccbd</td><td>5029</td><td>0</td><td>1</td><td>0</td><td><div class=\"figure\" metadata=\"gASVGQEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLAoWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQxBAEQAAAAAAAGUCAAAAAAAAlHSUYowJYmluX2VkZ2VzlGgEaAdLAIWUaAmHlFKUKEsBSwOFlGgRiUMYAAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAlHSUYowRemVyb3NfYXJlX2Ryb3BwZWSUiYwScmFuZ2VfaXNfdHJ1bmNhdGVklIl1Lg==\" range_is_truncated=\"False\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are purple if the data is represented as discrete values.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p1e8453ee0d)\" d=\"M 3.272727 20.571429  L 32.363636 20.571429  L 32.363636 0.979592  L 3.272727 0.979592  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p1e8453ee0d)\" d=\"M 39.636364 20.571429  L 68.727273 20.571429  L 68.727273 17.851819  L 39.636364 17.851819  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p1e8453ee0d\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>0.121893</td><td>0.327162</td><td>4416</td><td>613</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><th>wknccbd</th><td>wknccbd</td><td>5029</td><td>0</td><td>1</td><td>0</td><td><div class=\"figure\" metadata=\"gASVGQEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLAoWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQxBcEAAAAAAAAEkDAAAAAAAAlHSUYowJYmluX2VkZ2VzlGgEaAdLAIWUaAmHlFKUKEsBSwOFlGgRiUMYAAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAlHSUYowRemVyb3NfYXJlX2Ryb3BwZWSUiYwScmFuZ2VfaXNfdHJ1bmNhdGVklIl1Lg==\" range_is_truncated=\"False\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are purple if the data is represented as discrete values.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p48a7cfd9f1)\" d=\"M 3.272727 20.571429  L 32.363636 20.571429  L 32.363636 0.979592  L 3.272727 0.979592  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p48a7cfd9f1)\" d=\"M 39.636364 20.571429  L 68.727273 20.571429  L 68.727273 16.637156  L 39.636364 16.637156  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p48a7cfd9f1\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>0.16723</td><td>0.373181</td><td>4188</td><td>841</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><th>corredis</th><td>corredis</td><td>5029</td><td>0</td><td>1</td><td>0</td><td><div class=\"figure\" metadata=\"gASVGQEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLAoWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQxCHEAAAAAAAAB4DAAAAAAAAlHSUYowJYmluX2VkZ2VzlGgEaAdLAIWUaAmHlFKUKEsBSwOFlGgRiUMYAAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAlHSUYowRemVyb3NfYXJlX2Ryb3BwZWSUiYwScmFuZ2VfaXNfdHJ1bmNhdGVklIl1Lg==\" range_is_truncated=\"False\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are purple if the data is represented as discrete values.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#pf39efd3fca)\" d=\"M 3.272727 20.571429  L 32.363636 20.571429  L 32.363636 0.979592  L 3.272727 0.979592  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#pf39efd3fca)\" d=\"M 39.636364 20.571429  L 68.727273 20.571429  L 68.727273 16.876254  L 39.636364 16.876254  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"pf39efd3fca\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>0.15868</td><td>0.365377</td><td>4231</td><td>798</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><th>vehbywrk</th><td>vehbywrk</td><td>5029</td><td>0</td><td>8</td><td>1</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0jcAAAAAAAAANgBAAAAAAAA3gkAAAAAAACKAgAAAAAAAOACAAAAAAAAXwAAAAAAAADbAAAAAAAAAAwAAAAAAAAAPQAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1AAAAAAAAAAABzHcRzHcdw/HMdxHMdx7D9VVVVVVVX1PxzHcRzHcfw/chzHcRzHAUBVVVVVVVUFQDiO4ziO4whAHMdxHMdxDEAAAAAAAAAQQJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklImMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are green if the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p907b27f2a8)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 18.865093  L 3.272727 18.865093  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p907b27f2a8)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 16.910563  L 10.545455 16.910563  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p907b27f2a8)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 0.979592  L 17.818182 0.979592  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p907b27f2a8)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 15.529982  L 25.090909 15.529982  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p907b27f2a8)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 14.86296  L 32.363636 14.86296  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p907b27f2a8)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 19.834602  L 39.636364 19.834602  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p907b27f2a8)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 18.872849  L 46.909091 18.872849  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p907b27f2a8)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 20.478356  L 54.181818 20.478356  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p907b27f2a8)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 20.098308  L 61.454545 20.098308  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p907b27f2a8\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>1.3345</td><td>0.805774</td><td>160</td><td>4869</td><td>0</td><td>0.25</td><td>8</td><td>1.37835</td><td>0.781129</td></tr><tr><th>vocc</th><td>vocc</td><td>5029</td><td>0</td><td>9</td><td>1</td><td><div class=\"figure\" metadata=\"gASVrgEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLCYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ0jGAgAAAAAAAAAAAAAAAAAANQ4AAAAAAAAAAAAAAAAAAAgCAAAAAAAAAAAAAAAAAABlAAAAAAAAAAAAAAAAAAAAHAAAAAAAAACUdJRijAliaW5fZWRnZXOUaARoB0sAhZRoCYeUUpQoSwFLCoWUaA6MAmY4lEsASwGHlFKUKEsDaBJOTk5K/////0r/////SwB0lGKJQ1AAAAAAAAAAABzHcRzHcdw/HMdxHMdx7D9VVVVVVVX1PxzHcRzHcfw/chzHcRzHAUBVVVVVVVUFQDiO4ziO4whAHMdxHMdxDEAAAAAAAAAQQJR0lGKMEXplcm9zX2FyZV9kcm9wcGVklImMEnJhbmdlX2lzX3RydW5jYXRlZJRLAXUu\" range_is_truncated=\"1\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are green if the displayed range truncates some extreme outliers.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#p82cf6da090)\" d=\"M 3.272727 20.571429  L 10.545455 20.571429  L 10.545455 16.746792  L 3.272727 16.746792  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p82cf6da090)\" d=\"M 10.545455 20.571429  L 17.818182 20.571429  L 17.818182 20.571429  L 10.545455 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p82cf6da090)\" d=\"M 17.818182 20.571429  L 25.090909 20.571429  L 25.090909 0.979592  L 17.818182 0.979592  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p82cf6da090)\" d=\"M 25.090909 20.571429  L 32.363636 20.571429  L 32.363636 20.571429  L 25.090909 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p82cf6da090)\" d=\"M 32.363636 20.571429  L 39.636364 20.571429  L 39.636364 17.770286  L 32.363636 17.770286  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p82cf6da090)\" d=\"M 39.636364 20.571429  L 46.909091 20.571429  L 46.909091 20.571429  L 39.636364 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p82cf6da090)\" d=\"M 46.909091 20.571429  L 54.181818 20.571429  L 54.181818 20.027361  L 46.909091 20.027361  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p82cf6da090)\" d=\"M 54.181818 20.571429  L 61.454545 20.571429  L 61.454545 20.571429  L 54.181818 20.571429  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p82cf6da090)\" d=\"M 61.454545 20.571429  L 68.727273 20.571429  L 68.727273 20.420598  L 61.454545 20.420598  z \" style=\"fill:#27b67b;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p82cf6da090\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>1.05548</td><td>0.769978</td><td>710</td><td>4319</td><td>0</td><td>1</td><td>9</td><td>1.22899</td><td>0.690713</td></tr><tr><th>wgt</th><td>wgt</td><td>5029</td><td>1</td><td>1</td><td>1</td><td><div class=\"figure\" metadata=\"gASVCQEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLAYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQwilEwAAAAAAAJR0lGKMCWJpbl9lZGdlc5RoBGgHSwCFlGgJh5RSlChLAUsChZRoEYlDEAAAAAAAAAAAAQAAAAAAAACUdJRijBF6ZXJvc19hcmVfZHJvcHBlZJSJjBJyYW5nZV9pc190cnVuY2F0ZWSUiXUu\" range_is_truncated=\"False\" style=\"min-width:Truein\" zeros_are_dropped=\"False\"><svg height=\"20.571429pt\" version=\"1.1\" viewBox=\"0 0 72 20.571429\" width=\"72pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title>Histograms are purple if the data is represented as discrete values.</title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 20.571429  L 72 20.571429  L 72 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path clip-path=\"url(#pe45b370005)\" d=\"M 3.272727 20.571429  L 68.727273 20.571429  L 68.727273 0.979592  L 3.272727 0.979592  z \" style=\"fill:#6478ba;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\"></g>\n",
       "   <g id=\"matplotlib.axis_2\"></g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"pe45b370005\">\n",
       "   <rect height=\"20.571429\" width=\"72\" x=\"0\" y=\"-0\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td><td>1</td><td>0</td><td>0</td><td>5029</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr></tbody></table></div>"
      ],
      "text/plain": [
       "         description     n  minimum  maximum   median  \\\n",
       "hhid            hhid  5029     2.00  9438.00  4734.00   \n",
       "perid          perid  5029     1.00     8.00     1.00   \n",
       "numalts      numalts  5029     2.00     2.00     2.00   \n",
       "dist            dist  5029     0.26   101.47     7.67   \n",
       "wkzone        wkzone  5029     1.00  1099.00   556.00   \n",
       "hmzone        hmzone  5029     1.00  1099.00   449.00   \n",
       "rspopden    rspopden  5029     0.00  5802.00    15.07   \n",
       "rsempden    rsempden  5029     0.08  1068.00    18.90   \n",
       "wkpopden    wkpopden  5029     0.00  7449.00    17.39   \n",
       "wkempden    wkempden  5029     0.00  1068.00    23.97   \n",
       "vehavdum    vehavdum  5029     0.00     1.00     1.00   \n",
       "femdum        femdum  5029     0.00     1.00     0.00   \n",
       "age              age  5029    18.00    83.00    38.00   \n",
       "drlicdum    drlicdum  5029     0.00     1.00     1.00   \n",
       "noncadum    noncadum  5029     0.00     1.00     0.00   \n",
       "numveh        numveh  5029     0.00    14.00     2.00   \n",
       "hhsize        hhsize  5029     1.00    13.00     2.00   \n",
       "hhinc          hhinc  5029     3.00   145.00    55.00   \n",
       "famtype      famtype  5029     1.00    99.00     4.00   \n",
       "hhowndum    hhowndum  5029     0.00     1.00     1.00   \n",
       "numemphh    numemphh  5029     1.00     8.00     2.00   \n",
       "numadlt      numadlt  5029     1.00    10.00     2.00   \n",
       "nmlt5          nmlt5  5029     0.00     8.00     0.00   \n",
       "nm5to11      nm5to11  5029     0.00     5.00     0.00   \n",
       "nm12to16    nm12to16  5029     0.00     4.00     0.00   \n",
       "wkccbd        wkccbd  5029     0.00     1.00     0.00   \n",
       "wknccbd      wknccbd  5029     0.00     1.00     0.00   \n",
       "corredis    corredis  5029     0.00     1.00     0.00   \n",
       "vehbywrk    vehbywrk  5029     0.00     8.00     1.00   \n",
       "vocc            vocc  5029     0.00     9.00     1.00   \n",
       "wgt              wgt  5029     1.00     1.00     1.00   \n",
       "\n",
       "                                                  histogram         mean  \\\n",
       "hhid      [[[<Element '{http://www.w3.org/2000/svg}style...  4682.154703   \n",
       "perid     [[[<Element '{http://www.w3.org/2000/svg}style...     1.586598   \n",
       "numalts   [[[<Element '{http://www.w3.org/2000/svg}style...     2.000000   \n",
       "dist      [[[<Element '{http://www.w3.org/2000/svg}style...    11.730147   \n",
       "wkzone    [[[<Element '{http://www.w3.org/2000/svg}style...   554.781666   \n",
       "hmzone    [[[<Element '{http://www.w3.org/2000/svg}style...   486.712667   \n",
       "rspopden  [[[<Element '{http://www.w3.org/2000/svg}style...    22.628196   \n",
       "rsempden  [[[<Element '{http://www.w3.org/2000/svg}style...    35.332877   \n",
       "wkpopden  [[[<Element '{http://www.w3.org/2000/svg}style...    57.210072   \n",
       "wkempden  [[[<Element '{http://www.w3.org/2000/svg}style...    79.318789   \n",
       "vehavdum  [[[<Element '{http://www.w3.org/2000/svg}style...     0.968185   \n",
       "femdum    [[[<Element '{http://www.w3.org/2000/svg}style...     0.434878   \n",
       "age       [[[<Element '{http://www.w3.org/2000/svg}style...    39.055478   \n",
       "drlicdum  [[[<Element '{http://www.w3.org/2000/svg}style...     0.960430   \n",
       "noncadum  [[[<Element '{http://www.w3.org/2000/svg}style...     0.276993   \n",
       "numveh    [[[<Element '{http://www.w3.org/2000/svg}style...     2.325512   \n",
       "hhsize    [[[<Element '{http://www.w3.org/2000/svg}style...     2.816067   \n",
       "hhinc     [[[<Element '{http://www.w3.org/2000/svg}style...    58.457347   \n",
       "famtype   [[[<Element '{http://www.w3.org/2000/svg}style...    11.895009   \n",
       "hhowndum  [[[<Element '{http://www.w3.org/2000/svg}style...     0.625771   \n",
       "numemphh  [[[<Element '{http://www.w3.org/2000/svg}style...     1.879897   \n",
       "numadlt   [[[<Element '{http://www.w3.org/2000/svg}style...     2.260091   \n",
       "nmlt5     [[[<Element '{http://www.w3.org/2000/svg}style...     0.208391   \n",
       "nm5to11   [[[<Element '{http://www.w3.org/2000/svg}style...     0.194671   \n",
       "nm12to16  [[[<Element '{http://www.w3.org/2000/svg}style...     0.152913   \n",
       "wkccbd    [[[<Element '{http://www.w3.org/2000/svg}style...     0.121893   \n",
       "wknccbd   [[[<Element '{http://www.w3.org/2000/svg}style...     0.167230   \n",
       "corredis  [[[<Element '{http://www.w3.org/2000/svg}style...     0.158680   \n",
       "vehbywrk  [[[<Element '{http://www.w3.org/2000/svg}style...     1.334498   \n",
       "vocc      [[[<Element '{http://www.w3.org/2000/svg}style...     1.055478   \n",
       "wgt       [[[<Element '{http://www.w3.org/2000/svg}style...     1.000000   \n",
       "\n",
       "                stdev  zeros  positives  negatives  nonzero_minimum  \\\n",
       "hhid      2697.975246      0       5029          0             2.00   \n",
       "perid        0.796135      0       5029          0             1.00   \n",
       "numalts      0.000000      0       5029          0             2.00   \n",
       "dist        11.434337      0       5029          0             0.26   \n",
       "wkzone     327.028986      0       5029          0             1.00   \n",
       "hmzone     344.197270      0       5029          0             1.00   \n",
       "rspopden    85.425648      5       5024          0             1.37   \n",
       "rsempden    69.451657      0       5029          0             0.08   \n",
       "wkpopden   262.029564    209       4820          0             1.37   \n",
       "wkempden   166.347692      2       5027          0             0.08   \n",
       "vehavdum     0.175509    160       4869          0             1.00   \n",
       "femdum       0.495741   2842       2187          0             1.00   \n",
       "age         11.392189      0       5029          0            18.00   \n",
       "drlicdum     0.194948    199       4830          0             1.00   \n",
       "noncadum     0.447513   3636       1393          0             1.00   \n",
       "numveh       1.309990    160       4869          0             1.00   \n",
       "hhsize       1.410755      0       5029          0             1.00   \n",
       "hhinc       32.404718      0       5029          0             3.00   \n",
       "famtype     25.263293      0       5029          0             1.00   \n",
       "hhowndum     0.483923   1882       3147          0             1.00   \n",
       "numemphh     0.808517      0       5029          0             1.00   \n",
       "numadlt      0.984045      0       5029          0             1.00   \n",
       "nmlt5        0.565391   4275        754          0             1.00   \n",
       "nm5to11      0.529957   4322        707          0             1.00   \n",
       "nm12to16     0.444451   4410        619          0             1.00   \n",
       "wkccbd       0.327162   4416        613          0             1.00   \n",
       "wknccbd      0.373181   4188        841          0             1.00   \n",
       "corredis     0.365377   4231        798          0             1.00   \n",
       "vehbywrk     0.805774    160       4869          0             0.25   \n",
       "vocc         0.769978    710       4319          0             1.00   \n",
       "wgt          0.000000      0       5029          0             1.00   \n",
       "\n",
       "          nonzero_maximum  nonzero_mean  nonzero_stdev  \n",
       "hhid              9438.00   4682.154703    2697.975246  \n",
       "perid                8.00      1.586598       0.796135  \n",
       "numalts              2.00      2.000000       0.000000  \n",
       "dist               101.47     11.730147      11.434337  \n",
       "wkzone            1099.00    554.781666     327.028986  \n",
       "hmzone            1099.00    486.712667     344.197270  \n",
       "rspopden          5802.00     22.650717      85.465162  \n",
       "rsempden          1068.00     35.332877      69.451657  \n",
       "wkpopden          7449.00     59.690757     267.373451  \n",
       "wkempden          1068.00     79.350346     166.373254  \n",
       "vehavdum             1.00      1.000000       0.000000  \n",
       "femdum               1.00      1.000000       0.000000  \n",
       "age                 83.00     39.055478      11.392189  \n",
       "drlicdum             1.00      1.000000       0.000000  \n",
       "noncadum             1.00      1.000000       0.000000  \n",
       "numveh              14.00      2.401931       1.260521  \n",
       "hhsize              13.00      2.816067       1.410755  \n",
       "hhinc              145.00     58.457347      32.404718  \n",
       "famtype             99.00     11.895009      25.263293  \n",
       "hhowndum             1.00      1.000000       0.000000  \n",
       "numemphh             8.00      1.879897       0.808517  \n",
       "numadlt             10.00      2.260091       0.984045  \n",
       "nmlt5                8.00      1.389920       0.699908  \n",
       "nm5to11              5.00      1.384724       0.591494  \n",
       "nm12to16             4.00      1.242326       0.501454  \n",
       "wkccbd               1.00      1.000000       0.000000  \n",
       "wknccbd              1.00      1.000000       0.000000  \n",
       "corredis             1.00      1.000000       0.000000  \n",
       "vehbywrk             8.00      1.378351       0.781129  \n",
       "vocc                 9.00      1.228988       0.690713  \n",
       "wgt                  1.00      1.000000       0.000000  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d.data_co.statistics()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also get a larger view of any of these rows by running statistics on a single pandas.Series (i.e. one column from a DataFrame):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:42.521229Z",
     "start_time": "2020-03-20T04:30:42.315599Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><table style=\"margin-top:1px;\"><tr><th>key</th><th style=\"text-align:left;\">value</th></tr><tr><td>n</td><td style=\"text-align:left;\">5029</td></tr><tr><td>minimum</td><td style=\"text-align:left;\">3.0</td></tr><tr><td>maximum</td><td style=\"text-align:left;\">145.0</td></tr><tr><td>median</td><td style=\"text-align:left;\">55.0</td></tr><tr><td>histogram</td><td style=\"text-align:left;\"><div class=\"figure\" metadata=\"gASV7gEAAAAAAAB9lCiMC2Jpbl9oZWlnaHRzlIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLDYWUaAWMBWR0eXBllJOUjAJpOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQ2ilAAAAAAAAAHkBAAAAAAAA9AIAAAAAAAAbAwAAAAAAANsDAAAAAAAA8wIAAAAAAAAAAAAAAAAAAG4CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0BAAAAAAAAAAAAAAAAAAD/AAAAAAAAAJR0lGKMCWJpbl9lZGdlc5RoBGgHSwCFlGgJh5RSlChLAUsOhZRoDowCZjiUSwBLAYeUUpQoSwNoEk5OTkr/////Sv////9LAHSUYolDcAAAAAAAAAhAip3YiZ3YK0CKndiJndg4QCh2Yid24kFAip3YiZ1YR0DsxE7sxM5MQCh2Yid2IlFA2Ymd2IndU0CKndiJnZhWQDuxEzuxU1lA7MRO7MQOXECe2Imd2MleQCh2Yid2wmBAAAAAAAAgYkCUdJRijBF6ZXJvc19hcmVfZHJvcHBlZJSJjBJyYW5nZV9pc190cnVuY2F0ZWSUSwB1Lg==\" range_is_truncated=\"0\" style=\"min-width:5in\" zeros_are_dropped=\"False\"><svg height=\"107.335268pt\" version=\"1.1\" viewBox=\"0 0 364.478125 107.335268\" width=\"364.478125pt\">\n",
       " <defs>\n",
       "  <style type=\"text/css\">\n",
       "*{stroke-linecap:butt;stroke-linejoin:round;}\n",
       "  </style>\n",
       " </defs>\n",
       " <g id=\"figure_1\">\n",
       "  <title></title><g id=\"patch_1\">\n",
       "   <path d=\"M 0 107.335268  L 364.478125 107.335268  L 364.478125 0  L 0 0  z \" style=\"fill:none;\"></path>\n",
       "  </g>\n",
       "  <g id=\"axes_1\">\n",
       "   <g id=\"patch_2\">\n",
       "    <path d=\"M 20.878125 83.457143  L 357.278125 83.457143  L 357.278125 7.2  L 20.878125 7.2  z \" style=\"fill:none;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_3\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 36.169034 83.457143  L 59.69351 83.457143  L 59.69351 71.316043  L 36.169034 71.316043  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_4\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 59.69351 83.457143  L 83.217985 83.457143  L 83.217985 55.71657  L 59.69351 55.71657  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_5\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 83.217985 83.457143  L 106.742461 83.457143  L 106.742461 27.828832  L 83.217985 27.828832  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_6\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 106.742461 83.457143  L 130.266936 83.457143  L 130.266936 24.959118  L 106.742461 24.959118  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_7\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 130.266936 83.457143  L 153.791412 83.457143  L 153.791412 10.831293  L 130.266936 10.831293  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_8\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 153.791412 83.457143  L 177.315887 83.457143  L 177.315887 27.902414  L 153.791412 27.902414  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_9\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 177.315887 83.457143  L 200.840363 83.457143  L 200.840363 83.457143  L 177.315887 83.457143  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_10\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 200.840363 83.457143  L 224.364838 83.457143  L 224.364838 37.688876  L 200.840363 37.688876  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_11\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 224.364838 83.457143  L 247.889314 83.457143  L 247.889314 83.457143  L 224.364838 83.457143  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_12\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 247.889314 83.457143  L 271.413789 83.457143  L 271.413789 83.457143  L 247.889314 83.457143  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_13\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 271.413789 83.457143  L 294.938265 83.457143  L 294.938265 60.131515  L 271.413789 60.131515  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_14\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 294.938265 83.457143  L 318.46274 83.457143  L 318.46274 83.457143  L 294.938265 83.457143  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_15\">\n",
       "    <path clip-path=\"url(#p02d8708b7c)\" d=\"M 318.46274 83.457143  L 341.987216 83.457143  L 341.987216 64.693625  L 318.46274 64.693625  z \" style=\"fill:#1d8bcc;\"></path>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_1\">\n",
       "    <g id=\"xtick_1\">\n",
       "     <g id=\"line2d_1\">\n",
       "      <defs>\n",
       "       <path d=\"M 0 0  L 0 3.5  \" id=\"m28904402ee\" style=\"stroke:#000000;stroke-width:0.8;\"></path>\n",
       "      </defs>\n",
       "      <g>\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"29.708087\" y=\"83.457143\" xlink:href=\"#m28904402ee\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_1\">\n",
       "      \n",
       "      <defs>\n",
       "       <path d=\"M 31.78125 66.40625  Q 24.171875 66.40625 20.328125 58.90625  Q 16.5 51.421875 16.5 36.375  Q 16.5 21.390625 20.328125 13.890625  Q 24.171875 6.390625 31.78125 6.390625  Q 39.453125 6.390625 43.28125 13.890625  Q 47.125 21.390625 47.125 36.375  Q 47.125 51.421875 43.28125 58.90625  Q 39.453125 66.40625 31.78125 66.40625  z M 31.78125 74.21875  Q 44.046875 74.21875 50.515625 64.515625  Q 56.984375 54.828125 56.984375 36.375  Q 56.984375 17.96875 50.515625 8.265625  Q 44.046875 -1.421875 31.78125 -1.421875  Q 19.53125 -1.421875 13.0625 8.265625  Q 6.59375 17.96875 6.59375 36.375  Q 6.59375 54.828125 13.0625 64.515625  Q 19.53125 74.21875 31.78125 74.21875  z \" id=\"DejaVuSans-48\"></path>\n",
       "      </defs>\n",
       "      <g transform=\"translate(26.526837 98.05558)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-48\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_2\">\n",
       "     <g id=\"line2d_2\">\n",
       "      <g>\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"72.78107\" y=\"83.457143\" xlink:href=\"#m28904402ee\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_2\">\n",
       "      \n",
       "      <defs>\n",
       "       <path d=\"M 19.1875 8.296875  L 53.609375 8.296875  L 53.609375 0  L 7.328125 0  L 7.328125 8.296875  Q 12.9375 14.109375 22.625 23.890625  Q 32.328125 33.6875 34.8125 36.53125  Q 39.546875 41.84375 41.421875 45.53125  Q 43.3125 49.21875 43.3125 52.78125  Q 43.3125 58.59375 39.234375 62.25  Q 35.15625 65.921875 28.609375 65.921875  Q 23.96875 65.921875 18.8125 64.3125  Q 13.671875 62.703125 7.8125 59.421875  L 7.8125 69.390625  Q 13.765625 71.78125 18.9375 73  Q 24.125 74.21875 28.421875 74.21875  Q 39.75 74.21875 46.484375 68.546875  Q 53.21875 62.890625 53.21875 53.421875  Q 53.21875 48.921875 51.53125 44.890625  Q 49.859375 40.875 45.40625 35.40625  Q 44.1875 33.984375 37.640625 27.21875  Q 31.109375 20.453125 19.1875 8.296875  z \" id=\"DejaVuSans-50\"></path>\n",
       "      </defs>\n",
       "      <g transform=\"translate(66.41857 98.05558)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-50\"></use>\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_3\">\n",
       "     <g id=\"line2d_3\">\n",
       "      <g>\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"115.854053\" y=\"83.457143\" xlink:href=\"#m28904402ee\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_3\">\n",
       "      \n",
       "      <defs>\n",
       "       <path d=\"M 37.796875 64.3125  L 12.890625 25.390625  L 37.796875 25.390625  z M 35.203125 72.90625  L 47.609375 72.90625  L 47.609375 25.390625  L 58.015625 25.390625  L 58.015625 17.1875  L 47.609375 17.1875  L 47.609375 0  L 37.796875 0  L 37.796875 17.1875  L 4.890625 17.1875  L 4.890625 26.703125  z \" id=\"DejaVuSans-52\"></path>\n",
       "      </defs>\n",
       "      <g transform=\"translate(109.491553 98.05558)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-52\"></use>\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_4\">\n",
       "     <g id=\"line2d_4\">\n",
       "      <g>\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"158.927037\" y=\"83.457143\" xlink:href=\"#m28904402ee\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_4\">\n",
       "      \n",
       "      <defs>\n",
       "       <path d=\"M 33.015625 40.375  Q 26.375 40.375 22.484375 35.828125  Q 18.609375 31.296875 18.609375 23.390625  Q 18.609375 15.53125 22.484375 10.953125  Q 26.375 6.390625 33.015625 6.390625  Q 39.65625 6.390625 43.53125 10.953125  Q 47.40625 15.53125 47.40625 23.390625  Q 47.40625 31.296875 43.53125 35.828125  Q 39.65625 40.375 33.015625 40.375  z M 52.59375 71.296875  L 52.59375 62.3125  Q 48.875 64.0625 45.09375 64.984375  Q 41.3125 65.921875 37.59375 65.921875  Q 27.828125 65.921875 22.671875 59.328125  Q 17.53125 52.734375 16.796875 39.40625  Q 19.671875 43.65625 24.015625 45.921875  Q 28.375 48.1875 33.59375 48.1875  Q 44.578125 48.1875 50.953125 41.515625  Q 57.328125 34.859375 57.328125 23.390625  Q 57.328125 12.15625 50.6875 5.359375  Q 44.046875 -1.421875 33.015625 -1.421875  Q 20.359375 -1.421875 13.671875 8.265625  Q 6.984375 17.96875 6.984375 36.375  Q 6.984375 53.65625 15.1875 63.9375  Q 23.390625 74.21875 37.203125 74.21875  Q 40.921875 74.21875 44.703125 73.484375  Q 48.484375 72.75 52.59375 71.296875  z \" id=\"DejaVuSans-54\"></path>\n",
       "      </defs>\n",
       "      <g transform=\"translate(152.564537 98.05558)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-54\"></use>\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_5\">\n",
       "     <g id=\"line2d_5\">\n",
       "      <g>\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"202.00002\" y=\"83.457143\" xlink:href=\"#m28904402ee\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_5\">\n",
       "      \n",
       "      <defs>\n",
       "       <path d=\"M 31.78125 34.625  Q 24.75 34.625 20.71875 30.859375  Q 16.703125 27.09375 16.703125 20.515625  Q 16.703125 13.921875 20.71875 10.15625  Q 24.75 6.390625 31.78125 6.390625  Q 38.8125 6.390625 42.859375 10.171875  Q 46.921875 13.96875 46.921875 20.515625  Q 46.921875 27.09375 42.890625 30.859375  Q 38.875 34.625 31.78125 34.625  z M 21.921875 38.8125  Q 15.578125 40.375 12.03125 44.71875  Q 8.5 49.078125 8.5 55.328125  Q 8.5 64.0625 14.71875 69.140625  Q 20.953125 74.21875 31.78125 74.21875  Q 42.671875 74.21875 48.875 69.140625  Q 55.078125 64.0625 55.078125 55.328125  Q 55.078125 49.078125 51.53125 44.71875  Q 48 40.375 41.703125 38.8125  Q 48.828125 37.15625 52.796875 32.3125  Q 56.78125 27.484375 56.78125 20.515625  Q 56.78125 9.90625 50.3125 4.234375  Q 43.84375 -1.421875 31.78125 -1.421875  Q 19.734375 -1.421875 13.25 4.234375  Q 6.78125 9.90625 6.78125 20.515625  Q 6.78125 27.484375 10.78125 32.3125  Q 14.796875 37.15625 21.921875 38.8125  z M 18.3125 54.390625  Q 18.3125 48.734375 21.84375 45.5625  Q 25.390625 42.390625 31.78125 42.390625  Q 38.140625 42.390625 41.71875 45.5625  Q 45.3125 48.734375 45.3125 54.390625  Q 45.3125 60.0625 41.71875 63.234375  Q 38.140625 66.40625 31.78125 66.40625  Q 25.390625 66.40625 21.84375 63.234375  Q 18.3125 60.0625 18.3125 54.390625  z \" id=\"DejaVuSans-56\"></path>\n",
       "      </defs>\n",
       "      <g transform=\"translate(195.63752 98.05558)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-56\"></use>\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_6\">\n",
       "     <g id=\"line2d_6\">\n",
       "      <g>\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"245.073003\" y=\"83.457143\" xlink:href=\"#m28904402ee\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_6\">\n",
       "      \n",
       "      <defs>\n",
       "       <path d=\"M 12.40625 8.296875  L 28.515625 8.296875  L 28.515625 63.921875  L 10.984375 60.40625  L 10.984375 69.390625  L 28.421875 72.90625  L 38.28125 72.90625  L 38.28125 8.296875  L 54.390625 8.296875  L 54.390625 0  L 12.40625 0  z \" id=\"DejaVuSans-49\"></path>\n",
       "      </defs>\n",
       "      <g transform=\"translate(235.529253 98.05558)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-49\"></use>\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"></use>\n",
       "       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-48\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_7\">\n",
       "     <g id=\"line2d_7\">\n",
       "      <g>\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"288.145987\" y=\"83.457143\" xlink:href=\"#m28904402ee\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_7\">\n",
       "      \n",
       "      <g transform=\"translate(278.602237 98.05558)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-49\"></use>\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-50\"></use>\n",
       "       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-48\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "    <g id=\"xtick_8\">\n",
       "     <g id=\"line2d_8\">\n",
       "      <g>\n",
       "       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"331.21897\" y=\"83.457143\" xlink:href=\"#m28904402ee\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "     <g id=\"text_8\">\n",
       "      \n",
       "      <g transform=\"translate(321.67522 98.05558)scale(0.1 -0.1)\">\n",
       "       <use xlink:href=\"#DejaVuSans-49\"></use>\n",
       "       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-52\"></use>\n",
       "       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-48\"></use>\n",
       "      </g>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"matplotlib.axis_2\">\n",
       "    <g id=\"text_9\">\n",
       "     \n",
       "     <defs>\n",
       "      <path d=\"M 9.8125 72.90625  L 51.703125 72.90625  L 51.703125 64.59375  L 19.671875 64.59375  L 19.671875 43.109375  L 48.578125 43.109375  L 48.578125 34.8125  L 19.671875 34.8125  L 19.671875 0  L 9.8125 0  z \" id=\"DejaVuSans-70\"></path>\n",
       "      <path d=\"M 41.109375 46.296875  Q 39.59375 47.171875 37.8125 47.578125  Q 36.03125 48 33.890625 48  Q 26.265625 48 22.1875 43.046875  Q 18.109375 38.09375 18.109375 28.8125  L 18.109375 0  L 9.078125 0  L 9.078125 54.6875  L 18.109375 54.6875  L 18.109375 46.1875  Q 20.953125 51.171875 25.484375 53.578125  Q 30.03125 56 36.53125 56  Q 37.453125 56 38.578125 55.875  Q 39.703125 55.765625 41.0625 55.515625  z \" id=\"DejaVuSans-114\"></path>\n",
       "      <path d=\"M 56.203125 29.59375  L 56.203125 25.203125  L 14.890625 25.203125  Q 15.484375 15.921875 20.484375 11.0625  Q 25.484375 6.203125 34.421875 6.203125  Q 39.59375 6.203125 44.453125 7.46875  Q 49.3125 8.734375 54.109375 11.28125  L 54.109375 2.78125  Q 49.265625 0.734375 44.1875 -0.34375  Q 39.109375 -1.421875 33.890625 -1.421875  Q 20.796875 -1.421875 13.15625 6.1875  Q 5.515625 13.8125 5.515625 26.8125  Q 5.515625 40.234375 12.765625 48.109375  Q 20.015625 56 32.328125 56  Q 43.359375 56 49.78125 48.890625  Q 56.203125 41.796875 56.203125 29.59375  z M 47.21875 32.234375  Q 47.125 39.59375 43.09375 43.984375  Q 39.0625 48.390625 32.421875 48.390625  Q 24.90625 48.390625 20.390625 44.140625  Q 15.875 39.890625 15.1875 32.171875  z \" id=\"DejaVuSans-101\"></path>\n",
       "      <path d=\"M 14.796875 27.296875  Q 14.796875 17.390625 18.875 11.75  Q 22.953125 6.109375 30.078125 6.109375  Q 37.203125 6.109375 41.296875 11.75  Q 45.40625 17.390625 45.40625 27.296875  Q 45.40625 37.203125 41.296875 42.84375  Q 37.203125 48.484375 30.078125 48.484375  Q 22.953125 48.484375 18.875 42.84375  Q 14.796875 37.203125 14.796875 27.296875  z M 45.40625 8.203125  Q 42.578125 3.328125 38.25 0.953125  Q 33.9375 -1.421875 27.875 -1.421875  Q 17.96875 -1.421875 11.734375 6.484375  Q 5.515625 14.40625 5.515625 27.296875  Q 5.515625 40.1875 11.734375 48.09375  Q 17.96875 56 27.875 56  Q 33.9375 56 38.25 53.625  Q 42.578125 51.265625 45.40625 46.390625  L 45.40625 54.6875  L 54.390625 54.6875  L 54.390625 -20.796875  L 45.40625 -20.796875  z \" id=\"DejaVuSans-113\"></path>\n",
       "      <path d=\"M 8.5 21.578125  L 8.5 54.6875  L 17.484375 54.6875  L 17.484375 21.921875  Q 17.484375 14.15625 20.5 10.265625  Q 23.53125 6.390625 29.59375 6.390625  Q 36.859375 6.390625 41.078125 11.03125  Q 45.3125 15.671875 45.3125 23.6875  L 45.3125 54.6875  L 54.296875 54.6875  L 54.296875 0  L 45.3125 0  L 45.3125 8.40625  Q 42.046875 3.421875 37.71875 1  Q 33.40625 -1.421875 27.6875 -1.421875  Q 18.265625 -1.421875 13.375 4.4375  Q 8.5 10.296875 8.5 21.578125  z M 31.109375 56  z \" id=\"DejaVuSans-117\"></path>\n",
       "      <path d=\"M 54.890625 33.015625  L 54.890625 0  L 45.90625 0  L 45.90625 32.71875  Q 45.90625 40.484375 42.875 44.328125  Q 39.84375 48.1875 33.796875 48.1875  Q 26.515625 48.1875 22.3125 43.546875  Q 18.109375 38.921875 18.109375 30.90625  L 18.109375 0  L 9.078125 0  L 9.078125 54.6875  L 18.109375 54.6875  L 18.109375 46.1875  Q 21.34375 51.125 25.703125 53.5625  Q 30.078125 56 35.796875 56  Q 45.21875 56 50.046875 50.171875  Q 54.890625 44.34375 54.890625 33.015625  z \" id=\"DejaVuSans-110\"></path>\n",
       "      <path d=\"M 48.78125 52.59375  L 48.78125 44.1875  Q 44.96875 46.296875 41.140625 47.34375  Q 37.3125 48.390625 33.40625 48.390625  Q 24.65625 48.390625 19.8125 42.84375  Q 14.984375 37.3125 14.984375 27.296875  Q 14.984375 17.28125 19.8125 11.734375  Q 24.65625 6.203125 33.40625 6.203125  Q 37.3125 6.203125 41.140625 7.25  Q 44.96875 8.296875 48.78125 10.40625  L 48.78125 2.09375  Q 45.015625 0.34375 40.984375 -0.53125  Q 36.96875 -1.421875 32.421875 -1.421875  Q 20.0625 -1.421875 12.78125 6.34375  Q 5.515625 14.109375 5.515625 27.296875  Q 5.515625 40.671875 12.859375 48.328125  Q 20.21875 56 33.015625 56  Q 37.15625 56 41.109375 55.140625  Q 45.0625 54.296875 48.78125 52.59375  z \" id=\"DejaVuSans-99\"></path>\n",
       "      <path d=\"M 32.171875 -5.078125  Q 28.375 -14.84375 24.75 -17.8125  Q 21.140625 -20.796875 15.09375 -20.796875  L 7.90625 -20.796875  L 7.90625 -13.28125  L 13.1875 -13.28125  Q 16.890625 -13.28125 18.9375 -11.515625  Q 21 -9.765625 23.484375 -3.21875  L 25.09375 0.875  L 2.984375 54.6875  L 12.5 54.6875  L 29.59375 11.921875  L 46.6875 54.6875  L 56.203125 54.6875  z \" id=\"DejaVuSans-121\"></path>\n",
       "     </defs>\n",
       "     <g transform=\"translate(14.798438 71.626228)rotate(-90)scale(0.1 -0.1)\">\n",
       "      <use xlink:href=\"#DejaVuSans-70\"></use>\n",
       "      <use x=\"57.410156\" xlink:href=\"#DejaVuSans-114\"></use>\n",
       "      <use x=\"98.492188\" xlink:href=\"#DejaVuSans-101\"></use>\n",
       "      <use x=\"160.015625\" xlink:href=\"#DejaVuSans-113\"></use>\n",
       "      <use x=\"223.492188\" xlink:href=\"#DejaVuSans-117\"></use>\n",
       "      <use x=\"286.871094\" xlink:href=\"#DejaVuSans-101\"></use>\n",
       "      <use x=\"348.394531\" xlink:href=\"#DejaVuSans-110\"></use>\n",
       "      <use x=\"411.773438\" xlink:href=\"#DejaVuSans-99\"></use>\n",
       "      <use x=\"466.753906\" xlink:href=\"#DejaVuSans-121\"></use>\n",
       "     </g>\n",
       "    </g>\n",
       "   </g>\n",
       "   <g id=\"patch_16\">\n",
       "    <path d=\"M 20.878125 83.457143  L 20.878125 7.2  \" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_17\">\n",
       "    <path d=\"M 357.278125 83.457143  L 357.278125 7.2  \" style=\"fill:none;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_18\">\n",
       "    <path d=\"M 20.878125 83.457143  L 357.278125 83.457143  \" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"></path>\n",
       "   </g>\n",
       "   <g id=\"patch_19\">\n",
       "    <path d=\"M 20.878125 7.2  L 357.278125 7.2  \" style=\"fill:none;\"></path>\n",
       "   </g>\n",
       "  </g>\n",
       " </g>\n",
       " <defs>\n",
       "  <clipPath id=\"p02d8708b7c\">\n",
       "   <rect height=\"76.257143\" width=\"336.4\" x=\"20.878125\" y=\"7.2\"></rect>\n",
       "  </clipPath>\n",
       " </defs>\n",
       "</svg></div></td></tr><tr><td>mean</td><td style=\"text-align:left;\">58.45734738516604</td></tr><tr><td>stdev</td><td style=\"text-align:left;\">32.40471784967591</td></tr><tr><td>zeros</td><td style=\"text-align:left;\">0</td></tr><tr><td>positives</td><td style=\"text-align:left;\">5029</td></tr><tr><td>negatives</td><td style=\"text-align:left;\">0</td></tr><tr><td>nonzero_minimum</td><td style=\"text-align:left;\">3.0</td></tr><tr><td>nonzero_maximum</td><td style=\"text-align:left;\">145.0</td></tr><tr><td>nonzero_mean</td><td style=\"text-align:left;\">58.45734738516604</td></tr><tr><td>nonzero_stdev</td><td style=\"text-align:left;\">32.40471784967591</td></tr></table></div>"
      ],
      "text/plain": [
       "┣               n: 5029\n",
       "┣         minimum: 3.0\n",
       "┣         maximum: 145.0\n",
       "┣          median: 55.0\n",
       "┣       histogram: <xmle.Elem 'div' with 1 children>\n",
       "┣            mean: 58.45734738516604\n",
       "┣           stdev: 32.40471784967591\n",
       "┣           zeros: 0\n",
       "┣       positives: 5029\n",
       "┣       negatives: 0\n",
       "┣ nonzero_minimum: 3.0\n",
       "┣ nonzero_maximum: 145.0\n",
       "┣    nonzero_mean: 58.45734738516604\n",
       "┣   nonzero_stdev: 32.40471784967591"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d.data_co['hhinc'].statistics()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model Design"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Methods vary on two primary factors: the initial specification selection, and model extension and refinement.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Most common approach: Build from simple to complex\n",
    "    - Start with a minimal specification which includes:\n",
    "        - Alternative specific constants (ASCs)\n",
    "        - Essential level of service variables\n",
    "        - Most important demographic variables\n",
    "    - Make incremental changes to improve model based on:\n",
    "        - Behavioral realism\n",
    "        - Empirical fit to the data\n",
    "        - Avoidance of excessive complexity\n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Alternative approach: Start with complex\n",
    "    - Start with a richer specification including many more variables such as\n",
    "        - Travel time (in-vehicle and out-of-vehicle time)\n",
    "        - Out of pocket travel cost\n",
    "        - Frequency of departure for carrier modes\n",
    "        - Household automobile ownership or availability\n",
    "        - Household income\n",
    "        - Size of the travel party\n",
    "    - Make incremental changes to trim model based on:\n",
    "        - Avoidance of excessive complexity\n",
    "        - Behavioral realism\n",
    "        - Empirical fit to the data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To demostrate the model design process, we'll follow the [Self Instructing Course](http://www.caee.utexas.edu/prof/bhat/courses/lm_draft_060131final-060630.pdf) and begin\n",
    "with a simple model.  To do this with Larch, we'll create a `Model` based on the \n",
    "`DataFrames` we created above."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:42.689192Z",
     "start_time": "2020-03-20T04:30:42.523378Z"
    }
   },
   "outputs": [],
   "source": [
    "m1 = larch.Model(dataservice=d)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We'll want to write a utility function for each alternative that includes\n",
    "\n",
    "- Alternative specific constants (ASCs)\n",
    "- Most important demographic variables: income\n",
    "- Essential level of service variables: travel time and travel cost\n",
    "\n",
    "You'll recall from the derivation of the MNL model that only the differences\n",
    "in utility are relevant.  For the constants, and for demographic measures such\n",
    "as household income, the explanatory data does not vary across the alternatives,\n",
    "therefore the parameters must do so.\n",
    "\n",
    "The split of the data we observed above helps reinforce this: household income\n",
    "(`\"hhinc\"`) appears in the `idco` format data -- implying that it does not \n",
    "vary based on the alternative. \n",
    "\n",
    "So, we'll want to write a utility function that looks something like this:\n",
    "\n",
    "$$\n",
    "U_{i} = \\beta_{const,i} + \\beta_{income,i} Income + \\beta_{time} Time + \\beta_{cost} Cost + \\varepsilon_i\n",
    "$$\n",
    "\n",
    "or, because in model estimation we're only going to compute the systematic\n",
    "utility and let our tools manage the random utility:\n",
    "\n",
    "$$\n",
    "V_{i} = \\beta_{const,i} + \\beta_{income,i} Income + \\beta_{time} Time + \\beta_{cost} Cost \n",
    "$$\n",
    "\n",
    "You'll note that the constant and the income terms have parameters indexed both by\n",
    "the type of parameter and the alternative, while the time and cost terms have \n",
    "parameters indexed only by the type of parameter.  In Larch, we'll seperate these two\n",
    "kinds of parameters into seperate parts of the utility function.\n",
    "\n",
    "For the part of utility using `idco` data, we'll want to write seperate utility\n",
    "functions with unique parameters for each alternative.  We'll do that using the\n",
    "`utility_co` attribute of the `Model`, and we'll write out linear-in-parmeters\n",
    "functions using special classes imported from Larch: `P` to refer to parameters \n",
    "and `X` to refer to data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:42.696029Z",
     "start_time": "2020-03-20T04:30:42.690956Z"
    }
   },
   "outputs": [],
   "source": [
    "from larch import P, X\n",
    "\n",
    "m1.utility_co[2] = P(\"ASC_SR2\")  + P(\"hhinc#2\") * X(\"hhinc\")\n",
    "m1.utility_co[3] = P(\"ASC_SR3P\") + P(\"hhinc#3\") * X(\"hhinc\")\n",
    "m1.utility_co[4] = P(\"ASC_TRAN\") + P(\"hhinc#4\") * X(\"hhinc\")\n",
    "m1.utility_co[5] = P(\"ASC_BIKE\") + P(\"hhinc#5\") * X(\"hhinc\")\n",
    "m1.utility_co[6] = P(\"ASC_WALK\") + P(\"hhinc#6\") * X(\"hhinc\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Notice that we don't write a function for alternative 1.  Take a peek back at the theory section to understand why."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For the part of utility using `idca` data, we'll want to write a single utility\n",
    "function for all alternatives.  We'll do that using the\n",
    "`utility_ca` attribute of the `Model`, again writing out linear-in-parmeters\n",
    "functions using the `P` and `X` classes, or the shorthand `PX` class, which\n",
    "implies multipling a parameter and data with the same name."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:42.700460Z",
     "start_time": "2020-03-20T04:30:42.697562Z"
    }
   },
   "outputs": [],
   "source": [
    "from larch import PX\n",
    "\n",
    "m1.utility_ca = PX(\"tottime\") + PX(\"totcost\")\n",
    "m1.utility_ca = P(\"tottime\") * X(\"tottime\") + P(\"totcost\") * X(\"totcost\") # same!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-02-13T17:58:02.328897Z",
     "start_time": "2020-02-13T17:58:02.324992Z"
    }
   },
   "source": [
    "We'll add a title to this model, which will make reporting result later more convenient."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:42.704364Z",
     "start_time": "2020-03-20T04:30:42.701966Z"
    }
   },
   "outputs": [],
   "source": [
    "m1.title = \"Model 1\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-02-13T18:04:17.963898Z",
     "start_time": "2020-02-13T18:04:17.951278Z"
    }
   },
   "source": [
    "Now we're ready to estimate the parameters from our model.  We can use the\n",
    "`estimate` method to do this, which will run an appropriate likelihood maximization routine to find the \n",
    "best parameter values for the model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:45.125027Z",
     "start_time": "2020-03-20T04:30:42.706390Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<h3>Iteration 010 [Converged] </h3>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<p>LL = -3626.1862555129305</p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>initvalue</th>\n",
       "      <th>nullvalue</th>\n",
       "      <th>minimum</th>\n",
       "      <th>maximum</th>\n",
       "      <th>holdfast</th>\n",
       "      <th>note</th>\n",
       "      <th>best</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-2.376328</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-2.376328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-2.178014</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-2.178014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.725078</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-3.725078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>-0.670861</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.670861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>-0.206775</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.206775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#2</th>\n",
       "      <td>-0.002170</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.002170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#3</th>\n",
       "      <td>0.000358</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>0.000358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#4</th>\n",
       "      <td>-0.005286</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.005286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#5</th>\n",
       "      <td>-0.012808</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.012808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#6</th>\n",
       "      <td>-0.009686</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.009686</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost</th>\n",
       "      <td>-0.004920</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.004920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tottime</th>\n",
       "      <td>-0.051342</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-0.051342</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             value  initvalue  nullvalue  minimum  maximum  holdfast note  \\\n",
       "ASC_BIKE -2.376328        0.0        0.0     -inf      inf         0        \n",
       "ASC_SR2  -2.178014        0.0        0.0     -inf      inf         0        \n",
       "ASC_SR3P -3.725078        0.0        0.0     -inf      inf         0        \n",
       "ASC_TRAN -0.670861        0.0        0.0     -inf      inf         0        \n",
       "ASC_WALK -0.206775        0.0        0.0     -inf      inf         0        \n",
       "hhinc#2  -0.002170        0.0        0.0     -inf      inf         0        \n",
       "hhinc#3   0.000358        0.0        0.0     -inf      inf         0        \n",
       "hhinc#4  -0.005286        0.0        0.0     -inf      inf         0        \n",
       "hhinc#5  -0.012808        0.0        0.0     -inf      inf         0        \n",
       "hhinc#6  -0.009686        0.0        0.0     -inf      inf         0        \n",
       "totcost  -0.004920        0.0        0.0     -inf      inf         0        \n",
       "tottime  -0.051342        0.0        0.0     -inf      inf         0        \n",
       "\n",
       "              best  \n",
       "ASC_BIKE -2.376328  \n",
       "ASC_SR2  -2.178014  \n",
       "ASC_SR3P -3.725078  \n",
       "ASC_TRAN -0.670861  \n",
       "ASC_WALK -0.206775  \n",
       "hhinc#2  -0.002170  \n",
       "hhinc#3   0.000358  \n",
       "hhinc#4  -0.005286  \n",
       "hhinc#5  -0.012808  \n",
       "hhinc#6  -0.009686  \n",
       "totcost  -0.004920  \n",
       "tottime  -0.051342  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "m1.estimate();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can review the results of the parameter estimation in the `parameter_summary`: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:45.159479Z",
     "start_time": "2020-03-20T04:30:45.134180Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Value</th>\n",
       "      <th>Std Err</th>\n",
       "      <th>t Stat</th>\n",
       "      <th>Signif</th>\n",
       "      <th>Null Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-2.38</td>\n",
       "      <td>0.305</td>\n",
       "      <td>-7.80</td>\n",
       "      <td>***</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-2.18</td>\n",
       "      <td>0.105</td>\n",
       "      <td>-20.81</td>\n",
       "      <td>***</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.73</td>\n",
       "      <td>0.178</td>\n",
       "      <td>-20.96</td>\n",
       "      <td>***</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>-0.671</td>\n",
       "      <td>0.133</td>\n",
       "      <td>-5.06</td>\n",
       "      <td>***</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>-0.207</td>\n",
       "      <td>0.194</td>\n",
       "      <td>-1.07</td>\n",
       "      <td></td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#2</th>\n",
       "      <td>-0.00217</td>\n",
       "      <td>0.00155</td>\n",
       "      <td>-1.40</td>\n",
       "      <td></td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#3</th>\n",
       "      <td>0.000358</td>\n",
       "      <td>0.00254</td>\n",
       "      <td>0.14</td>\n",
       "      <td></td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#4</th>\n",
       "      <td>-0.00529</td>\n",
       "      <td>0.00183</td>\n",
       "      <td>-2.89</td>\n",
       "      <td>**</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#5</th>\n",
       "      <td>-0.0128</td>\n",
       "      <td>0.00532</td>\n",
       "      <td>-2.41</td>\n",
       "      <td>*</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#6</th>\n",
       "      <td>-0.00969</td>\n",
       "      <td>0.00303</td>\n",
       "      <td>-3.19</td>\n",
       "      <td>**</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost</th>\n",
       "      <td>-0.00492</td>\n",
       "      <td>0.000239</td>\n",
       "      <td>-20.60</td>\n",
       "      <td>***</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tottime</th>\n",
       "      <td>-0.0513</td>\n",
       "      <td>0.00310</td>\n",
       "      <td>-16.57</td>\n",
       "      <td>***</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Value   Std Err  t Stat Signif  Null Value\n",
       "ASC_BIKE     -2.38     0.305   -7.80    ***         0.0\n",
       "ASC_SR2      -2.18     0.105  -20.81    ***         0.0\n",
       "ASC_SR3P     -3.73     0.178  -20.96    ***         0.0\n",
       "ASC_TRAN    -0.671     0.133   -5.06    ***         0.0\n",
       "ASC_WALK    -0.207     0.194   -1.07                0.0\n",
       "hhinc#2   -0.00217   0.00155   -1.40                0.0\n",
       "hhinc#3   0.000358   0.00254    0.14                0.0\n",
       "hhinc#4   -0.00529   0.00183   -2.89     **         0.0\n",
       "hhinc#5    -0.0128   0.00532   -2.41      *         0.0\n",
       "hhinc#6   -0.00969   0.00303   -3.19     **         0.0\n",
       "totcost   -0.00492  0.000239  -20.60    ***         0.0\n",
       "tottime    -0.0513   0.00310  -16.57    ***         0.0"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m1.parameter_summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We'll also want to have the log likelihood of the null model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:45.261520Z",
     "start_time": "2020-03-20T04:30:45.165629Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-7309.600971749625"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m1.loglike_null()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And for a constants only model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:46.055335Z",
     "start_time": "2020-03-20T04:30:45.263549Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<h3>Iteration 005 [Converged] </h3>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<p>LL = -4132.915647884131</p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>initvalue</th>\n",
       "      <th>nullvalue</th>\n",
       "      <th>minimum</th>\n",
       "      <th>maximum</th>\n",
       "      <th>holdfast</th>\n",
       "      <th>note</th>\n",
       "      <th>best</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-3.334602</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-3.334602</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-2.136724</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-2.136724</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.303312</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-3.303312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>-1.950529</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-1.950529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>-2.040437</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-inf</td>\n",
       "      <td>inf</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>-2.040437</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             value  initvalue  nullvalue  minimum  maximum  holdfast note  \\\n",
       "ASC_BIKE -3.334602        0.0        0.0     -inf      inf         0        \n",
       "ASC_SR2  -2.136724        0.0        0.0     -inf      inf         0        \n",
       "ASC_SR3P -3.303312        0.0        0.0     -inf      inf         0        \n",
       "ASC_TRAN -1.950529        0.0        0.0     -inf      inf         0        \n",
       "ASC_WALK -2.040437        0.0        0.0     -inf      inf         0        \n",
       "\n",
       "              best  \n",
       "ASC_BIKE -3.334602  \n",
       "ASC_SR2  -2.136724  \n",
       "ASC_SR3P -3.303312  \n",
       "ASC_TRAN -1.950529  \n",
       "ASC_WALK -2.040437  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "m_c = larch.Model(dataservice=d)\n",
    "m_c.utility_co[2] = P(\"ASC_SR2\")  \n",
    "m_c.utility_co[3] = P(\"ASC_SR3P\") \n",
    "m_c.utility_co[4] = P(\"ASC_TRAN\") \n",
    "m_c.utility_co[5] = P(\"ASC_BIKE\") \n",
    "m_c.utility_co[6] = P(\"ASC_WALK\") \n",
    "m_c.title = \"Constants Only\"\n",
    "# m_c.estimate(); # This can be slow!\n",
    "m_c.load_data()\n",
    "m_c.loglike_null()\n",
    "m_c.maximize_loglike();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:46.067715Z",
     "start_time": "2020-03-20T04:30:46.057398Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Value</th>\n",
       "      <th>Null Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-3.33</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-2.14</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.30</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>-1.95</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>-2.04</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Value  Null Value\n",
       "ASC_BIKE  -3.33         0.0\n",
       "ASC_SR2   -2.14         0.0\n",
       "ASC_SR3P  -3.30         0.0\n",
       "ASC_TRAN  -1.95         0.0\n",
       "ASC_WALK  -2.04         0.0"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m_c.parameter_summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:46.072959Z",
     "start_time": "2020-03-20T04:30:46.069778Z"
    }
   },
   "outputs": [],
   "source": [
    "from larch.util.summary import joint_parameter_summary\n",
    "from larch.util.excel import ExcelWriter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:46.079326Z",
     "start_time": "2020-03-20T04:30:46.074918Z"
    }
   },
   "outputs": [],
   "source": [
    "xl = ExcelWriter('/tmp/mode-choice.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:46.531964Z",
     "start_time": "2020-03-20T04:30:46.081386Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 1</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Constants Only</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Category</th>\n",
       "      <th>Parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"12\" valign=\"top\">Parameters</th>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-2.38</td>\n",
       "      <td>-7.80</td>\n",
       "      <td>-3.33</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-2.18</td>\n",
       "      <td>-20.81</td>\n",
       "      <td>-2.14</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.73</td>\n",
       "      <td>-20.96</td>\n",
       "      <td>-3.30</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>-0.671</td>\n",
       "      <td>-5.06</td>\n",
       "      <td>-1.95</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>-0.207</td>\n",
       "      <td>-1.07</td>\n",
       "      <td>-2.04</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#2</th>\n",
       "      <td>-0.00217</td>\n",
       "      <td>-1.40</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#3</th>\n",
       "      <td>0.000358</td>\n",
       "      <td>0.14</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#4</th>\n",
       "      <td>-0.00529</td>\n",
       "      <td>-2.89</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#5</th>\n",
       "      <td>-0.0128</td>\n",
       "      <td>-2.41</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#6</th>\n",
       "      <td>-0.00969</td>\n",
       "      <td>-3.19</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost</th>\n",
       "      <td>-0.00492</td>\n",
       "      <td>-20.60</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tottime</th>\n",
       "      <td>-0.0513</td>\n",
       "      <td>-16.57</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>----</th>\n",
       "      <th>----</th>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">Log Likelihood</th>\n",
       "      <th>Converged</th>\n",
       "      <td>-3,626.19</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Null</th>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Constants Only</th>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Rho Squared</th>\n",
       "      <th>vs Null</th>\n",
       "      <td>0.5039</td>\n",
       "      <td></td>\n",
       "      <td>0.4346</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vs Constants Only</th>\n",
       "      <td>0.1226</td>\n",
       "      <td></td>\n",
       "      <td>0.0000</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                    Model 1         Constants Only       \n",
       "                                      Param  t-Stat          Param t-Stat\n",
       "Category       Parameter                                                 \n",
       "Parameters     ASC_BIKE               -2.38   -7.80          -3.33       \n",
       "               ASC_SR2                -2.18  -20.81          -2.14       \n",
       "               ASC_SR3P               -3.73  -20.96          -3.30       \n",
       "               ASC_TRAN              -0.671   -5.06          -1.95       \n",
       "               ASC_WALK              -0.207   -1.07          -2.04       \n",
       "               hhinc#2             -0.00217   -1.40                      \n",
       "               hhinc#3             0.000358    0.14                      \n",
       "               hhinc#4             -0.00529   -2.89                      \n",
       "               hhinc#5              -0.0128   -2.41                      \n",
       "               hhinc#6             -0.00969   -3.19                      \n",
       "               totcost             -0.00492  -20.60                      \n",
       "               tottime              -0.0513  -16.57                      \n",
       "----           ----                    ----    ----           ----   ----\n",
       "Log Likelihood Converged          -3,626.19              -4,132.92       \n",
       "               Null               -7,309.60              -7,309.60       \n",
       "               Constants Only     -4,132.92              -4,132.92       \n",
       "Rho Squared    vs Null               0.5039                 0.4346       \n",
       "               vs Constants Only     0.1226                 0.0000       "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xl.add_content_tab(\n",
    "    joint_parameter_summary([m1, m_c], bases=[m_c]), \n",
    "    sheetname='Step 1',\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Income Refinements\n",
    "\n",
    "Let's look at some plausible specifications for income refinements.\n",
    "\n",
    "- Model 2: The effect of income relative to drive alone is the same for the two shared ride modes (shared ride 2 and shared ride 3+)\n",
    "\n",
    "- Model 3: The effect of income relative to drive alone is the same for both shared ride modes and transit but is different for the other modes.\n",
    "\n",
    "- Model 4: The effect of income on all the automobile modes (drive alone, shared ride 2, and shared ride 3+) is the same."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are two ways to make sure that the effect of income relative to \n",
    "drive alone is at least as negative for SR3+ as it is for SR2: \n",
    "\n",
    "- make them actually the same parameter, or \n",
    "- impose a constraint that the parameter for SR3+ must be less than or equal to the parameter for SR2.\n",
    "\n",
    "The first way is simpler, generally faster to estimate, and more\n",
    "numerically stable.  The second method, on the other hand, allows\n",
    "the constraint to unwind automatically if doing so would be \n",
    "valuable as we further refine the model specification."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:48.314959Z",
     "start_time": "2020-03-20T04:30:46.534015Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "# Make them the same parameter\n",
    "m2 = m1.copy()\n",
    "m2.title = \"Model 2\"\n",
    "m2.utility_co[2] = P(\"ASC_SR2\")  + P(\"hhinc#23\") * X(\"hhinc\")\n",
    "m2.utility_co[3] = P(\"ASC_SR3P\") + P(\"hhinc#23\") * X(\"hhinc\")\n",
    "m2.remove_unused_parameters() # removes the old #2 and #3 parameters\n",
    "r2=m2.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:55.358620Z",
     "start_time": "2020-03-20T04:30:48.317064Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "# Impose a constraint directly\n",
    "m2a = m1.copy()\n",
    "m2a.title = \"Model 2.1\"\n",
    "m2a.constraints.append(\"hhinc#3 <= hhinc#2\")\n",
    "m2a.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:55.849401Z",
     "start_time": "2020-03-20T04:30:55.360590Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 2</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 2.1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Category</th>\n",
       "      <th>Parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"13\" valign=\"top\">Parameters</th>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-2.38</td>\n",
       "      <td>-7.81</td>\n",
       "      <td>-2.38</td>\n",
       "      <td>-7.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-2.21</td>\n",
       "      <td>-22.66</td>\n",
       "      <td>-2.21</td>\n",
       "      <td>-22.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.61</td>\n",
       "      <td>-29.30</td>\n",
       "      <td>-3.61</td>\n",
       "      <td>-29.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>-0.670</td>\n",
       "      <td>-5.05</td>\n",
       "      <td>-0.670</td>\n",
       "      <td>-5.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>-0.207</td>\n",
       "      <td>-1.07</td>\n",
       "      <td>-0.207</td>\n",
       "      <td>-1.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#2</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.00158</td>\n",
       "      <td>-1.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#23</th>\n",
       "      <td>-0.00158</td>\n",
       "      <td>-1.13</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#3</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.00158</td>\n",
       "      <td>-1.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#4</th>\n",
       "      <td>-0.00532</td>\n",
       "      <td>-2.91</td>\n",
       "      <td>-0.00532</td>\n",
       "      <td>-2.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#5</th>\n",
       "      <td>-0.0128</td>\n",
       "      <td>-2.41</td>\n",
       "      <td>-0.0128</td>\n",
       "      <td>-2.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#6</th>\n",
       "      <td>-0.00968</td>\n",
       "      <td>-3.19</td>\n",
       "      <td>-0.00968</td>\n",
       "      <td>-3.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost</th>\n",
       "      <td>-0.00492</td>\n",
       "      <td>-20.61</td>\n",
       "      <td>-0.00493</td>\n",
       "      <td>-20.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tottime</th>\n",
       "      <td>-0.0514</td>\n",
       "      <td>-16.57</td>\n",
       "      <td>-0.0513</td>\n",
       "      <td>-16.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>----</th>\n",
       "      <th>----</th>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Log Likelihood</th>\n",
       "      <th>Converged</th>\n",
       "      <td>-3,626.59</td>\n",
       "      <td></td>\n",
       "      <td>-3,626.59</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Null</th>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Rho Squared</th>\n",
       "      <th>vs Null</th>\n",
       "      <td>0.5039</td>\n",
       "      <td></td>\n",
       "      <td>0.5039</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Model 2          Model 2.1        \n",
       "                              Param  t-Stat      Param  t-Stat\n",
       "Category       Parameter                                      \n",
       "Parameters     ASC_BIKE       -2.38   -7.81      -2.38   -7.81\n",
       "               ASC_SR2        -2.21  -22.66      -2.21  -22.66\n",
       "               ASC_SR3P       -3.61  -29.30      -3.61  -29.30\n",
       "               ASC_TRAN      -0.670   -5.05     -0.670   -5.05\n",
       "               ASC_WALK      -0.207   -1.07     -0.207   -1.07\n",
       "               hhinc#2                        -0.00158   -1.13\n",
       "               hhinc#23    -0.00158   -1.13                   \n",
       "               hhinc#3                        -0.00158   -1.13\n",
       "               hhinc#4     -0.00532   -2.91   -0.00532   -2.91\n",
       "               hhinc#5      -0.0128   -2.41    -0.0128   -2.41\n",
       "               hhinc#6     -0.00968   -3.19   -0.00968   -3.19\n",
       "               totcost     -0.00492  -20.61   -0.00493  -20.61\n",
       "               tottime      -0.0514  -16.57    -0.0513  -16.56\n",
       "----           ----            ----    ----       ----    ----\n",
       "Log Likelihood Converged  -3,626.59          -3,626.59        \n",
       "               Null       -7,309.60          -7,309.60        \n",
       "Rho Squared    vs Null       0.5039             0.5039        "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "joint_parameter_summary([m2, m2a])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:57.778509Z",
     "start_time": "2020-03-20T04:30:55.851265Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m3 = m1.copy()\n",
    "m3.title = \"Model 3\"\n",
    "m3.utility_co[2] = P(\"ASC_SR2\")  + P(\"hhinc#234\") * X(\"hhinc\")\n",
    "m3.utility_co[3] = P(\"ASC_SR3P\") + P(\"hhinc#234\") * X(\"hhinc\")\n",
    "m3.utility_co[4] = P(\"ASC_TRAN\") + P(\"hhinc#234\") * X(\"hhinc\")\n",
    "m3.remove_unused_parameters() # removes the old parameters\n",
    "m3.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:30:59.383696Z",
     "start_time": "2020-03-20T04:30:57.780748Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m4 = m1.copy()\n",
    "m4.title = \"Model 4\"\n",
    "m4.utility_co[2] = P(\"ASC_SR2\")  \n",
    "m4.utility_co[3] = P(\"ASC_SR3P\") \n",
    "m4.remove_unused_parameters() # removes the old #2 and #3 parameters\n",
    "m4.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:00.270873Z",
     "start_time": "2020-03-20T04:30:59.385946Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 1</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 2</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 3</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 4</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Category</th>\n",
       "      <th>Parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"14\" valign=\"top\">Parameters</th>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-2.38</td>\n",
       "      <td>-7.80</td>\n",
       "      <td>-2.38</td>\n",
       "      <td>-7.81</td>\n",
       "      <td>-2.39</td>\n",
       "      <td>-7.85</td>\n",
       "      <td>-2.40</td>\n",
       "      <td>-7.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-2.18</td>\n",
       "      <td>-20.81</td>\n",
       "      <td>-2.21</td>\n",
       "      <td>-22.66</td>\n",
       "      <td>-2.14</td>\n",
       "      <td>-24.18</td>\n",
       "      <td>-2.30</td>\n",
       "      <td>-42.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.73</td>\n",
       "      <td>-20.96</td>\n",
       "      <td>-3.61</td>\n",
       "      <td>-29.30</td>\n",
       "      <td>-3.53</td>\n",
       "      <td>-30.64</td>\n",
       "      <td>-3.70</td>\n",
       "      <td>-39.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>-0.671</td>\n",
       "      <td>-5.06</td>\n",
       "      <td>-0.670</td>\n",
       "      <td>-5.05</td>\n",
       "      <td>-0.799</td>\n",
       "      <td>-7.11</td>\n",
       "      <td>-0.697</td>\n",
       "      <td>-5.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>-0.207</td>\n",
       "      <td>-1.07</td>\n",
       "      <td>-0.207</td>\n",
       "      <td>-1.07</td>\n",
       "      <td>-0.230</td>\n",
       "      <td>-1.19</td>\n",
       "      <td>-0.229</td>\n",
       "      <td>-1.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#2</th>\n",
       "      <td>-0.00217</td>\n",
       "      <td>-1.40</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#23</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.00158</td>\n",
       "      <td>-1.13</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#234</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.00287</td>\n",
       "      <td>-2.35</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#3</th>\n",
       "      <td>0.000358</td>\n",
       "      <td>0.14</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#4</th>\n",
       "      <td>-0.00529</td>\n",
       "      <td>-2.89</td>\n",
       "      <td>-0.00532</td>\n",
       "      <td>-2.91</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.00486</td>\n",
       "      <td>-2.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#5</th>\n",
       "      <td>-0.0128</td>\n",
       "      <td>-2.41</td>\n",
       "      <td>-0.0128</td>\n",
       "      <td>-2.41</td>\n",
       "      <td>-0.0125</td>\n",
       "      <td>-2.35</td>\n",
       "      <td>-0.0125</td>\n",
       "      <td>-2.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#6</th>\n",
       "      <td>-0.00969</td>\n",
       "      <td>-3.19</td>\n",
       "      <td>-0.00968</td>\n",
       "      <td>-3.19</td>\n",
       "      <td>-0.00925</td>\n",
       "      <td>-3.07</td>\n",
       "      <td>-0.00934</td>\n",
       "      <td>-3.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost</th>\n",
       "      <td>-0.00492</td>\n",
       "      <td>-20.60</td>\n",
       "      <td>-0.00492</td>\n",
       "      <td>-20.61</td>\n",
       "      <td>-0.00490</td>\n",
       "      <td>-20.57</td>\n",
       "      <td>-0.00491</td>\n",
       "      <td>-20.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tottime</th>\n",
       "      <td>-0.0513</td>\n",
       "      <td>-16.57</td>\n",
       "      <td>-0.0514</td>\n",
       "      <td>-16.57</td>\n",
       "      <td>-0.0514</td>\n",
       "      <td>-16.61</td>\n",
       "      <td>-0.0513</td>\n",
       "      <td>-16.56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>----</th>\n",
       "      <th>----</th>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">Log Likelihood</th>\n",
       "      <th>Converged</th>\n",
       "      <td>-3,626.19</td>\n",
       "      <td></td>\n",
       "      <td>-3,626.59</td>\n",
       "      <td></td>\n",
       "      <td>-3,628.29</td>\n",
       "      <td></td>\n",
       "      <td>-3,627.23</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Null</th>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Constants Only</th>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Rho Squared</th>\n",
       "      <th>vs Null</th>\n",
       "      <td>0.5039</td>\n",
       "      <td></td>\n",
       "      <td>0.5039</td>\n",
       "      <td></td>\n",
       "      <td>0.5036</td>\n",
       "      <td></td>\n",
       "      <td>0.5038</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vs Constants Only</th>\n",
       "      <td>0.1226</td>\n",
       "      <td></td>\n",
       "      <td>0.1225</td>\n",
       "      <td></td>\n",
       "      <td>0.1221</td>\n",
       "      <td></td>\n",
       "      <td>0.1224</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                    Model 1            Model 2          \\\n",
       "                                      Param  t-Stat      Param  t-Stat   \n",
       "Category       Parameter                                                 \n",
       "Parameters     ASC_BIKE               -2.38   -7.80      -2.38   -7.81   \n",
       "               ASC_SR2                -2.18  -20.81      -2.21  -22.66   \n",
       "               ASC_SR3P               -3.73  -20.96      -3.61  -29.30   \n",
       "               ASC_TRAN              -0.671   -5.06     -0.670   -5.05   \n",
       "               ASC_WALK              -0.207   -1.07     -0.207   -1.07   \n",
       "               hhinc#2             -0.00217   -1.40                      \n",
       "               hhinc#23                               -0.00158   -1.13   \n",
       "               hhinc#234                                                 \n",
       "               hhinc#3             0.000358    0.14                      \n",
       "               hhinc#4             -0.00529   -2.89   -0.00532   -2.91   \n",
       "               hhinc#5              -0.0128   -2.41    -0.0128   -2.41   \n",
       "               hhinc#6             -0.00969   -3.19   -0.00968   -3.19   \n",
       "               totcost             -0.00492  -20.60   -0.00492  -20.61   \n",
       "               tottime              -0.0513  -16.57    -0.0514  -16.57   \n",
       "----           ----                    ----    ----       ----    ----   \n",
       "Log Likelihood Converged          -3,626.19          -3,626.59           \n",
       "               Null               -7,309.60          -7,309.60           \n",
       "               Constants Only     -4,132.92          -4,132.92           \n",
       "Rho Squared    vs Null               0.5039             0.5039           \n",
       "               vs Constants Only     0.1226             0.1225           \n",
       "\n",
       "                                    Model 3            Model 4          \n",
       "                                      Param  t-Stat      Param  t-Stat  \n",
       "Category       Parameter                                                \n",
       "Parameters     ASC_BIKE               -2.39   -7.85      -2.40   -7.89  \n",
       "               ASC_SR2                -2.14  -24.18      -2.30  -42.14  \n",
       "               ASC_SR3P               -3.53  -30.64      -3.70  -39.81  \n",
       "               ASC_TRAN              -0.799   -7.11     -0.697   -5.35  \n",
       "               ASC_WALK              -0.230   -1.19     -0.229   -1.18  \n",
       "               hhinc#2                                                  \n",
       "               hhinc#23                                                 \n",
       "               hhinc#234           -0.00287   -2.35                     \n",
       "               hhinc#3                                                  \n",
       "               hhinc#4                                -0.00486   -2.73  \n",
       "               hhinc#5              -0.0125   -2.35    -0.0125   -2.35  \n",
       "               hhinc#6             -0.00925   -3.07   -0.00934   -3.10  \n",
       "               totcost             -0.00490  -20.57   -0.00491  -20.61  \n",
       "               tottime              -0.0514  -16.61    -0.0513  -16.56  \n",
       "----           ----                    ----    ----       ----    ----  \n",
       "Log Likelihood Converged          -3,628.29          -3,627.23          \n",
       "               Null               -7,309.60          -7,309.60          \n",
       "               Constants Only     -4,132.92          -4,132.92          \n",
       "Rho Squared    vs Null               0.5036             0.5038          \n",
       "               vs Constants Only     0.1221             0.1224          "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xl.add_content_tab(\n",
    "    joint_parameter_summary([m1, m2, m3, m4], bases=[m_c]),\n",
    "    sheetname='Step 2',\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's review some likelihood ratio tests."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:00.277140Z",
     "start_time": "2020-03-20T04:31:00.272919Z"
    }
   },
   "outputs": [],
   "source": [
    "from scipy.stats import chi2\n",
    "\n",
    "def LRT(model_u, model_r, deg_free):\n",
    "    stat = 2*(model_u.loglike() - model_r.loglike())\n",
    "    p = chi2(df=deg_free).sf(stat)\n",
    "    return f\"{stat:.3f}, p={p:.3f}\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:00.459291Z",
     "start_time": "2020-03-20T04:31:00.279380Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0.807, p=0.369'"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m1,m2,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:00.621718Z",
     "start_time": "2020-03-20T04:31:00.461263Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'4.198, p=0.123'"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m1,m3,2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:00.790088Z",
     "start_time": "2020-03-20T04:31:00.623925Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2.095, p=0.351'"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m1,m4,2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:00.960188Z",
     "start_time": "2020-03-20T04:31:00.792356Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'1.288, p=0.256'"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m2,m4,1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- The parameter estimates are consistent with expectations.\n",
    "- All the parameters are significant except for shared ride income parameters in Model 2.\n",
    "- Model 1 does not reject Models 2, 3, or 4.\n",
    "- We choose Model 2 because it is most consistent with our hypotheses about\n",
    "  the effect of income on preference between drive alone and shared ride and\n",
    "  other modes.\n",
    "- The small differences in goodness of fit among these models suggests that the\n",
    "  income specification should be reconsidered before the final model specification is adopted.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Alternative Travel Time Specifications"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Travel time specifications seek to relax constraints on the utility value of time. \n",
    "- We use statistical tests and calculate individuals' value of time judge the quality of models.\n",
    "\n",
    "Some options on how to handle travel time:\n",
    "\n",
    "- Disaggregate total time into OVT and IVT \n",
    "    - People are more sensitive to OVT than IVT\n",
    "      (~2-5 times more sensitive) \n",
    "    - How should we classify walking?\n",
    "- Disaggregate total time across non-motorized and motorized modes \n",
    "    - This distinction tends to work well in practice\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Model 5 relaxes equality of motorized and non-motorized time (more negative, significant)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:42.390014Z",
     "start_time": "2020-03-20T04:31:40.241449Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m5 = m2.copy()\n",
    "m5.title = \"Model 5\"\n",
    "m5.utility_ca = (\n",
    "    + P('motor_time'   ) * X('tottime') * X('altnum in (1,2,3,4)') \n",
    "    + P('nonmotor_time') * X('tottime') * X('altnum in (5,6)'    ) \n",
    "    + PX('totcost')\n",
    ")\n",
    "m5.remove_unused_parameters() \n",
    "m5.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Model 6 disaggregates motorized modes into IVT and OVT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:50.451082Z",
     "start_time": "2020-03-20T04:31:48.257166Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m6 = m2.copy()\n",
    "m6.title = \"Model 6\"\n",
    "m6.utility_ca = (\n",
    "    + PX('ivtt') * X('altnum in (1,2,3,4)') \n",
    "    + PX('ovtt') * X('altnum in (1,2,3,4)') \n",
    "    + P('nonmotor_time') * X('tottime') * X('altnum in (5,6)') \n",
    "    + PX('totcost')\n",
    ")\n",
    "m6.remove_unused_parameters() # removes the old #2 and #3 parameters\n",
    "m6.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:51.287472Z",
     "start_time": "2020-03-20T04:31:50.475650Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 2</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 5</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 6</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Category</th>\n",
       "      <th>Parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"15\" valign=\"top\">Parameters</th>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-2.38</td>\n",
       "      <td>-7.81</td>\n",
       "      <td>-1.84</td>\n",
       "      <td>-5.66</td>\n",
       "      <td>-1.72</td>\n",
       "      <td>-5.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-2.21</td>\n",
       "      <td>-22.66</td>\n",
       "      <td>-2.26</td>\n",
       "      <td>-23.03</td>\n",
       "      <td>-2.43</td>\n",
       "      <td>-24.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.61</td>\n",
       "      <td>-29.30</td>\n",
       "      <td>-3.68</td>\n",
       "      <td>-29.61</td>\n",
       "      <td>-3.88</td>\n",
       "      <td>-30.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>-0.670</td>\n",
       "      <td>-5.05</td>\n",
       "      <td>-0.852</td>\n",
       "      <td>-6.12</td>\n",
       "      <td>-0.490</td>\n",
       "      <td>-3.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>-0.207</td>\n",
       "      <td>-1.07</td>\n",
       "      <td>0.477</td>\n",
       "      <td>1.89</td>\n",
       "      <td>0.409</td>\n",
       "      <td>1.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#23</th>\n",
       "      <td>-0.00158</td>\n",
       "      <td>-1.13</td>\n",
       "      <td>-0.00154</td>\n",
       "      <td>-1.10</td>\n",
       "      <td>-0.00158</td>\n",
       "      <td>-1.14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#4</th>\n",
       "      <td>-0.00532</td>\n",
       "      <td>-2.91</td>\n",
       "      <td>-0.00545</td>\n",
       "      <td>-2.97</td>\n",
       "      <td>-0.00569</td>\n",
       "      <td>-3.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#5</th>\n",
       "      <td>-0.0128</td>\n",
       "      <td>-2.41</td>\n",
       "      <td>-0.0125</td>\n",
       "      <td>-2.37</td>\n",
       "      <td>-0.0122</td>\n",
       "      <td>-2.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#6</th>\n",
       "      <td>-0.00968</td>\n",
       "      <td>-3.19</td>\n",
       "      <td>-0.00952</td>\n",
       "      <td>-3.11</td>\n",
       "      <td>-0.00930</td>\n",
       "      <td>-3.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ivtt</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.00253</td>\n",
       "      <td>-0.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>motor_time</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.0431</td>\n",
       "      <td>-12.29</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nonmotor_time</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.0687</td>\n",
       "      <td>-12.90</td>\n",
       "      <td>-0.0632</td>\n",
       "      <td>-11.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ovtt</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.0759</td>\n",
       "      <td>-12.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost</th>\n",
       "      <td>-0.00492</td>\n",
       "      <td>-20.61</td>\n",
       "      <td>-0.00500</td>\n",
       "      <td>-20.68</td>\n",
       "      <td>-0.00480</td>\n",
       "      <td>-20.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tottime</th>\n",
       "      <td>-0.0514</td>\n",
       "      <td>-16.57</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>----</th>\n",
       "      <th>----</th>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">Log Likelihood</th>\n",
       "      <th>Converged</th>\n",
       "      <td>-3,626.59</td>\n",
       "      <td></td>\n",
       "      <td>-3,616.89</td>\n",
       "      <td></td>\n",
       "      <td>-3,588.04</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Null</th>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Constants Only</th>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Rho Squared</th>\n",
       "      <th>vs Null</th>\n",
       "      <td>0.5039</td>\n",
       "      <td></td>\n",
       "      <td>0.5052</td>\n",
       "      <td></td>\n",
       "      <td>0.5091</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vs Constants Only</th>\n",
       "      <td>0.1225</td>\n",
       "      <td></td>\n",
       "      <td>0.1249</td>\n",
       "      <td></td>\n",
       "      <td>0.1318</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                    Model 2            Model 5          \\\n",
       "                                      Param  t-Stat      Param  t-Stat   \n",
       "Category       Parameter                                                 \n",
       "Parameters     ASC_BIKE               -2.38   -7.81      -1.84   -5.66   \n",
       "               ASC_SR2                -2.21  -22.66      -2.26  -23.03   \n",
       "               ASC_SR3P               -3.61  -29.30      -3.68  -29.61   \n",
       "               ASC_TRAN              -0.670   -5.05     -0.852   -6.12   \n",
       "               ASC_WALK              -0.207   -1.07      0.477    1.89   \n",
       "               hhinc#23            -0.00158   -1.13   -0.00154   -1.10   \n",
       "               hhinc#4             -0.00532   -2.91   -0.00545   -2.97   \n",
       "               hhinc#5              -0.0128   -2.41    -0.0125   -2.37   \n",
       "               hhinc#6             -0.00968   -3.19   -0.00952   -3.11   \n",
       "               ivtt                                                      \n",
       "               motor_time                              -0.0431  -12.29   \n",
       "               nonmotor_time                           -0.0687  -12.90   \n",
       "               ovtt                                                      \n",
       "               totcost             -0.00492  -20.61   -0.00500  -20.68   \n",
       "               tottime              -0.0514  -16.57                      \n",
       "----           ----                    ----    ----       ----    ----   \n",
       "Log Likelihood Converged          -3,626.59          -3,616.89           \n",
       "               Null               -7,309.60          -7,309.60           \n",
       "               Constants Only     -4,132.92          -4,132.92           \n",
       "Rho Squared    vs Null               0.5039             0.5052           \n",
       "               vs Constants Only     0.1225             0.1249           \n",
       "\n",
       "                                    Model 6          \n",
       "                                      Param  t-Stat  \n",
       "Category       Parameter                             \n",
       "Parameters     ASC_BIKE               -1.72   -5.32  \n",
       "               ASC_SR2                -2.43  -24.14  \n",
       "               ASC_SR3P               -3.88  -30.54  \n",
       "               ASC_TRAN              -0.490   -3.29  \n",
       "               ASC_WALK               0.409    1.62  \n",
       "               hhinc#23            -0.00158   -1.14  \n",
       "               hhinc#4             -0.00569   -3.07  \n",
       "               hhinc#5              -0.0122   -2.33  \n",
       "               hhinc#6             -0.00930   -3.05  \n",
       "               ivtt                -0.00253   -0.41  \n",
       "               motor_time                            \n",
       "               nonmotor_time        -0.0632  -11.79  \n",
       "               ovtt                 -0.0759  -12.96  \n",
       "               totcost             -0.00480  -20.21  \n",
       "               tottime                               \n",
       "----           ----                    ----    ----  \n",
       "Log Likelihood Converged          -3,588.04          \n",
       "               Null               -7,309.60          \n",
       "               Constants Only     -4,132.92          \n",
       "Rho Squared    vs Null               0.5091          \n",
       "               vs Constants Only     0.1318          "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xl.add_content_tab(\n",
    "    joint_parameter_summary([m2, m5, m6], bases=[m_c]),\n",
    "    sheetname='Step 3',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:51.475594Z",
     "start_time": "2020-03-20T04:31:51.291062Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'19.392, p=0.000'"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m5,m2,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:51.650097Z",
     "start_time": "2020-03-20T04:31:51.477658Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'57.710, p=0.000'"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m6,m5,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:51.820974Z",
     "start_time": "2020-03-20T04:31:51.652071Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'77.102, p=0.000'"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m6,m2,2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:51.828720Z",
     "start_time": "2020-03-20T04:31:51.822972Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29.98522041619449"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m6['ovtt'].value / m6['ivtt'].value"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The results show:\n",
    "\n",
    "- The ratio OVT/IVT for motorized modes, 30, is quite high, probably too high -- it implies that travelers would prefer to spend an extra hour on the bus rather than spend 3 minutes waiting for the bus\n",
    "- Value of time seems unreasonable for Model 6\n",
    "- But Model 6 rejects Models 2 and 5 at very high significance level\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The Value of Travel Time"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "How do we calculate the value of time?\n",
    "\n",
    "- The units of utility are utils. \n",
    "- Motorized IVT is measured in terms of minutes, and \n",
    "- Cost is measured in terms cents.\n",
    "\n",
    "The estimated utility function implies a trade off:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:35:59.833565Z",
     "start_time": "2020-03-20T04:35:59.829094Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 minute of ivtt is worth -0.00253 utils\n",
      "1 cent of cost is worth -0.00480 utils\n",
      "1 cent of cost is worth 1.89 minutes of ivtt\n",
      "1 dollar of cost is worth 189 minutes of ivtt\n",
      "1 dollar of cost is worth 3.16 hours of ivtt\n"
     ]
    }
   ],
   "source": [
    "print(f\"1 minute of ivtt is worth {m6.pvalue('ivtt'):.5f} utils\")\n",
    "print(f\"1 cent of cost is worth {m6.pvalue('totcost'):.5f} utils\")\n",
    "\n",
    "print(f\"1 cent of cost is worth {m6.pformat(P.totcost/P.ivtt)} minutes of ivtt\")\n",
    "print(f\"1 dollar of cost is worth {m6.pformat(P.totcost/P.ivtt*100)} minutes of ivtt\")\n",
    "print(f\"1 dollar of cost is worth {m6.pformat(P.totcost/P.ivtt*100/60)} hours of ivtt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:51.849959Z",
     "start_time": "2020-03-20T04:31:51.844333Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 minute of ivtt is worth 0.52777 cents\n",
      "1 hour of ivtt is worth 31.66609 cents\n",
      "1 hour of ivtt is worth 0.31666 dollars\n"
     ]
    }
   ],
   "source": [
    "print(f\"1 minute of ivtt is worth {m6['ivtt'].value/m6['totcost'].value:.5f} cents\")\n",
    "print(f\"1 hour of ivtt is worth {m6['ivtt'].value/m6['totcost'].value*60:.5f} cents\")\n",
    "print(f\"1 hour of ivtt is worth {m6['ivtt'].value/m6['totcost'].value*60/100:.5f} dollars\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:51.855779Z",
     "start_time": "2020-03-20T04:31:51.852340Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 hour of ovtt is worth 9.49515 dollars\n"
     ]
    }
   ],
   "source": [
    "print(f\"1 hour of ovtt is worth {m6['ovtt'].value/m6['totcost'].value*60/100:.5f} dollars\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Better Value of Time Specifications\n",
    "\n",
    "To find a better specification, we will examine a range of different models in an attempt to find one which is both behaviorally sound and statistically supported."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What if we make out-of-vehicle time a function of trip distance?  A bit of OVTT \n",
    "is less noxious if you are traveling a long way, vs for a short trip.\n",
    "\n",
    "However, as we see below, if we just divide OVTT by distance, we'll end up with\n",
    "OVTT becoming less noxious than IVTT when the distance is long enough."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:52.098817Z",
     "start_time": "2020-03-20T04:31:51.857602Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "distance = np.linspace(1,10)\n",
    "ovtt_effect = 1/distance\n",
    "ivtt_effect = np.full_like(ovtt_effect, 0.2)\n",
    "plt.plot(distance, ovtt_effect, label='ovtt')\n",
    "plt.plot(distance, ivtt_effect, label='ivtt')\n",
    "plt.ylim(0,1)\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "An alternate solution: include OVTT divided by distance, plus *total* travel time."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:52.271115Z",
     "start_time": "2020-03-20T04:31:52.100697Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "distance = np.linspace(1,10)\n",
    "ivtt_effect = np.full_like(distance, 0.2)\n",
    "ovtt_effect = 1/distance + ivtt_effect\n",
    "plt.plot(distance, ovtt_effect, label='ovtt')\n",
    "plt.plot(distance, ivtt_effect, label='ivtt')\n",
    "plt.ylim(0,1)\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This is preferred because while both assume that the sensitivity of travelers to OVTT diminishes with the trip distance, the latter imposes the relationship that the value of OVT is always greater than IVTT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:54.571521Z",
     "start_time": "2020-03-20T04:31:52.273462Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m7 = m6.copy()\n",
    "m7.title = \"Model 7\"\n",
    "m7.utility_ca = (\n",
    "    + P('motor_time') * X('tottime') * X('altnum in (1,2,3,4)') \n",
    "    + PX('ovtt/dist') * X('altnum in (1,2,3,4)') \n",
    "    + P('nonmotor_time') * X('tottime') * X('altnum in (5,6)') \n",
    "    + PX('totcost')\n",
    ")\n",
    "m7.remove_unused_parameters() # removes the old #2 and #3 parameters\n",
    "m7.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Another option: we can constrain relationships between or among parameter values to ratios which we consider to be reasonable. Model 8 and 9 constrain the ratio if out/in vehicle ratios to be 2.5 and 4.0."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:56.813864Z",
     "start_time": "2020-03-20T04:31:54.573719Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m8 = m6.copy()\n",
    "m8.title = \"Model 8\"\n",
    "m8.utility_ca = (\n",
    "    + PX('ivtt') * X('altnum in (1,2,3,4)') \n",
    "    + P('ivtt') * 2.5 * X('ovtt') * X('altnum in (1,2,3,4)') \n",
    "    + P('nonmotor_time') * X('tottime') * X('altnum in (5,6)') \n",
    "    + PX('totcost')\n",
    ")\n",
    "m8.remove_unused_parameters() # removes the old #2 and #3 parameters\n",
    "m8.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:59.063313Z",
     "start_time": "2020-03-20T04:31:56.815947Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m9  = m6.copy()\n",
    "m9.title = \"Model 9\"\n",
    "m9.utility_ca = (\n",
    "    + PX('ivtt') * X('altnum in (1,2,3,4)') \n",
    "    + P('ivtt') * 4 * X('ovtt') * X('altnum in (1,2,3,4)') \n",
    "    + P('nonmotor_time') * X('tottime') * X('altnum in (5,6)') \n",
    "    + PX('totcost')\n",
    ")\n",
    "m9.remove_unused_parameters() # removes the old #2 and #3 parameters\n",
    "m9.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:59.966983Z",
     "start_time": "2020-03-20T04:31:59.065454Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 6</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 7</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 8</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 9</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Category</th>\n",
       "      <th>Parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"15\" valign=\"top\">Parameters</th>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-1.72</td>\n",
       "      <td>-5.32</td>\n",
       "      <td>-2.69</td>\n",
       "      <td>-8.05</td>\n",
       "      <td>-1.84</td>\n",
       "      <td>-5.66</td>\n",
       "      <td>-1.84</td>\n",
       "      <td>-5.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-2.43</td>\n",
       "      <td>-24.14</td>\n",
       "      <td>-2.19</td>\n",
       "      <td>-22.42</td>\n",
       "      <td>-2.26</td>\n",
       "      <td>-23.03</td>\n",
       "      <td>-2.26</td>\n",
       "      <td>-23.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.88</td>\n",
       "      <td>-30.54</td>\n",
       "      <td>-3.52</td>\n",
       "      <td>-28.61</td>\n",
       "      <td>-3.68</td>\n",
       "      <td>-29.61</td>\n",
       "      <td>-3.68</td>\n",
       "      <td>-29.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>-0.490</td>\n",
       "      <td>-3.29</td>\n",
       "      <td>-0.0424</td>\n",
       "      <td>-0.27</td>\n",
       "      <td>-0.852</td>\n",
       "      <td>-6.12</td>\n",
       "      <td>-0.852</td>\n",
       "      <td>-6.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>0.409</td>\n",
       "      <td>1.62</td>\n",
       "      <td>-1.02</td>\n",
       "      <td>-3.50</td>\n",
       "      <td>0.477</td>\n",
       "      <td>1.89</td>\n",
       "      <td>0.477</td>\n",
       "      <td>1.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#23</th>\n",
       "      <td>-0.00158</td>\n",
       "      <td>-1.14</td>\n",
       "      <td>-0.00138</td>\n",
       "      <td>-1.00</td>\n",
       "      <td>-0.00154</td>\n",
       "      <td>-1.10</td>\n",
       "      <td>-0.00154</td>\n",
       "      <td>-1.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#4</th>\n",
       "      <td>-0.00569</td>\n",
       "      <td>-3.07</td>\n",
       "      <td>-0.00725</td>\n",
       "      <td>-3.79</td>\n",
       "      <td>-0.00545</td>\n",
       "      <td>-2.97</td>\n",
       "      <td>-0.00545</td>\n",
       "      <td>-2.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#5</th>\n",
       "      <td>-0.0122</td>\n",
       "      <td>-2.33</td>\n",
       "      <td>-0.0119</td>\n",
       "      <td>-2.26</td>\n",
       "      <td>-0.0125</td>\n",
       "      <td>-2.37</td>\n",
       "      <td>-0.0125</td>\n",
       "      <td>-2.37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#6</th>\n",
       "      <td>-0.00930</td>\n",
       "      <td>-3.05</td>\n",
       "      <td>-0.00824</td>\n",
       "      <td>-2.58</td>\n",
       "      <td>-0.00952</td>\n",
       "      <td>-3.11</td>\n",
       "      <td>-0.00952</td>\n",
       "      <td>-3.11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ivtt</th>\n",
       "      <td>-0.00253</td>\n",
       "      <td>-0.41</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.0431</td>\n",
       "      <td>-12.29</td>\n",
       "      <td>-0.0431</td>\n",
       "      <td>-12.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>motor_time</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.0415</td>\n",
       "      <td>-11.81</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nonmotor_time</th>\n",
       "      <td>-0.0632</td>\n",
       "      <td>-11.79</td>\n",
       "      <td>-0.0475</td>\n",
       "      <td>-8.64</td>\n",
       "      <td>-0.0687</td>\n",
       "      <td>-12.90</td>\n",
       "      <td>-0.0687</td>\n",
       "      <td>-12.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ovtt</th>\n",
       "      <td>-0.0759</td>\n",
       "      <td>-12.96</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ovtt/dist</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.181</td>\n",
       "      <td>-10.14</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost</th>\n",
       "      <td>-0.00480</td>\n",
       "      <td>-20.21</td>\n",
       "      <td>-0.00412</td>\n",
       "      <td>-17.22</td>\n",
       "      <td>-0.00501</td>\n",
       "      <td>-20.68</td>\n",
       "      <td>-0.00501</td>\n",
       "      <td>-20.68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>----</th>\n",
       "      <th>----</th>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">Log Likelihood</th>\n",
       "      <th>Converged</th>\n",
       "      <td>-3,588.04</td>\n",
       "      <td></td>\n",
       "      <td>-3,547.34</td>\n",
       "      <td></td>\n",
       "      <td>-3,616.89</td>\n",
       "      <td></td>\n",
       "      <td>-3,616.89</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Null</th>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Constants Only</th>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Rho Squared</th>\n",
       "      <th>vs Null</th>\n",
       "      <td>0.5091</td>\n",
       "      <td></td>\n",
       "      <td>0.5147</td>\n",
       "      <td></td>\n",
       "      <td>0.5052</td>\n",
       "      <td></td>\n",
       "      <td>0.5052</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vs Constants Only</th>\n",
       "      <td>0.1318</td>\n",
       "      <td></td>\n",
       "      <td>0.1417</td>\n",
       "      <td></td>\n",
       "      <td>0.1249</td>\n",
       "      <td></td>\n",
       "      <td>0.1249</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                    Model 6            Model 7          \\\n",
       "                                      Param  t-Stat      Param  t-Stat   \n",
       "Category       Parameter                                                 \n",
       "Parameters     ASC_BIKE               -1.72   -5.32      -2.69   -8.05   \n",
       "               ASC_SR2                -2.43  -24.14      -2.19  -22.42   \n",
       "               ASC_SR3P               -3.88  -30.54      -3.52  -28.61   \n",
       "               ASC_TRAN              -0.490   -3.29    -0.0424   -0.27   \n",
       "               ASC_WALK               0.409    1.62      -1.02   -3.50   \n",
       "               hhinc#23            -0.00158   -1.14   -0.00138   -1.00   \n",
       "               hhinc#4             -0.00569   -3.07   -0.00725   -3.79   \n",
       "               hhinc#5              -0.0122   -2.33    -0.0119   -2.26   \n",
       "               hhinc#6             -0.00930   -3.05   -0.00824   -2.58   \n",
       "               ivtt                -0.00253   -0.41                      \n",
       "               motor_time                              -0.0415  -11.81   \n",
       "               nonmotor_time        -0.0632  -11.79    -0.0475   -8.64   \n",
       "               ovtt                 -0.0759  -12.96                      \n",
       "               ovtt/dist                                -0.181  -10.14   \n",
       "               totcost             -0.00480  -20.21   -0.00412  -17.22   \n",
       "----           ----                    ----    ----       ----    ----   \n",
       "Log Likelihood Converged          -3,588.04          -3,547.34           \n",
       "               Null               -7,309.60          -7,309.60           \n",
       "               Constants Only     -4,132.92          -4,132.92           \n",
       "Rho Squared    vs Null               0.5091             0.5147           \n",
       "               vs Constants Only     0.1318             0.1417           \n",
       "\n",
       "                                    Model 8            Model 9          \n",
       "                                      Param  t-Stat      Param  t-Stat  \n",
       "Category       Parameter                                                \n",
       "Parameters     ASC_BIKE               -1.84   -5.66      -1.84   -5.66  \n",
       "               ASC_SR2                -2.26  -23.03      -2.26  -23.03  \n",
       "               ASC_SR3P               -3.68  -29.61      -3.68  -29.61  \n",
       "               ASC_TRAN              -0.852   -6.12     -0.852   -6.12  \n",
       "               ASC_WALK               0.477    1.89      0.477    1.89  \n",
       "               hhinc#23            -0.00154   -1.10   -0.00154   -1.10  \n",
       "               hhinc#4             -0.00545   -2.97   -0.00545   -2.97  \n",
       "               hhinc#5              -0.0125   -2.37    -0.0125   -2.37  \n",
       "               hhinc#6             -0.00952   -3.11   -0.00952   -3.11  \n",
       "               ivtt                 -0.0431  -12.29    -0.0431  -12.29  \n",
       "               motor_time                                               \n",
       "               nonmotor_time        -0.0687  -12.90    -0.0687  -12.90  \n",
       "               ovtt                                                     \n",
       "               ovtt/dist                                                \n",
       "               totcost             -0.00501  -20.68   -0.00501  -20.68  \n",
       "----           ----                    ----    ----       ----    ----  \n",
       "Log Likelihood Converged          -3,616.89          -3,616.89          \n",
       "               Null               -7,309.60          -7,309.60          \n",
       "               Constants Only     -4,132.92          -4,132.92          \n",
       "Rho Squared    vs Null               0.5052             0.5052          \n",
       "               vs Constants Only     0.1249             0.1249          "
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xl.add_content_tab(\n",
    "    joint_parameter_summary([m6, m7, m8, m9], bases=[m_c]),\n",
    "    sheetname=\"Step 4\",\n",
    ")  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition to statistical tests, we need to perform ‘reality checks’ on the implied values of times from the models. The values of time for motorized modes from Model 7 are:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:59.978501Z",
     "start_time": "2020-03-20T04:31:59.969282Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model 7\n",
      "Non-motorized Time is worth 6.91754 $/hr\n",
      "IVTT is worth 6.05399 $/hr\n",
      "OVTT is worth 32.45679 $/hr at 1 mile\n",
      "OVTT is worth 11.33455 $/hr at 5 mile\n",
      "OVTT is worth 8.69427 $/hr at 10 miles\n"
     ]
    }
   ],
   "source": [
    "print(\"Model 7\")\n",
    "print(f\"Non-motorized Time is worth {m7['nonmotor_time'].value/m7['totcost'].value*60/100:.5f} $/hr\")\n",
    "print(f\"IVTT is worth {m7['motor_time'].value/m7['totcost'].value*60/100:.5f} $/hr\")\n",
    "print(f\"OVTT is worth {(m7['ovtt/dist'].value+m7['motor_time'].value)/m7['totcost'].value*60/100:.5f} $/hr at 1 mile\")\n",
    "print(f\"OVTT is worth {(m7['ovtt/dist'].value/5+m7['motor_time'].value)/m7['totcost'].value*60/100:.5f} $/hr at 5 mile\")\n",
    "print(f\"OVTT is worth {(m7['ovtt/dist'].value/10+m7['motor_time'].value)/m7['totcost'].value*60/100:.5f} $/hr at 10 miles\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:31:59.989221Z",
     "start_time": "2020-03-20T04:31:59.980852Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model 6\n",
      "Non-motorized Time is worth 7.90144 $/hr\n",
      "IVTT is worth 0.31666 $/hr\n",
      "\n",
      "Model 8\n",
      "Non-motorized Time is worth 8.23316 $/hr\n",
      "IVTT is worth 5.16388 $/hr\n",
      "\n",
      "Model 9\n",
      "Non-motorized Time is worth 8.23316 $/hr\n",
      "IVTT is worth 5.16388 $/hr\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for m_ in [m6,m8,m9]:\n",
    "    print(m_.title)\n",
    "    print(f\"Non-motorized Time is worth {m_['nonmotor_time'].value/m_['totcost'].value*60/100:.5f} $/hr\")\n",
    "    print(f\"IVTT is worth {m_['ivtt'].value/m_['totcost'].value*60/100:.5f} $/hr\")\n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- The values of in-vehicle time implied by Models 6, 8, and 9 are very low and the values of out of vehicle time and non-motorized time are somewhat low relative to wage rate (\\$21.20 per hour) for the San Francisco Bay Area.\n",
    "- Model 7 produces higher, but still low, values of time.\n",
    "- The ratios of OVT to IVT for motorized modes in Model 5 is clearly unacceptable. Those for Models 6, 7 and 8 are somewhat more reasonable."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Model 7 outperforms the other models in all important respects: best goodness-of-fit, most intuitive relationship between the IVT and OVT variables and the most acceptable values of time."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Additional Decision Maker Related Variables\n",
    "Additional decision maker related variables we can consider:\n",
    "- Car availability\n",
    "- Residential location\n",
    "- Number of workers in the household\n",
    "- Total number of people in household\n",
    "- ...\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Two approaches to including decision maker variables\n",
    "- Include as specific to each alternative\n",
    "- Include in interactions with mode related characteristics\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As an example, let's consider three different variables to represent number of\n",
    "automobiles in the household\n",
    "- Autos\n",
    "- Autos divided by household workers\n",
    "- Autos divided by the of persons of driving age"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:02.602915Z",
     "start_time": "2020-03-20T04:31:59.991636Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m10  = m7.copy()\n",
    "m10.title = \"Model 10\"\n",
    "for a in [2,3,4,5,6]:\n",
    "    m10.utility_co[a] += X('numveh') * P(f'numveh#{a}')\n",
    "m10.remove_unused_parameters() # removes the old #2 and #3 parameters\n",
    "m10.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:05.142907Z",
     "start_time": "2020-03-20T04:32:02.605029Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m11  = m7.copy()\n",
    "m11.title = \"Model 11\"\n",
    "for a in [2,3,4,5,6]:\n",
    "    m11.utility_co[a] += X('numveh/numemphh') * P(f'numveh#{a}') \n",
    "m11.remove_unused_parameters() # removes the old #2 and #3 parameters\n",
    "m11.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:07.826589Z",
     "start_time": "2020-03-20T04:32:05.144953Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m12  = m7.copy()\n",
    "m12.title = \"Model 12\"\n",
    "for a in [2,3,4,5,6]:\n",
    "    m12.utility_co[a] += X('numveh/numadlt') * P(f'numveh#{a}') \n",
    "m12.remove_unused_parameters() # removes the old #2 and #3 parameters\n",
    "m12.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:08.754942Z",
     "start_time": "2020-03-20T04:32:07.828683Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 7</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 10</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 11</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 12</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Category</th>\n",
       "      <th>Parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"18\" valign=\"top\">Parameters</th>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-2.69</td>\n",
       "      <td>-8.05</td>\n",
       "      <td>-2.22</td>\n",
       "      <td>-5.83</td>\n",
       "      <td>-1.83</td>\n",
       "      <td>-4.49</td>\n",
       "      <td>-1.96</td>\n",
       "      <td>-4.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-2.19</td>\n",
       "      <td>-22.42</td>\n",
       "      <td>-2.05</td>\n",
       "      <td>-16.94</td>\n",
       "      <td>-1.59</td>\n",
       "      <td>-12.06</td>\n",
       "      <td>-1.54</td>\n",
       "      <td>-10.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.52</td>\n",
       "      <td>-28.61</td>\n",
       "      <td>-3.64</td>\n",
       "      <td>-20.26</td>\n",
       "      <td>-3.14</td>\n",
       "      <td>-16.99</td>\n",
       "      <td>-3.02</td>\n",
       "      <td>-14.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>-0.0424</td>\n",
       "      <td>-0.27</td>\n",
       "      <td>0.574</td>\n",
       "      <td>3.18</td>\n",
       "      <td>0.927</td>\n",
       "      <td>4.82</td>\n",
       "      <td>1.05</td>\n",
       "      <td>5.31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>-1.02</td>\n",
       "      <td>-3.50</td>\n",
       "      <td>-0.441</td>\n",
       "      <td>-1.33</td>\n",
       "      <td>-0.237</td>\n",
       "      <td>-0.70</td>\n",
       "      <td>-0.217</td>\n",
       "      <td>-0.63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#23</th>\n",
       "      <td>-0.00138</td>\n",
       "      <td>-1.00</td>\n",
       "      <td>-0.00196</td>\n",
       "      <td>-1.36</td>\n",
       "      <td>-0.00167</td>\n",
       "      <td>-1.20</td>\n",
       "      <td>-0.00132</td>\n",
       "      <td>-0.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#4</th>\n",
       "      <td>-0.00725</td>\n",
       "      <td>-3.79</td>\n",
       "      <td>-0.00132</td>\n",
       "      <td>-0.65</td>\n",
       "      <td>-0.00598</td>\n",
       "      <td>-3.04</td>\n",
       "      <td>-0.00462</td>\n",
       "      <td>-2.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#5</th>\n",
       "      <td>-0.0119</td>\n",
       "      <td>-2.26</td>\n",
       "      <td>-0.00951</td>\n",
       "      <td>-1.75</td>\n",
       "      <td>-0.0116</td>\n",
       "      <td>-2.20</td>\n",
       "      <td>-0.0117</td>\n",
       "      <td>-2.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#6</th>\n",
       "      <td>-0.00824</td>\n",
       "      <td>-2.58</td>\n",
       "      <td>-0.00416</td>\n",
       "      <td>-1.24</td>\n",
       "      <td>-0.00796</td>\n",
       "      <td>-2.46</td>\n",
       "      <td>-0.00765</td>\n",
       "      <td>-2.34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>motor_time</th>\n",
       "      <td>-0.0415</td>\n",
       "      <td>-11.81</td>\n",
       "      <td>-0.0378</td>\n",
       "      <td>-10.48</td>\n",
       "      <td>-0.0384</td>\n",
       "      <td>-10.70</td>\n",
       "      <td>-0.0380</td>\n",
       "      <td>-10.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nonmotor_time</th>\n",
       "      <td>-0.0475</td>\n",
       "      <td>-8.64</td>\n",
       "      <td>-0.0475</td>\n",
       "      <td>-8.39</td>\n",
       "      <td>-0.0470</td>\n",
       "      <td>-8.37</td>\n",
       "      <td>-0.0466</td>\n",
       "      <td>-8.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#2</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.0352</td>\n",
       "      <td>-0.90</td>\n",
       "      <td>-0.433</td>\n",
       "      <td>-5.65</td>\n",
       "      <td>-0.594</td>\n",
       "      <td>-5.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#3</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0.0723</td>\n",
       "      <td>1.27</td>\n",
       "      <td>-0.267</td>\n",
       "      <td>-2.38</td>\n",
       "      <td>-0.447</td>\n",
       "      <td>-2.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#4</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.554</td>\n",
       "      <td>-8.04</td>\n",
       "      <td>-0.990</td>\n",
       "      <td>-8.56</td>\n",
       "      <td>-1.41</td>\n",
       "      <td>-9.11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#5</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.229</td>\n",
       "      <td>-1.74</td>\n",
       "      <td>-0.673</td>\n",
       "      <td>-2.68</td>\n",
       "      <td>-0.642</td>\n",
       "      <td>-2.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#6</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.366</td>\n",
       "      <td>-3.67</td>\n",
       "      <td>-0.629</td>\n",
       "      <td>-3.86</td>\n",
       "      <td>-0.794</td>\n",
       "      <td>-3.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ovtt/dist</th>\n",
       "      <td>-0.181</td>\n",
       "      <td>-10.14</td>\n",
       "      <td>-0.179</td>\n",
       "      <td>-9.63</td>\n",
       "      <td>-0.181</td>\n",
       "      <td>-9.83</td>\n",
       "      <td>-0.185</td>\n",
       "      <td>-9.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost</th>\n",
       "      <td>-0.00412</td>\n",
       "      <td>-17.22</td>\n",
       "      <td>-0.00406</td>\n",
       "      <td>-16.95</td>\n",
       "      <td>-0.00423</td>\n",
       "      <td>-17.35</td>\n",
       "      <td>-0.00418</td>\n",
       "      <td>-17.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>----</th>\n",
       "      <th>----</th>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">Log Likelihood</th>\n",
       "      <th>Converged</th>\n",
       "      <td>-3,547.34</td>\n",
       "      <td></td>\n",
       "      <td>-3,501.64</td>\n",
       "      <td></td>\n",
       "      <td>-3,489.19</td>\n",
       "      <td></td>\n",
       "      <td>-3,490.36</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Null</th>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Constants Only</th>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Rho Squared</th>\n",
       "      <th>vs Null</th>\n",
       "      <td>0.5147</td>\n",
       "      <td></td>\n",
       "      <td>0.5210</td>\n",
       "      <td></td>\n",
       "      <td>0.5227</td>\n",
       "      <td></td>\n",
       "      <td>0.5225</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vs Constants Only</th>\n",
       "      <td>0.1417</td>\n",
       "      <td></td>\n",
       "      <td>0.1527</td>\n",
       "      <td></td>\n",
       "      <td>0.1558</td>\n",
       "      <td></td>\n",
       "      <td>0.1555</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                    Model 7           Model 10          \\\n",
       "                                      Param  t-Stat      Param  t-Stat   \n",
       "Category       Parameter                                                 \n",
       "Parameters     ASC_BIKE               -2.69   -8.05      -2.22   -5.83   \n",
       "               ASC_SR2                -2.19  -22.42      -2.05  -16.94   \n",
       "               ASC_SR3P               -3.52  -28.61      -3.64  -20.26   \n",
       "               ASC_TRAN             -0.0424   -0.27      0.574    3.18   \n",
       "               ASC_WALK               -1.02   -3.50     -0.441   -1.33   \n",
       "               hhinc#23            -0.00138   -1.00   -0.00196   -1.36   \n",
       "               hhinc#4             -0.00725   -3.79   -0.00132   -0.65   \n",
       "               hhinc#5              -0.0119   -2.26   -0.00951   -1.75   \n",
       "               hhinc#6             -0.00824   -2.58   -0.00416   -1.24   \n",
       "               motor_time           -0.0415  -11.81    -0.0378  -10.48   \n",
       "               nonmotor_time        -0.0475   -8.64    -0.0475   -8.39   \n",
       "               numveh#2                                -0.0352   -0.90   \n",
       "               numveh#3                                 0.0723    1.27   \n",
       "               numveh#4                                 -0.554   -8.04   \n",
       "               numveh#5                                 -0.229   -1.74   \n",
       "               numveh#6                                 -0.366   -3.67   \n",
       "               ovtt/dist             -0.181  -10.14     -0.179   -9.63   \n",
       "               totcost             -0.00412  -17.22   -0.00406  -16.95   \n",
       "----           ----                    ----    ----       ----    ----   \n",
       "Log Likelihood Converged          -3,547.34          -3,501.64           \n",
       "               Null               -7,309.60          -7,309.60           \n",
       "               Constants Only     -4,132.92          -4,132.92           \n",
       "Rho Squared    vs Null               0.5147             0.5210           \n",
       "               vs Constants Only     0.1417             0.1527           \n",
       "\n",
       "                                   Model 11           Model 12          \n",
       "                                      Param  t-Stat      Param  t-Stat  \n",
       "Category       Parameter                                                \n",
       "Parameters     ASC_BIKE               -1.83   -4.49      -1.96   -4.72  \n",
       "               ASC_SR2                -1.59  -12.06      -1.54  -10.91  \n",
       "               ASC_SR3P               -3.14  -16.99      -3.02  -14.81  \n",
       "               ASC_TRAN               0.927    4.82       1.05    5.31  \n",
       "               ASC_WALK              -0.237   -0.70     -0.217   -0.63  \n",
       "               hhinc#23            -0.00167   -1.20   -0.00132   -0.95  \n",
       "               hhinc#4             -0.00598   -3.04   -0.00462   -2.32  \n",
       "               hhinc#5              -0.0116   -2.20    -0.0117   -2.20  \n",
       "               hhinc#6             -0.00796   -2.46   -0.00765   -2.34  \n",
       "               motor_time           -0.0384  -10.70    -0.0380  -10.58  \n",
       "               nonmotor_time        -0.0470   -8.37    -0.0466   -8.32  \n",
       "               numveh#2              -0.433   -5.65     -0.594   -5.46  \n",
       "               numveh#3              -0.267   -2.38     -0.447   -2.70  \n",
       "               numveh#4              -0.990   -8.56      -1.41   -9.11  \n",
       "               numveh#5              -0.673   -2.68     -0.642   -2.12  \n",
       "               numveh#6              -0.629   -3.86     -0.794   -3.81  \n",
       "               ovtt/dist             -0.181   -9.83     -0.185   -9.91  \n",
       "               totcost             -0.00423  -17.35   -0.00418  -17.22  \n",
       "----           ----                    ----    ----       ----    ----  \n",
       "Log Likelihood Converged          -3,489.19          -3,490.36          \n",
       "               Null               -7,309.60          -7,309.60          \n",
       "               Constants Only     -4,132.92          -4,132.92          \n",
       "Rho Squared    vs Null               0.5227             0.5225          \n",
       "               vs Constants Only     0.1558             0.1555          "
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xl.add_content_tab(\n",
    "    joint_parameter_summary([m7, m10, m11, m12], bases=[m_c]),\n",
    "    sheetname=\"Step 5\",\n",
    ")  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:08.923071Z",
     "start_time": "2020-03-20T04:32:08.764552Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'91.403, p=0.000'"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m10,m7,5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:09.080610Z",
     "start_time": "2020-03-20T04:32:08.929292Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'116.299, p=0.000'"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m11,m7,5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:09.234233Z",
     "start_time": "2020-03-20T04:32:09.082746Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'113.973, p=0.000'"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m12,m7,5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:09.254520Z",
     "start_time": "2020-03-20T04:32:09.236331Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model 10\n",
      "Non-motorized Time is worth 7.02254 $/hr\n",
      "IVTT is worth 5.59074 $/hr\n",
      "OVTT is worth 31.98680 $/hr at 1 mile\n",
      "OVTT is worth 10.86995 $/hr at 5 mile\n",
      "OVTT is worth 8.23035 $/hr at 10 miles\n",
      "\n",
      "Model 11\n",
      "Non-motorized Time is worth 6.66885 $/hr\n",
      "IVTT is worth 5.44889 $/hr\n",
      "OVTT is worth 31.18546 $/hr at 1 mile\n",
      "OVTT is worth 10.59620 $/hr at 5 mile\n",
      "OVTT is worth 8.02255 $/hr at 10 miles\n",
      "\n",
      "Model 12\n",
      "Non-motorized Time is worth 6.69435 $/hr\n",
      "IVTT is worth 5.45989 $/hr\n",
      "OVTT is worth 32.00559 $/hr at 1 mile\n",
      "OVTT is worth 10.76903 $/hr at 5 mile\n",
      "OVTT is worth 8.11446 $/hr at 10 miles\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for m_ in [m10,m11,m12]:\n",
    "    print(m_.title)\n",
    "    print(f\"Non-motorized Time is worth {m_['nonmotor_time'].value/m_['totcost'].value*60/100:.5f} $/hr\")\n",
    "    print(f\"IVTT is worth {m_['motor_time'].value/m_['totcost'].value*60/100:.5f} $/hr\")\n",
    "    print(f\"OVTT is worth {(m_['ovtt/dist'].value+m_['motor_time'].value)/m_['totcost'].value*60/100:.5f} $/hr at 1 mile\")\n",
    "    print(f\"OVTT is worth {(m_['ovtt/dist'].value/5+m_['motor_time'].value)/m_['totcost'].value*60/100:.5f} $/hr at 5 mile\")\n",
    "    print(f\"OVTT is worth {(m_['ovtt/dist'].value/10+m_['motor_time'].value)/m_['totcost'].value*60/100:.5f} $/hr at 10 miles\")\n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Models exhibit a much improved goodness-of-fit\n",
    "- Model 7 rejected by all auto models\n",
    "- Signs and magnitude of the parameters for time, cost, and income are stable across the models\n",
    "- Parameters for alternative specific automobile availability variables have the expected signs\n",
    "- Some alternative specific income variables not significant.\n",
    "- Cars-per-worker and cars-per-adults better represent car availability than cars as they account for the competition for use of automobiles within the household\n",
    "- Cars-per-worker is slightly better fitting than cars-per-adults but it is close. Either could be accepted.\n",
    "- We will accept cars-per-worker in Model 11 as our preferred model so far.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Including Trip Context Variables\n",
    "Mode choice may be influenced by the context in which the trip is made. We will consider two variables that describe the trip destination context:\n",
    "- A dummy variable which indicates whether the destination zone (workplace) is located in either the central or a non-central CBD\n",
    "- The employment density of workplace destinations\n",
    "- A third option is to include both of these variables\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:12.310961Z",
     "start_time": "2020-03-20T04:32:09.256744Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m13  = m11.copy()\n",
    "m13.title = \"Model 13\"\n",
    "for a in [2,3,4,5,6]:\n",
    "    m13.utility_co[a] += X('wkccbd + wknccbd') * P(f'wkccbd#{a}') \n",
    "m13.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:15.259524Z",
     "start_time": "2020-03-20T04:32:12.313035Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m14  = m11.copy()\n",
    "m14.title = \"Model 14\"\n",
    "for a in [2,3,4,5,6]:\n",
    "    m14.utility_co[a] += X('wkempden') * P(f'wkempden#{a}') \n",
    "m14.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:18.559553Z",
     "start_time": "2020-03-20T04:32:15.261967Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m15  = m11.copy()\n",
    "m15.title = \"Model 15\"\n",
    "for a in [2,3,4,5,6]:\n",
    "    m15.utility_co[a] += X('wkempden') * P(f'wkempden#{a}') \n",
    "    m15.utility_co[a] += X('wkccbd + wknccbd') * P(f'wkccbd#{a}') \n",
    "m15.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:19.552256Z",
     "start_time": "2020-03-20T04:32:18.561728Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 11</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 13</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 14</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 15</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Category</th>\n",
       "      <th>Parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"28\" valign=\"top\">Parameters</th>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-1.83</td>\n",
       "      <td>-4.49</td>\n",
       "      <td>-1.65</td>\n",
       "      <td>-3.85</td>\n",
       "      <td>-1.60</td>\n",
       "      <td>-3.83</td>\n",
       "      <td>-1.51</td>\n",
       "      <td>-3.53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-1.59</td>\n",
       "      <td>-12.06</td>\n",
       "      <td>-1.63</td>\n",
       "      <td>-11.98</td>\n",
       "      <td>-1.60</td>\n",
       "      <td>-12.06</td>\n",
       "      <td>-1.64</td>\n",
       "      <td>-12.02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.14</td>\n",
       "      <td>-16.99</td>\n",
       "      <td>-3.54</td>\n",
       "      <td>-17.35</td>\n",
       "      <td>-3.21</td>\n",
       "      <td>-17.00</td>\n",
       "      <td>-3.55</td>\n",
       "      <td>-17.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>0.927</td>\n",
       "      <td>4.82</td>\n",
       "      <td>-0.201</td>\n",
       "      <td>-0.83</td>\n",
       "      <td>0.420</td>\n",
       "      <td>2.01</td>\n",
       "      <td>-0.471</td>\n",
       "      <td>-1.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>-0.237</td>\n",
       "      <td>-0.70</td>\n",
       "      <td>0.0843</td>\n",
       "      <td>0.24</td>\n",
       "      <td>-0.0403</td>\n",
       "      <td>-0.12</td>\n",
       "      <td>0.211</td>\n",
       "      <td>0.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#23</th>\n",
       "      <td>-0.00167</td>\n",
       "      <td>-1.20</td>\n",
       "      <td>-0.00174</td>\n",
       "      <td>-1.25</td>\n",
       "      <td>-0.00177</td>\n",
       "      <td>-1.27</td>\n",
       "      <td>-0.00179</td>\n",
       "      <td>-1.28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#4</th>\n",
       "      <td>-0.00598</td>\n",
       "      <td>-3.04</td>\n",
       "      <td>-0.00615</td>\n",
       "      <td>-3.09</td>\n",
       "      <td>-0.00708</td>\n",
       "      <td>-3.46</td>\n",
       "      <td>-0.00706</td>\n",
       "      <td>-3.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#5</th>\n",
       "      <td>-0.0116</td>\n",
       "      <td>-2.20</td>\n",
       "      <td>-0.0111</td>\n",
       "      <td>-2.12</td>\n",
       "      <td>-0.0112</td>\n",
       "      <td>-2.12</td>\n",
       "      <td>-0.0109</td>\n",
       "      <td>-2.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#6</th>\n",
       "      <td>-0.00796</td>\n",
       "      <td>-2.46</td>\n",
       "      <td>-0.00784</td>\n",
       "      <td>-2.45</td>\n",
       "      <td>-0.00790</td>\n",
       "      <td>-2.45</td>\n",
       "      <td>-0.00814</td>\n",
       "      <td>-2.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>motor_time</th>\n",
       "      <td>-0.0384</td>\n",
       "      <td>-10.70</td>\n",
       "      <td>-0.0286</td>\n",
       "      <td>-7.59</td>\n",
       "      <td>-0.0299</td>\n",
       "      <td>-7.96</td>\n",
       "      <td>-0.0231</td>\n",
       "      <td>-5.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nonmotor_time</th>\n",
       "      <td>-0.0470</td>\n",
       "      <td>-8.37</td>\n",
       "      <td>-0.0464</td>\n",
       "      <td>-8.11</td>\n",
       "      <td>-0.0459</td>\n",
       "      <td>-8.07</td>\n",
       "      <td>-0.0467</td>\n",
       "      <td>-8.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#2</th>\n",
       "      <td>-0.433</td>\n",
       "      <td>-5.65</td>\n",
       "      <td>-0.416</td>\n",
       "      <td>-5.40</td>\n",
       "      <td>-0.407</td>\n",
       "      <td>-5.33</td>\n",
       "      <td>-0.401</td>\n",
       "      <td>-5.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#3</th>\n",
       "      <td>-0.267</td>\n",
       "      <td>-2.38</td>\n",
       "      <td>-0.212</td>\n",
       "      <td>-1.92</td>\n",
       "      <td>-0.237</td>\n",
       "      <td>-2.11</td>\n",
       "      <td>-0.183</td>\n",
       "      <td>-1.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#4</th>\n",
       "      <td>-0.990</td>\n",
       "      <td>-8.56</td>\n",
       "      <td>-0.911</td>\n",
       "      <td>-7.93</td>\n",
       "      <td>-0.995</td>\n",
       "      <td>-8.36</td>\n",
       "      <td>-0.930</td>\n",
       "      <td>-7.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#5</th>\n",
       "      <td>-0.673</td>\n",
       "      <td>-2.68</td>\n",
       "      <td>-0.698</td>\n",
       "      <td>-2.73</td>\n",
       "      <td>-0.714</td>\n",
       "      <td>-2.76</td>\n",
       "      <td>-0.715</td>\n",
       "      <td>-2.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#6</th>\n",
       "      <td>-0.629</td>\n",
       "      <td>-3.86</td>\n",
       "      <td>-0.720</td>\n",
       "      <td>-4.28</td>\n",
       "      <td>-0.682</td>\n",
       "      <td>-4.08</td>\n",
       "      <td>-0.728</td>\n",
       "      <td>-4.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ovtt/dist</th>\n",
       "      <td>-0.181</td>\n",
       "      <td>-9.83</td>\n",
       "      <td>-0.150</td>\n",
       "      <td>-7.61</td>\n",
       "      <td>-0.158</td>\n",
       "      <td>-8.28</td>\n",
       "      <td>-0.132</td>\n",
       "      <td>-6.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost</th>\n",
       "      <td>-0.00423</td>\n",
       "      <td>-17.35</td>\n",
       "      <td>-0.00329</td>\n",
       "      <td>-13.03</td>\n",
       "      <td>-0.00289</td>\n",
       "      <td>-9.37</td>\n",
       "      <td>-0.00236</td>\n",
       "      <td>-7.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#2</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0.256</td>\n",
       "      <td>2.33</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0.204</td>\n",
       "      <td>1.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#3</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1.06</td>\n",
       "      <td>6.14</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1.02</td>\n",
       "      <td>5.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#4</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1.36</td>\n",
       "      <td>8.41</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1.20</td>\n",
       "      <td>7.18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#5</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0.376</td>\n",
       "      <td>1.17</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0.462</td>\n",
       "      <td>1.28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#6</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0.175</td>\n",
       "      <td>0.78</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0.108</td>\n",
       "      <td>0.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#2</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0.00114</td>\n",
       "      <td>3.10</td>\n",
       "      <td>0.000995</td>\n",
       "      <td>2.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#3</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0.00222</td>\n",
       "      <td>5.11</td>\n",
       "      <td>0.00129</td>\n",
       "      <td>2.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#4</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0.00268</td>\n",
       "      <td>6.95</td>\n",
       "      <td>0.00211</td>\n",
       "      <td>5.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#5</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0.00105</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.000833</td>\n",
       "      <td>0.68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#6</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>0.00151</td>\n",
       "      <td>2.17</td>\n",
       "      <td>0.00179</td>\n",
       "      <td>2.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>----</th>\n",
       "      <th>----</th>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">Log Likelihood</th>\n",
       "      <th>Converged</th>\n",
       "      <td>-3,489.19</td>\n",
       "      <td></td>\n",
       "      <td>-3,440.60</td>\n",
       "      <td></td>\n",
       "      <td>-3,460.63</td>\n",
       "      <td></td>\n",
       "      <td>-3,424.51</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Null</th>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Constants Only</th>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Rho Squared</th>\n",
       "      <th>vs Null</th>\n",
       "      <td>0.5227</td>\n",
       "      <td></td>\n",
       "      <td>0.5293</td>\n",
       "      <td></td>\n",
       "      <td>0.5266</td>\n",
       "      <td></td>\n",
       "      <td>0.5315</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vs Constants Only</th>\n",
       "      <td>0.1558</td>\n",
       "      <td></td>\n",
       "      <td>0.1675</td>\n",
       "      <td></td>\n",
       "      <td>0.1627</td>\n",
       "      <td></td>\n",
       "      <td>0.1714</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   Model 11           Model 13          \\\n",
       "                                      Param  t-Stat      Param  t-Stat   \n",
       "Category       Parameter                                                 \n",
       "Parameters     ASC_BIKE               -1.83   -4.49      -1.65   -3.85   \n",
       "               ASC_SR2                -1.59  -12.06      -1.63  -11.98   \n",
       "               ASC_SR3P               -3.14  -16.99      -3.54  -17.35   \n",
       "               ASC_TRAN               0.927    4.82     -0.201   -0.83   \n",
       "               ASC_WALK              -0.237   -0.70     0.0843    0.24   \n",
       "               hhinc#23            -0.00167   -1.20   -0.00174   -1.25   \n",
       "               hhinc#4             -0.00598   -3.04   -0.00615   -3.09   \n",
       "               hhinc#5              -0.0116   -2.20    -0.0111   -2.12   \n",
       "               hhinc#6             -0.00796   -2.46   -0.00784   -2.45   \n",
       "               motor_time           -0.0384  -10.70    -0.0286   -7.59   \n",
       "               nonmotor_time        -0.0470   -8.37    -0.0464   -8.11   \n",
       "               numveh#2              -0.433   -5.65     -0.416   -5.40   \n",
       "               numveh#3              -0.267   -2.38     -0.212   -1.92   \n",
       "               numveh#4              -0.990   -8.56     -0.911   -7.93   \n",
       "               numveh#5              -0.673   -2.68     -0.698   -2.73   \n",
       "               numveh#6              -0.629   -3.86     -0.720   -4.28   \n",
       "               ovtt/dist             -0.181   -9.83     -0.150   -7.61   \n",
       "               totcost             -0.00423  -17.35   -0.00329  -13.03   \n",
       "               wkccbd#2                                  0.256    2.33   \n",
       "               wkccbd#3                                   1.06    6.14   \n",
       "               wkccbd#4                                   1.36    8.41   \n",
       "               wkccbd#5                                  0.376    1.17   \n",
       "               wkccbd#6                                  0.175    0.78   \n",
       "               wkempden#2                                                \n",
       "               wkempden#3                                                \n",
       "               wkempden#4                                                \n",
       "               wkempden#5                                                \n",
       "               wkempden#6                                                \n",
       "----           ----                    ----    ----       ----    ----   \n",
       "Log Likelihood Converged          -3,489.19          -3,440.60           \n",
       "               Null               -7,309.60          -7,309.60           \n",
       "               Constants Only     -4,132.92          -4,132.92           \n",
       "Rho Squared    vs Null               0.5227             0.5293           \n",
       "               vs Constants Only     0.1558             0.1675           \n",
       "\n",
       "                                   Model 14           Model 15          \n",
       "                                      Param  t-Stat      Param  t-Stat  \n",
       "Category       Parameter                                                \n",
       "Parameters     ASC_BIKE               -1.60   -3.83      -1.51   -3.53  \n",
       "               ASC_SR2                -1.60  -12.06      -1.64  -12.02  \n",
       "               ASC_SR3P               -3.21  -17.00      -3.55  -17.38  \n",
       "               ASC_TRAN               0.420    2.01     -0.471   -1.87  \n",
       "               ASC_WALK             -0.0403   -0.12      0.211    0.60  \n",
       "               hhinc#23            -0.00177   -1.27   -0.00179   -1.28  \n",
       "               hhinc#4             -0.00708   -3.46   -0.00706   -3.43  \n",
       "               hhinc#5              -0.0112   -2.12    -0.0109   -2.07  \n",
       "               hhinc#6             -0.00790   -2.45   -0.00814   -2.54  \n",
       "               motor_time           -0.0299   -7.96    -0.0231   -5.92  \n",
       "               nonmotor_time        -0.0459   -8.07    -0.0467   -8.10  \n",
       "               numveh#2              -0.407   -5.33     -0.401   -5.22  \n",
       "               numveh#3              -0.237   -2.11     -0.183   -1.66  \n",
       "               numveh#4              -0.995   -8.36     -0.930   -7.89  \n",
       "               numveh#5              -0.714   -2.76     -0.715   -2.76  \n",
       "               numveh#6              -0.682   -4.08     -0.728   -4.30  \n",
       "               ovtt/dist             -0.158   -8.28     -0.132   -6.71  \n",
       "               totcost             -0.00289   -9.37   -0.00236   -7.71  \n",
       "               wkccbd#2                                  0.204    1.64  \n",
       "               wkccbd#3                                   1.02    5.29  \n",
       "               wkccbd#4                                   1.20    7.18  \n",
       "               wkccbd#5                                  0.462    1.28  \n",
       "               wkccbd#6                                  0.108    0.43  \n",
       "               wkempden#2           0.00114    3.10   0.000995    2.48  \n",
       "               wkempden#3           0.00222    5.11    0.00129    2.71  \n",
       "               wkempden#4           0.00268    6.95    0.00211    5.46  \n",
       "               wkempden#5           0.00105    0.96   0.000833    0.68  \n",
       "               wkempden#6           0.00151    2.17    0.00179    2.38  \n",
       "----           ----                    ----    ----       ----    ----  \n",
       "Log Likelihood Converged          -3,460.63          -3,424.51          \n",
       "               Null               -7,309.60          -7,309.60          \n",
       "               Constants Only     -4,132.92          -4,132.92          \n",
       "Rho Squared    vs Null               0.5266             0.5315          \n",
       "               vs Constants Only     0.1627             0.1714          "
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xl.add_content_tab(\n",
    "    joint_parameter_summary([m11, m13, m14, m15], bases=[m_c]),\n",
    "    sheetname=\"Step 6\",\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:19.725781Z",
     "start_time": "2020-03-20T04:32:19.554688Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'97.188, p=0.000'"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m13,m11,5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:19.888554Z",
     "start_time": "2020-03-20T04:32:19.727882Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'57.120, p=0.000'"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m14,m11,5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:20.060514Z",
     "start_time": "2020-03-20T04:32:19.890624Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'32.189, p=0.000'"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m15,m13,5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:20.229484Z",
     "start_time": "2020-03-20T04:32:20.062737Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'72.258, p=0.000'"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m15,m14,5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:20.248147Z",
     "start_time": "2020-03-20T04:32:20.231770Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model 13\n",
      "Non-motorized Time is worth 8.47651 $/hr\n",
      "IVTT is worth 5.22299 $/hr\n",
      "OVTT is worth 32.64856 $/hr at 1 mile\n",
      "OVTT is worth 10.70811 $/hr at 5 mile\n",
      "OVTT is worth 7.96555 $/hr at 10 miles\n",
      "\n",
      "Model 14\n",
      "Non-motorized Time is worth 9.53978 $/hr\n",
      "IVTT is worth 6.22358 $/hr\n",
      "OVTT is worth 38.98093 $/hr at 1 mile\n",
      "OVTT is worth 12.77505 $/hr at 5 mile\n",
      "OVTT is worth 9.49932 $/hr at 10 miles\n",
      "\n",
      "Model 15\n",
      "Non-motorized Time is worth 11.88622 $/hr\n",
      "IVTT is worth 5.88092 $/hr\n",
      "OVTT is worth 39.55738 $/hr at 1 mile\n",
      "OVTT is worth 12.61621 $/hr at 5 mile\n",
      "OVTT is worth 9.24857 $/hr at 10 miles\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for m_ in [m13,m14,m15]:\n",
    "    c = m_['totcost'].value\n",
    "    print(m_.title)\n",
    "    print(f\"Non-motorized Time is worth {m_['nonmotor_time'].value/c*60/100:.5f} $/hr\")\n",
    "    print(f\"IVTT is worth {m_['motor_time'].value/c*60/100:.5f} $/hr\")\n",
    "    print(f\"OVTT is worth {(m_['ovtt/dist'].value+m_['motor_time'].value)/c*60/100:.5f} $/hr at 1 mile\")\n",
    "    print(f\"OVTT is worth {(m_['ovtt/dist'].value/5+m_['motor_time'].value)/c*60/100:.5f} $/hr at 5 mile\")\n",
    "    print(f\"OVTT is worth {(m_['ovtt/dist'].value/10+m_['motor_time'].value)/c*60/100:.5f} $/hr at 10 miles\")\n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Each of the new models significantly reject the previous model at a very high level of significance\n",
    "- Parameters for each of the alternative specific CBD dummy and employment density variables have a positive sign, as expected\n",
    "- Model with both variables rejects each of the other models\n",
    "- Values of time are similar for all three models\n",
    "- We choose Model 15 for its stronger statistical results, but should revisit the issue of model complexity (parsimony)\n",
    "- CBD and density are similar (0/1 versus continuous)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Including Interactions Between Variables\n",
    "\n",
    "Many possible examples.\n",
    "\n",
    "Most common to take account of the expectation that low-income travelers will be more sensitive to travel cost than high-income travelers by using cost divided by income in place of cost as an explanatory variable.\n",
    "\n",
    "Note that in practice, cost / log(income) tends to work well."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:23.785570Z",
     "start_time": "2020-03-20T04:32:20.250683Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m16  = m15.copy()\n",
    "m16.title = \"Model 16\"\n",
    "m16.utility_ca[-1] = PX(\"totcost/hhinc\") \n",
    "m16.remove_unused_parameters() \n",
    "m16.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:27.072212Z",
     "start_time": "2020-03-20T04:32:23.787719Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m16b  = m15.copy()\n",
    "m16b.title = \"Model 16b\"\n",
    "m16b.utility_ca[-1] = PX(\"totcost/log(hhinc)\") \n",
    "m16b.remove_unused_parameters() \n",
    "m16b.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:27.903330Z",
     "start_time": "2020-03-20T04:32:27.074545Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 15</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 16</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 16b</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Category</th>\n",
       "      <th>Parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"30\" valign=\"top\">Parameters</th>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-1.51</td>\n",
       "      <td>-3.53</td>\n",
       "      <td>-1.62</td>\n",
       "      <td>-3.78</td>\n",
       "      <td>-1.57</td>\n",
       "      <td>-3.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-1.64</td>\n",
       "      <td>-12.02</td>\n",
       "      <td>-1.73</td>\n",
       "      <td>-12.48</td>\n",
       "      <td>-1.70</td>\n",
       "      <td>-12.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.55</td>\n",
       "      <td>-17.38</td>\n",
       "      <td>-3.66</td>\n",
       "      <td>-17.74</td>\n",
       "      <td>-3.61</td>\n",
       "      <td>-17.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>-0.471</td>\n",
       "      <td>-1.87</td>\n",
       "      <td>-0.691</td>\n",
       "      <td>-2.77</td>\n",
       "      <td>-0.522</td>\n",
       "      <td>-2.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>0.211</td>\n",
       "      <td>0.60</td>\n",
       "      <td>0.0760</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.154</td>\n",
       "      <td>0.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#23</th>\n",
       "      <td>-0.00179</td>\n",
       "      <td>-1.28</td>\n",
       "      <td>3.70e-05</td>\n",
       "      <td>0.03</td>\n",
       "      <td>-0.000839</td>\n",
       "      <td>-0.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#4</th>\n",
       "      <td>-0.00706</td>\n",
       "      <td>-3.43</td>\n",
       "      <td>-0.00534</td>\n",
       "      <td>-2.61</td>\n",
       "      <td>-0.00612</td>\n",
       "      <td>-2.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#5</th>\n",
       "      <td>-0.0109</td>\n",
       "      <td>-2.07</td>\n",
       "      <td>-0.00867</td>\n",
       "      <td>-1.68</td>\n",
       "      <td>-0.00978</td>\n",
       "      <td>-1.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#6</th>\n",
       "      <td>-0.00814</td>\n",
       "      <td>-2.54</td>\n",
       "      <td>-0.00602</td>\n",
       "      <td>-1.89</td>\n",
       "      <td>-0.00711</td>\n",
       "      <td>-2.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>motor_time</th>\n",
       "      <td>-0.0231</td>\n",
       "      <td>-5.92</td>\n",
       "      <td>-0.0202</td>\n",
       "      <td>-5.29</td>\n",
       "      <td>-0.0228</td>\n",
       "      <td>-5.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nonmotor_time</th>\n",
       "      <td>-0.0467</td>\n",
       "      <td>-8.10</td>\n",
       "      <td>-0.0454</td>\n",
       "      <td>-7.88</td>\n",
       "      <td>-0.0469</td>\n",
       "      <td>-8.11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#2</th>\n",
       "      <td>-0.401</td>\n",
       "      <td>-5.22</td>\n",
       "      <td>-0.382</td>\n",
       "      <td>-4.98</td>\n",
       "      <td>-0.399</td>\n",
       "      <td>-5.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#3</th>\n",
       "      <td>-0.183</td>\n",
       "      <td>-1.66</td>\n",
       "      <td>-0.139</td>\n",
       "      <td>-1.27</td>\n",
       "      <td>-0.179</td>\n",
       "      <td>-1.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#4</th>\n",
       "      <td>-0.930</td>\n",
       "      <td>-7.89</td>\n",
       "      <td>-0.938</td>\n",
       "      <td>-7.92</td>\n",
       "      <td>-0.942</td>\n",
       "      <td>-7.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#5</th>\n",
       "      <td>-0.715</td>\n",
       "      <td>-2.76</td>\n",
       "      <td>-0.704</td>\n",
       "      <td>-2.72</td>\n",
       "      <td>-0.712</td>\n",
       "      <td>-2.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#6</th>\n",
       "      <td>-0.728</td>\n",
       "      <td>-4.30</td>\n",
       "      <td>-0.725</td>\n",
       "      <td>-4.27</td>\n",
       "      <td>-0.722</td>\n",
       "      <td>-4.27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ovtt/dist</th>\n",
       "      <td>-0.132</td>\n",
       "      <td>-6.71</td>\n",
       "      <td>-0.133</td>\n",
       "      <td>-6.76</td>\n",
       "      <td>-0.131</td>\n",
       "      <td>-6.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost</th>\n",
       "      <td>-0.00236</td>\n",
       "      <td>-7.71</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost/hhinc</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.0518</td>\n",
       "      <td>-4.85</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost/log(hhinc)</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.00896</td>\n",
       "      <td>-7.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#2</th>\n",
       "      <td>0.204</td>\n",
       "      <td>1.64</td>\n",
       "      <td>0.247</td>\n",
       "      <td>1.99</td>\n",
       "      <td>0.207</td>\n",
       "      <td>1.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#3</th>\n",
       "      <td>1.02</td>\n",
       "      <td>5.29</td>\n",
       "      <td>1.09</td>\n",
       "      <td>5.73</td>\n",
       "      <td>1.02</td>\n",
       "      <td>5.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#4</th>\n",
       "      <td>1.20</td>\n",
       "      <td>7.18</td>\n",
       "      <td>1.31</td>\n",
       "      <td>7.88</td>\n",
       "      <td>1.21</td>\n",
       "      <td>7.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#5</th>\n",
       "      <td>0.462</td>\n",
       "      <td>1.28</td>\n",
       "      <td>0.486</td>\n",
       "      <td>1.35</td>\n",
       "      <td>0.453</td>\n",
       "      <td>1.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#6</th>\n",
       "      <td>0.108</td>\n",
       "      <td>0.43</td>\n",
       "      <td>0.0972</td>\n",
       "      <td>0.39</td>\n",
       "      <td>0.0894</td>\n",
       "      <td>0.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#2</th>\n",
       "      <td>0.000995</td>\n",
       "      <td>2.48</td>\n",
       "      <td>0.00160</td>\n",
       "      <td>4.05</td>\n",
       "      <td>0.00104</td>\n",
       "      <td>2.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#3</th>\n",
       "      <td>0.00129</td>\n",
       "      <td>2.71</td>\n",
       "      <td>0.00220</td>\n",
       "      <td>4.84</td>\n",
       "      <td>0.00137</td>\n",
       "      <td>2.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#4</th>\n",
       "      <td>0.00211</td>\n",
       "      <td>5.46</td>\n",
       "      <td>0.00313</td>\n",
       "      <td>8.62</td>\n",
       "      <td>0.00219</td>\n",
       "      <td>5.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#5</th>\n",
       "      <td>0.000833</td>\n",
       "      <td>0.68</td>\n",
       "      <td>0.00192</td>\n",
       "      <td>1.58</td>\n",
       "      <td>0.000934</td>\n",
       "      <td>0.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#6</th>\n",
       "      <td>0.00179</td>\n",
       "      <td>2.38</td>\n",
       "      <td>0.00288</td>\n",
       "      <td>3.88</td>\n",
       "      <td>0.00191</td>\n",
       "      <td>2.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>----</th>\n",
       "      <th>----</th>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">Log Likelihood</th>\n",
       "      <th>Converged</th>\n",
       "      <td>-3,424.51</td>\n",
       "      <td></td>\n",
       "      <td>-3,442.29</td>\n",
       "      <td></td>\n",
       "      <td>-3,425.70</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Null</th>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Constants Only</th>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Rho Squared</th>\n",
       "      <th>vs Null</th>\n",
       "      <td>0.5315</td>\n",
       "      <td></td>\n",
       "      <td>0.5291</td>\n",
       "      <td></td>\n",
       "      <td>0.5313</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vs Constants Only</th>\n",
       "      <td>0.1714</td>\n",
       "      <td></td>\n",
       "      <td>0.1671</td>\n",
       "      <td></td>\n",
       "      <td>0.1711</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                    Model 15           Model 16          \\\n",
       "                                       Param  t-Stat      Param  t-Stat   \n",
       "Category       Parameter                                                  \n",
       "Parameters     ASC_BIKE                -1.51   -3.53      -1.62   -3.78   \n",
       "               ASC_SR2                 -1.64  -12.02      -1.73  -12.48   \n",
       "               ASC_SR3P                -3.55  -17.38      -3.66  -17.74   \n",
       "               ASC_TRAN               -0.471   -1.87     -0.691   -2.77   \n",
       "               ASC_WALK                0.211    0.60     0.0760    0.22   \n",
       "               hhinc#23             -0.00179   -1.28   3.70e-05    0.03   \n",
       "               hhinc#4              -0.00706   -3.43   -0.00534   -2.61   \n",
       "               hhinc#5               -0.0109   -2.07   -0.00867   -1.68   \n",
       "               hhinc#6              -0.00814   -2.54   -0.00602   -1.89   \n",
       "               motor_time            -0.0231   -5.92    -0.0202   -5.29   \n",
       "               nonmotor_time         -0.0467   -8.10    -0.0454   -7.88   \n",
       "               numveh#2               -0.401   -5.22     -0.382   -4.98   \n",
       "               numveh#3               -0.183   -1.66     -0.139   -1.27   \n",
       "               numveh#4               -0.930   -7.89     -0.938   -7.92   \n",
       "               numveh#5               -0.715   -2.76     -0.704   -2.72   \n",
       "               numveh#6               -0.728   -4.30     -0.725   -4.27   \n",
       "               ovtt/dist              -0.132   -6.71     -0.133   -6.76   \n",
       "               totcost              -0.00236   -7.71                      \n",
       "               totcost/hhinc                            -0.0518   -4.85   \n",
       "               totcost/log(hhinc)                                         \n",
       "               wkccbd#2                0.204    1.64      0.247    1.99   \n",
       "               wkccbd#3                 1.02    5.29       1.09    5.73   \n",
       "               wkccbd#4                 1.20    7.18       1.31    7.88   \n",
       "               wkccbd#5                0.462    1.28      0.486    1.35   \n",
       "               wkccbd#6                0.108    0.43     0.0972    0.39   \n",
       "               wkempden#2           0.000995    2.48    0.00160    4.05   \n",
       "               wkempden#3            0.00129    2.71    0.00220    4.84   \n",
       "               wkempden#4            0.00211    5.46    0.00313    8.62   \n",
       "               wkempden#5           0.000833    0.68    0.00192    1.58   \n",
       "               wkempden#6            0.00179    2.38    0.00288    3.88   \n",
       "----           ----                     ----    ----       ----    ----   \n",
       "Log Likelihood Converged           -3,424.51          -3,442.29           \n",
       "               Null                -7,309.60          -7,309.60           \n",
       "               Constants Only      -4,132.92          -4,132.92           \n",
       "Rho Squared    vs Null                0.5315             0.5291           \n",
       "               vs Constants Only      0.1714             0.1671           \n",
       "\n",
       "                                   Model 16b          \n",
       "                                       Param  t-Stat  \n",
       "Category       Parameter                              \n",
       "Parameters     ASC_BIKE                -1.57   -3.67  \n",
       "               ASC_SR2                 -1.70  -12.41  \n",
       "               ASC_SR3P                -3.61  -17.66  \n",
       "               ASC_TRAN               -0.522   -2.08  \n",
       "               ASC_WALK                0.154    0.44  \n",
       "               hhinc#23            -0.000839   -0.60  \n",
       "               hhinc#4              -0.00612   -2.99  \n",
       "               hhinc#5              -0.00978   -1.87  \n",
       "               hhinc#6              -0.00711   -2.23  \n",
       "               motor_time            -0.0228   -5.85  \n",
       "               nonmotor_time         -0.0469   -8.11  \n",
       "               numveh#2               -0.399   -5.19  \n",
       "               numveh#3               -0.179   -1.62  \n",
       "               numveh#4               -0.942   -7.96  \n",
       "               numveh#5               -0.712   -2.75  \n",
       "               numveh#6               -0.722   -4.27  \n",
       "               ovtt/dist              -0.131   -6.65  \n",
       "               totcost                                \n",
       "               totcost/hhinc                          \n",
       "               totcost/log(hhinc)   -0.00896   -7.55  \n",
       "               wkccbd#2                0.207    1.66  \n",
       "               wkccbd#3                 1.02    5.32  \n",
       "               wkccbd#4                 1.21    7.20  \n",
       "               wkccbd#5                0.453    1.25  \n",
       "               wkccbd#6               0.0894    0.36  \n",
       "               wkempden#2            0.00104    2.61  \n",
       "               wkempden#3            0.00137    2.88  \n",
       "               wkempden#4            0.00219    5.67  \n",
       "               wkempden#5           0.000934    0.76  \n",
       "               wkempden#6            0.00191    2.54  \n",
       "----           ----                     ----    ----  \n",
       "Log Likelihood Converged           -3,425.70          \n",
       "               Null                -7,309.60          \n",
       "               Constants Only      -4,132.92          \n",
       "Rho Squared    vs Null                0.5313          \n",
       "               vs Constants Only      0.1711          "
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xl.add_content_tab(\n",
    "    joint_parameter_summary([m15, m16, m16b], bases=[m_c]),\n",
    "    sheetname='Step 7',\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The overall goodness-of-fit is better for model 15 (cost without interaction with income).\n",
    "\n",
    "Since theory and common sense suggest that the importance of cost should decrease with income, \n",
    "we will prefer Model 16 despite the statistical difference.\n",
    "\n",
    "Values of time implied by earlier models were lower than expected relative to the average wage rate.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In Model 16, we can compute the value of time as a fraction of wage rate obtained by dividing the time parameter $\\beta_{IVT}$ by the income cost parameter $\\beta_{Cost/Inc}$ .\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$\n",
    "\\begin{align}\n",
    "V_m &= \\cdots +& \\beta_{IVT}         & IVT_m   + & \\beta_{Cost/Inc}                        & \\frac{Cost_m}{Income} \\\\\n",
    "&=       & \\frac{utils}{minute}& minutes  + & \\frac{utils}{cents / \\frac{$000}{year}} & \\frac{cents}{{$000}/{year}}\n",
    "\\end{align}\n",
    "$$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Before taking the ratio, we adjust for differences in measurement units: travel cost in cents, travel time in minutes and income in thousands of dollars per year.\n",
    "\n",
    "$$\n",
    "\\frac{$000}{year} = \\frac{$1000}{1 \\textrm{ year}} \n",
    "\\frac{1 \\textrm{ year}}{50 \\textrm{ work weeks}} \n",
    "\\frac{1 \\textrm{ work week}}{40\\textrm{ hours}} \n",
    "\\frac{1\\textrm{ hour}}{60 \\textrm{ minutes}}\n",
    "\\frac{100\\textrm{ cents}}{\\$1}\n",
    "= 1.2\n",
    "\\frac{cents}{minute}\n",
    "$$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "That is, cost by income would be multiplied by 1.2 and the estimated parameter should be divided by 1.2. Thus,\n",
    "\n",
    "$$\n",
    "\\textrm{Value of IVT (as fraction of wage rate)} = 1.2\\frac{\\beta_{IVT}}{\\beta_{Cost/Inc}}    \n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:27.941702Z",
     "start_time": "2020-03-20T04:32:27.905503Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>% Wage Rate</th>\n",
       "      <th>$10/hr</th>\n",
       "      <th>$20/hr</th>\n",
       "      <th>$40/hr</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Non-Motor</th>\n",
       "      <td>105.31%</td>\n",
       "      <td>$10.53/hr</td>\n",
       "      <td>$21.06/hr</td>\n",
       "      <td>$42.12/hr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IVTT</th>\n",
       "      <td>46.72%</td>\n",
       "      <td>$4.67/hr</td>\n",
       "      <td>$9.34/hr</td>\n",
       "      <td>$18.69/hr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OVTT @ 1 mile</th>\n",
       "      <td>354.29%</td>\n",
       "      <td>$35.43/hr</td>\n",
       "      <td>$70.86/hr</td>\n",
       "      <td>$141.72/hr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OVTT @ 5 mile</th>\n",
       "      <td>108.23%</td>\n",
       "      <td>$10.82/hr</td>\n",
       "      <td>$21.65/hr</td>\n",
       "      <td>$43.29/hr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OVTT @ 10 mile</th>\n",
       "      <td>77.48%</td>\n",
       "      <td>$7.75/hr</td>\n",
       "      <td>$15.50/hr</td>\n",
       "      <td>$30.99/hr</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               % Wage Rate     $10/hr     $20/hr      $40/hr\n",
       "Non-Motor          105.31%  $10.53/hr  $21.06/hr   $42.12/hr\n",
       "IVTT                46.72%   $4.67/hr   $9.34/hr   $18.69/hr\n",
       "OVTT @ 1 mile      354.29%  $35.43/hr  $70.86/hr  $141.72/hr\n",
       "OVTT @ 5 mile      108.23%  $10.82/hr  $21.65/hr   $43.29/hr\n",
       "OVTT @ 10 mile      77.48%   $7.75/hr  $15.50/hr   $30.99/hr"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c = m16['totcost/hhinc'].value / 1.2\n",
    "m_ = m16\n",
    "\n",
    "VoT = pd.DataFrame(\n",
    "    columns=['% Wage Rate', '$10/hr', '$20/hr', '$40/hr'],\n",
    "    index=['Non-Motor','IVTT','OVTT @ 1 mile','OVTT @ 5 mile','OVTT @ 10 mile']\n",
    ")\n",
    "\n",
    "VoT.loc['Non-Motor', '% Wage Rate'] = \"{:.2%}\".format(m_['nonmotor_time'].value/c)\n",
    "VoT.loc['IVTT', '% Wage Rate'] = \"{:.2%}\".format(m_['motor_time'].value/c)\n",
    "for dist in [1,5,10]:\n",
    "    VoT.loc[f'OVTT @ {dist} mile', '% Wage Rate'] = \"{:.2%}\".format((m_['ovtt/dist'].value/dist+m_['motor_time'].value)/c)\n",
    "\n",
    "\n",
    "for wage in [10,20,40]:\n",
    "    VoT.loc['Non-Motor', f'${wage}/hr'] = \"${:.2f}/hr\".format(wage*m_['nonmotor_time'].value/c)\n",
    "    VoT.loc['IVTT', f'${wage}/hr'] = \"${:.2f}/hr\".format(wage*m_['motor_time'].value/c)\n",
    "    for dist in [1,5,10]:\n",
    "        VoT.loc[f'OVTT @ {dist} mile', f'${wage}/hr'] = \"${:.2f}/hr\".format(wage*(m_['ovtt/dist'].value/dist+m_['motor_time'].value)/c)\n",
    "VoT"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:27.996352Z",
     "start_time": "2020-03-20T04:32:27.943776Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>$20K/yr</th>\n",
       "      <th>$50K/yr</th>\n",
       "      <th>$100K/yr</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Non-Motor</th>\n",
       "      <td>$9.40/hr</td>\n",
       "      <td>$12.28/hr</td>\n",
       "      <td>$14.45/hr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IVTT</th>\n",
       "      <td>$4.57/hr</td>\n",
       "      <td>$5.97/hr</td>\n",
       "      <td>$7.03/hr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OVTT @ 1 mile</th>\n",
       "      <td>$30.88/hr</td>\n",
       "      <td>$40.33/hr</td>\n",
       "      <td>$47.48/hr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OVTT @ 5 mile</th>\n",
       "      <td>$9.83/hr</td>\n",
       "      <td>$12.84/hr</td>\n",
       "      <td>$15.12/hr</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>OVTT @ 10 mile</th>\n",
       "      <td>$7.20/hr</td>\n",
       "      <td>$9.40/hr</td>\n",
       "      <td>$11.07/hr</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  $20K/yr    $50K/yr   $100K/yr\n",
       "Non-Motor        $9.40/hr  $12.28/hr  $14.45/hr\n",
       "IVTT             $4.57/hr   $5.97/hr   $7.03/hr\n",
       "OVTT @ 1 mile   $30.88/hr  $40.33/hr  $47.48/hr\n",
       "OVTT @ 5 mile    $9.83/hr  $12.84/hr  $15.12/hr\n",
       "OVTT @ 10 mile   $7.20/hr   $9.40/hr  $11.07/hr"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "VoT16b = pd.DataFrame(\n",
    "    columns=['$20K/yr', '$50K/yr', '$100K/yr'],\n",
    "    index=['Non-Motor','IVTT','OVTT @ 1 mile','OVTT @ 5 mile','OVTT @ 10 mile']\n",
    ")\n",
    "\n",
    "m_ = m16b\n",
    "c = m16b['totcost/log(hhinc)'].value\n",
    "\n",
    "for income in [20,50,100]:\n",
    "    li = np.log(income)\n",
    "    cli = c/li*100/60\n",
    "    VoT16b.loc['Non-Motor', f'${income}K/yr'] = \"${:.2f}/hr\".format(m_['nonmotor_time'].value/cli)\n",
    "    VoT16b.loc['IVTT', f'${income}K/yr'] = \"${:.2f}/hr\".format(m_['motor_time'].value/cli)\n",
    "    for dist in [1,5,10]:\n",
    "        VoT16b.loc[f'OVTT @ {dist} mile', f'${income}K/yr'] = \"${:.2f}/hr\".format((m_['ovtt/dist'].value/dist+m_['motor_time'].value)/cli)\n",
    "VoT16b"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If you figure the typical San Francisco resident makes well over $20/hour, the resulting values of time\n",
    "appear much more reasonable.  Based on this, we might prefer to adopt Model 16 as the preferred model, even though that is not supported by the statistical evidence."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Additional Model Testing and Refinement\n",
    "\n",
    "Final tests of the preferred model specification\n",
    "- Re-examine earlier decisions\n",
    "- Eliminate non-significant variables\n",
    "- Reduce model complexity\n",
    "- Change the form used for inclusion of different variables (e.g., replacing income by log of income)\n",
    "- Add new variables\n",
    "\n",
    "We consider simplifying the model specification by dropping variables that are not statistically significant or by collapsing alternative specific variables that do not differ across alternatives. The cost and time parameters are all significant and should be included because they are needed to represent the impact of policy changes in mode service attributes.\n",
    "\n",
    "- The extremely low values and lack of significance for income specific to the shared ride alternatives suggest that these variables should be constrained to the value for drive alone (zero, in this case).\n",
    "\n",
    "- The parameter for automobiles by workers variable for shared ride 3+ alternative is smaller in magnitude than the parameter for the shared ride 2 alternative. We can overcome this by combining the alternative specific variables for the shared ride modes into one variable (i.e., constrain them to be equal).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:30.742179Z",
     "start_time": "2020-03-20T04:32:27.999672Z"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "req_data does not request {choice_ca,choice_co,choice_co_code} but choice is set and being provided\n",
      "req_data does not request avail_ca or avail_co but it is set and being provided\n"
     ]
    }
   ],
   "source": [
    "m17 = m16.copy()\n",
    "m17.title = \"Model 17\"\n",
    "for a in [2,3]:\n",
    "    m17.utility_co[a].remove_data(\"hhinc\")\n",
    "    m17.utility_co[a].remove_data(\"numveh/numemphh\")\n",
    "    m17.utility_co[a] += P(\"numveh#23\") * X(\"numveh/numemphh\")\n",
    "\n",
    "m17.remove_unused_parameters() \n",
    "m17.estimate(quiet=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:31.306725Z",
     "start_time": "2020-03-20T04:32:30.744153Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 16</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Model 17</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "      <th>Param</th>\n",
       "      <th>t-Stat</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Category</th>\n",
       "      <th>Parameter</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"29\" valign=\"top\">Parameters</th>\n",
       "      <th>ASC_BIKE</th>\n",
       "      <td>-1.62</td>\n",
       "      <td>-3.78</td>\n",
       "      <td>-1.63</td>\n",
       "      <td>-3.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR2</th>\n",
       "      <td>-1.73</td>\n",
       "      <td>-12.48</td>\n",
       "      <td>-1.81</td>\n",
       "      <td>-17.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_SR3P</th>\n",
       "      <td>-3.66</td>\n",
       "      <td>-17.74</td>\n",
       "      <td>-3.43</td>\n",
       "      <td>-22.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_TRAN</th>\n",
       "      <td>-0.691</td>\n",
       "      <td>-2.77</td>\n",
       "      <td>-0.684</td>\n",
       "      <td>-2.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ASC_WALK</th>\n",
       "      <td>0.0760</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.0688</td>\n",
       "      <td>0.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#23</th>\n",
       "      <td>3.70e-05</td>\n",
       "      <td>0.03</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#4</th>\n",
       "      <td>-0.00534</td>\n",
       "      <td>-2.61</td>\n",
       "      <td>-0.00532</td>\n",
       "      <td>-2.69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#5</th>\n",
       "      <td>-0.00867</td>\n",
       "      <td>-1.68</td>\n",
       "      <td>-0.00864</td>\n",
       "      <td>-1.68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhinc#6</th>\n",
       "      <td>-0.00602</td>\n",
       "      <td>-1.89</td>\n",
       "      <td>-0.00599</td>\n",
       "      <td>-1.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>motor_time</th>\n",
       "      <td>-0.0202</td>\n",
       "      <td>-5.29</td>\n",
       "      <td>-0.0202</td>\n",
       "      <td>-5.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>nonmotor_time</th>\n",
       "      <td>-0.0454</td>\n",
       "      <td>-7.88</td>\n",
       "      <td>-0.0454</td>\n",
       "      <td>-7.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#2</th>\n",
       "      <td>-0.382</td>\n",
       "      <td>-4.98</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#23</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-0.317</td>\n",
       "      <td>-4.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#3</th>\n",
       "      <td>-0.139</td>\n",
       "      <td>-1.27</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#4</th>\n",
       "      <td>-0.938</td>\n",
       "      <td>-7.92</td>\n",
       "      <td>-0.947</td>\n",
       "      <td>-8.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#5</th>\n",
       "      <td>-0.704</td>\n",
       "      <td>-2.72</td>\n",
       "      <td>-0.703</td>\n",
       "      <td>-2.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>numveh#6</th>\n",
       "      <td>-0.725</td>\n",
       "      <td>-4.27</td>\n",
       "      <td>-0.723</td>\n",
       "      <td>-4.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ovtt/dist</th>\n",
       "      <td>-0.133</td>\n",
       "      <td>-6.76</td>\n",
       "      <td>-0.133</td>\n",
       "      <td>-6.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>totcost/hhinc</th>\n",
       "      <td>-0.0518</td>\n",
       "      <td>-4.85</td>\n",
       "      <td>-0.0524</td>\n",
       "      <td>-5.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#2</th>\n",
       "      <td>0.247</td>\n",
       "      <td>1.99</td>\n",
       "      <td>0.260</td>\n",
       "      <td>2.11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#3</th>\n",
       "      <td>1.09</td>\n",
       "      <td>5.73</td>\n",
       "      <td>1.07</td>\n",
       "      <td>5.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#4</th>\n",
       "      <td>1.31</td>\n",
       "      <td>7.88</td>\n",
       "      <td>1.31</td>\n",
       "      <td>7.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#5</th>\n",
       "      <td>0.486</td>\n",
       "      <td>1.35</td>\n",
       "      <td>0.489</td>\n",
       "      <td>1.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkccbd#6</th>\n",
       "      <td>0.0972</td>\n",
       "      <td>0.39</td>\n",
       "      <td>0.102</td>\n",
       "      <td>0.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#2</th>\n",
       "      <td>0.00160</td>\n",
       "      <td>4.05</td>\n",
       "      <td>0.00158</td>\n",
       "      <td>4.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#3</th>\n",
       "      <td>0.00220</td>\n",
       "      <td>4.84</td>\n",
       "      <td>0.00226</td>\n",
       "      <td>4.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#4</th>\n",
       "      <td>0.00313</td>\n",
       "      <td>8.62</td>\n",
       "      <td>0.00313</td>\n",
       "      <td>8.68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#5</th>\n",
       "      <td>0.00192</td>\n",
       "      <td>1.58</td>\n",
       "      <td>0.00193</td>\n",
       "      <td>1.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wkempden#6</th>\n",
       "      <td>0.00288</td>\n",
       "      <td>3.88</td>\n",
       "      <td>0.00289</td>\n",
       "      <td>3.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>----</th>\n",
       "      <th>----</th>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "      <td>----</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">Log Likelihood</th>\n",
       "      <th>Converged</th>\n",
       "      <td>-3,442.29</td>\n",
       "      <td></td>\n",
       "      <td>-3,444.14</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Null</th>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "      <td>-7,309.60</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Constants Only</th>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "      <td>-4,132.92</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">Rho Squared</th>\n",
       "      <th>vs Null</th>\n",
       "      <td>0.5291</td>\n",
       "      <td></td>\n",
       "      <td>0.5288</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>vs Constants Only</th>\n",
       "      <td>0.1671</td>\n",
       "      <td></td>\n",
       "      <td>0.1667</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   Model 16           Model 17        \n",
       "                                      Param  t-Stat      Param  t-Stat\n",
       "Category       Parameter                                              \n",
       "Parameters     ASC_BIKE               -1.62   -3.78      -1.63   -3.81\n",
       "               ASC_SR2                -1.73  -12.48      -1.81  -17.03\n",
       "               ASC_SR3P               -3.66  -17.74      -3.43  -22.61\n",
       "               ASC_TRAN              -0.691   -2.77     -0.684   -2.76\n",
       "               ASC_WALK              0.0760    0.22     0.0688    0.20\n",
       "               hhinc#23            3.70e-05    0.03                   \n",
       "               hhinc#4             -0.00534   -2.61   -0.00532   -2.69\n",
       "               hhinc#5             -0.00867   -1.68   -0.00864   -1.68\n",
       "               hhinc#6             -0.00602   -1.89   -0.00599   -1.90\n",
       "               motor_time           -0.0202   -5.29    -0.0202   -5.29\n",
       "               nonmotor_time        -0.0454   -7.88    -0.0454   -7.88\n",
       "               numveh#2              -0.382   -4.98                   \n",
       "               numveh#23                                -0.317   -4.75\n",
       "               numveh#3              -0.139   -1.27                   \n",
       "               numveh#4              -0.938   -7.92     -0.947   -8.00\n",
       "               numveh#5              -0.704   -2.72     -0.703   -2.72\n",
       "               numveh#6              -0.725   -4.27     -0.723   -4.26\n",
       "               ovtt/dist             -0.133   -6.76     -0.133   -6.76\n",
       "               totcost/hhinc        -0.0518   -4.85    -0.0524   -5.04\n",
       "               wkccbd#2               0.247    1.99      0.260    2.11\n",
       "               wkccbd#3                1.09    5.73       1.07    5.59\n",
       "               wkccbd#4                1.31    7.88       1.31    7.90\n",
       "               wkccbd#5               0.486    1.35      0.489    1.35\n",
       "               wkccbd#6              0.0972    0.39      0.102    0.40\n",
       "               wkempden#2           0.00160    4.05    0.00158    4.04\n",
       "               wkempden#3           0.00220    4.84    0.00226    4.99\n",
       "               wkempden#4           0.00313    8.62    0.00313    8.68\n",
       "               wkempden#5           0.00192    1.58    0.00193    1.59\n",
       "               wkempden#6           0.00288    3.88    0.00289    3.90\n",
       "----           ----                    ----    ----       ----    ----\n",
       "Log Likelihood Converged          -3,442.29          -3,444.14        \n",
       "               Null               -7,309.60          -7,309.60        \n",
       "               Constants Only     -4,132.92          -4,132.92        \n",
       "Rho Squared    vs Null               0.5291             0.5288        \n",
       "               vs Constants Only     0.1671             0.1667        "
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xl.add_content_tab(\n",
    "    joint_parameter_summary([m16, m17], bases=[m_c]),\n",
    "    sheetname='Step 8',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:31.462921Z",
     "start_time": "2020-03-20T04:32:31.308872Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'3.706, p=0.157'"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LRT(m16,m17,2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- The two models are statistical indistinguishable.\n",
    "- The parameter estimates for all the variables have the right sign and are\n",
    "  statistically significant (except CBD dummy for bike and walk).\n",
    "- We therefore select Model 17 as our preferred model.\n",
    "\n",
    "Since we're happy with this model now, we'll save it to a file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.178673Z",
     "start_time": "2020-03-20T04:32:31.465250Z"
    }
   },
   "outputs": [],
   "source": [
    "x17 = m17.to_xlsx('/tmp/m17.xlsx', save_now=False)\n",
    "x17.add_content_tab(\n",
    "    VoT,\n",
    "    sheetname=\"VoT\",\n",
    "    heading=\"Value of Time\",\n",
    ")\n",
    "x17.save()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-02-14T15:40:15.949052Z",
     "start_time": "2020-02-14T15:40:15.943761Z"
    }
   },
   "source": [
    "## Market Segmentation\n",
    "\n",
    "Models, to this point, assume the population is homogeneous with respect to the importance it places on different aspects of service except as differentiated by decision-maker variables included in the model.\n",
    "\n",
    "Market segments (distinct behavioral groups) may exist. For example, mode preference may differ between low and high-income travelers.\n",
    "\n",
    "\n",
    "Ways to incorporate population differences.\n",
    "1. Add alternative specific person, trip or context variables.\n",
    "2. Interaction of such variables with generic variables such as cost divided by income. \n",
    "3. Market segmentation based on a priori expectations.\n",
    "    - Select segments that are mutually exclusive and collectively exhaustive.\n",
    "    - Estimate models for each segment and compare to the pooled (all segments) model.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "How to use market segmentation\n",
    "\n",
    "- Select segmentation variables (income, auto ownership, trip purpose, party size, stay duration etc.)\n",
    "- Determine number of segments and boundaries along each dimension \n",
    "- Preferences can now vary across market segments, but segment members are still assumed to have identical preferences.\n",
    "- Segment along one or multiple dimensions, but pay attention to sample size within each segment!\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Market Segmentation Hypothesis Tests\n",
    "\n",
    "We can make a comparison of the pooled model (all segments have equal parameters) to the set of segment models.\n",
    "\n",
    "- Aggregate statistical test: do the segmented models reject the pooled model?\n",
    "- Statistical significance and reasonableness of the parameters in each segment\n",
    "- Reasonableness of the relationships among parameters within each segment and between segments.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Segmentation on Auto Ownership"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.243925Z",
     "start_time": "2020-03-20T04:32:32.180168Z"
    }
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'altnum' is not defined\nwithin parsed command: \"(ovtt/dist)*(altnum in (1,2,3,4))\"\ndid you mean 'nan_to_num' or 'numveh' or 'numalts'?",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m~/Git/larch/larch/util/dataframe.py\u001b[0m in \u001b[0;36mcolumnize_with_joinable_backing\u001b[0;34m(df, name, inplace, dtype, debug, backing)\u001b[0m\n\u001b[1;32m     86\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 87\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mcolumnize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minplace\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdebug\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdebug\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     88\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mNameError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/Git/larch/larch/util/dataframe.py\u001b[0m in \u001b[0;36mcolumnize\u001b[0;34m(df, name, inplace, dtype, debug, backing)\u001b[0m\n\u001b[1;32m    200\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 201\u001b[0;31m                         \u001b[0m_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0meval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    202\u001b[0m                         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_result\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpandas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSeries\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/Git/larch/larch/util/dataframe.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'dist' is not defined\nwithin parsed command: \"(ovtt/dist)*(altnum in (1,2,3,4))\"\ndid you mean 'sqrt' or 'ivtt' or 'isfinite'?",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-87-06831971784c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mm17a\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'Model 17A'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mm17a\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataservice\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mm17\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataservice\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mselector_co\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"numveh <= 1\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mm17a\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mestimate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mquiet\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mm17a\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloglike_null\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muse_cache\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m;\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/Git/larch/larch/model/abstract_model.pyx\u001b[0m in \u001b[0;36mlarch.model.abstract_model.AbstractChoiceModel.estimate\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32m~/Git/larch/larch/model/controller.pyx\u001b[0m in \u001b[0;36mlarch.model.controller.Model5c.load_data\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32m~/Git/larch/larch/dataframes.pyx\u001b[0m in \u001b[0;36mlarch.dataframes.DataFrames.make_dataframes\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;32m~/Git/larch/larch/util/dataframe.py\u001b[0m in \u001b[0;36mcolumnize\u001b[0;34m(df, name, inplace, dtype, debug, backing)\u001b[0m\n\u001b[1;32m    113\u001b[0m \t\tdf1 = pandas.concat([\n\u001b[1;32m    114\u001b[0m                         \u001b[0mcolumnize_with_joinable_backing\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbacking\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbacking\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 115\u001b[0;31m                         \u001b[0;32mfor\u001b[0m \u001b[0m_\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mdatanames\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    116\u001b[0m \t\t], axis=1, sort=False)\n\u001b[1;32m    117\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/Git/larch/larch/util/dataframe.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    113\u001b[0m \t\tdf1 = pandas.concat([\n\u001b[1;32m    114\u001b[0m                         \u001b[0mcolumnize_with_joinable_backing\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbacking\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbacking\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 115\u001b[0;31m                         \u001b[0;32mfor\u001b[0m \u001b[0m_\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mdatanames\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    116\u001b[0m \t\t], axis=1, sort=False)\n\u001b[1;32m    117\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/Git/larch/larch/util/dataframe.py\u001b[0m in \u001b[0;36mcolumnize_with_joinable_backing\u001b[0;34m(df, name, inplace, dtype, debug, backing)\u001b[0m\n\u001b[1;32m     88\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mNameError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     89\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 90\u001b[0;31m                         \u001b[0;32mreturn\u001b[0m \u001b[0mcolumnize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbacking\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdebug\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdebug\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     91\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     92\u001b[0m                         \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/Git/larch/larch/util/dataframe.py\u001b[0m in \u001b[0;36mcolumnize\u001b[0;34m(df, name, inplace, dtype, debug, backing)\u001b[0m\n\u001b[1;32m    199\u001b[0m                         \u001b[0m_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mexec\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    200\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 201\u001b[0;31m                         \u001b[0m_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0meval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    202\u001b[0m                         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_result\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpandas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSeries\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    203\u001b[0m                                 \u001b[0m_result\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpandas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSeries\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_result\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/Git/larch/larch/util/dataframe.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'altnum' is not defined\nwithin parsed command: \"(ovtt/dist)*(altnum in (1,2,3,4))\"\ndid you mean 'nan_to_num' or 'numveh' or 'numalts'?"
     ]
    }
   ],
   "source": [
    "m17a = m17.copy()\n",
    "m17a.title = 'Model 17A'\n",
    "m17a.dataservice = m17.dataservice.selector_co(\"numveh <= 1\")\n",
    "m17a.estimate(quiet=True)\n",
    "m17a.loglike_null(use_cache=False);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.245998Z",
     "start_time": "2020-03-20T04:31:48.341Z"
    }
   },
   "outputs": [],
   "source": [
    "m17b = m17.copy()\n",
    "m17b.title = 'Model 17B'\n",
    "m17b.dataservice = m17.dataservice.selector_co(\"numveh > 1\")\n",
    "m17b.estimate(quiet=True)\n",
    "m17b.loglike_null(use_cache=False);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.247127Z",
     "start_time": "2020-03-20T04:31:48.342Z"
    }
   },
   "outputs": [],
   "source": [
    "m17.dataservice.data_co.statistics()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.248129Z",
     "start_time": "2020-03-20T04:31:48.344Z"
    }
   },
   "outputs": [],
   "source": [
    "m17b.utility_co[2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.249052Z",
     "start_time": "2020-03-20T04:31:48.345Z"
    },
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "joint_parameter_summary([m17, m17a, m17b])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Notice that the total of the log likelihood at null parameters for the two\n",
    "segments is equal to the log likelihood at null parameters for the single\n",
    "original pooled model.  Why?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.250132Z",
     "start_time": "2020-03-20T04:31:48.347Z"
    }
   },
   "outputs": [],
   "source": [
    "m17a.loglike_null() + m17b.loglike_null()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On the other hand, the total converged log likelihood is not the same.  Why?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.251083Z",
     "start_time": "2020-03-20T04:31:48.349Z"
    }
   },
   "outputs": [],
   "source": [
    "m17a.loglike() + m17b.loglike()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can construct a hypothesis test to determine if the \n",
    "two segmented models together can reject the pooled model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.252099Z",
     "start_time": "2020-03-20T04:31:48.351Z"
    }
   },
   "outputs": [],
   "source": [
    "def LRT_2(models_u, model_r, deg_free):\n",
    "    stat = 2*(sum(m.loglike() for m in models_u) - model_r.loglike())\n",
    "    p = chi2(df=deg_free).sf(stat)\n",
    "    return f\"{stat:.3f}, p={p:.3f}\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.253052Z",
     "start_time": "2020-03-20T04:31:48.352Z"
    }
   },
   "outputs": [],
   "source": [
    "len(m17.pf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.254008Z",
     "start_time": "2020-03-20T04:31:48.354Z"
    }
   },
   "outputs": [],
   "source": [
    "LRT_2([m17a,m17b], m17, len(m17.pf))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Some other observations about these models:\n",
    "    \n",
    "- The ASC for other modes relative to drive alone are much more negative for the higher auto ownership group than for the lower auto ownership group.\n",
    "- The alternative specific income coefficients are insignificant or marginally significant for both segments suggesting that the effect of income differences is fully explained by the segment difference.\n",
    "- The sensitivity to automobile availability is much higher among low auto ownership households than among higher auto ownership household.\n",
    "- The differences in the alternative specific CBD dummy variables and the Employment Density variables are small and not significant.\n",
    "- The differences in the time parameters also are small and not significant.\n",
    "- The cost by income parameter is much smaller in the lower automobile ownership segment than in the higher automobile ownership segment despite expectations to the contrary. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Segmentation on Gender"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.255005Z",
     "start_time": "2020-03-20T04:31:48.357Z"
    }
   },
   "outputs": [],
   "source": [
    "m17c = m17.copy()\n",
    "m17c.title = 'Model 17C'\n",
    "m17c.dataservice = m17.dataservice.selector_co(\"femdum == 0\")\n",
    "m17c.estimate(quiet=True)\n",
    "m17c.loglike_null(use_cache=False);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.255998Z",
     "start_time": "2020-03-20T04:31:48.358Z"
    }
   },
   "outputs": [],
   "source": [
    "m17d = m17.copy()\n",
    "m17d.title = 'Model 17D'\n",
    "m17d.dataservice = m17.dataservice.selector_co(\"femdum == 1\")\n",
    "m17d.estimate(quiet=True)\n",
    "m17d.loglike_null(use_cache=False);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.257024Z",
     "start_time": "2020-03-20T04:31:48.360Z"
    },
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "joint_parameter_summary([m17, m17c, m17d])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.258018Z",
     "start_time": "2020-03-20T04:31:48.361Z"
    }
   },
   "outputs": [],
   "source": [
    "LRT_2([m17c,m17d], m17, len(m17.pf))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- The segmented model rejects the pooled model at a very high level of significance.\n",
    "- The alternative specific constants relative to the drive alone mode are less negative (more positive) in the female segment suggesting the preference for drive alone mode is less pronounced among females. This is especially true for the non-motorized modes (bike and walk) where the difference in the modal constants between the two groups is large and highly significant.\n",
    "- The female segment parameters for alternative specific variables; Income, Autos per Worker, CBD Dummy and Employment Density are generally more favorable to non-auto modes and especially bike and walk, but the differences are small and marginally or not significant.\n",
    "- Both groups show almost identical sensitivity to motorized in-vehicle travel time. Interestingly, the senstivity for *both* genders is lower than in the pooled model.\n",
    "- However, the female group is more sensitive to non-motorized travel time while the male group is more sensitive to out-of-vehicle time.\n",
    "- The female segment exhibits a much lower sensitivity to cost compared to the males.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-02-21T18:34:16.801212Z",
     "start_time": "2020-02-21T18:34:16.796319Z"
    }
   },
   "source": [
    "### Partial Segmentation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above observations demonstrate that taste variations exist between the auto ownership segments and between the gender segments. However, in each case, the differences appear to be associated with a subset of parameters. One approach to simplifying the segmentation is to adopt a pooled model which includes segment related parameters where the differences are important. For example, such a model would at a minimum include different parameters for each segment for the following variables:\n",
    "\n",
    "- Travel cost by income,\n",
    "- Total travel time for non-motorized modes, and\n",
    "- Out-of-vehicle time by distance.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.259003Z",
     "start_time": "2020-03-20T04:31:48.364Z"
    }
   },
   "outputs": [],
   "source": [
    "m17e = m17.copy()\n",
    "m17e.title = 'Model 17E'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.259939Z",
     "start_time": "2020-03-20T04:31:48.366Z"
    }
   },
   "outputs": [],
   "source": [
    "for i in m17e.utility_ca:\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.260960Z",
     "start_time": "2020-03-20T04:31:48.367Z"
    }
   },
   "outputs": [],
   "source": [
    "util_temp = sum([\n",
    "    P.motor_time * X('tottime*(altnum in (1,2,3,4))'),\n",
    "    P('ovtt/dist') * X('(ovtt/dist)*(altnum in (1,2,3,4))'),\n",
    "    P.nonmotor_time * X('tottime*(altnum in (5,6))'),\n",
    "    P('totcost/hhinc') * X('totcost/hhinc'),\n",
    "])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.261772Z",
     "start_time": "2020-03-20T04:31:48.369Z"
    }
   },
   "outputs": [],
   "source": [
    "util_temp_m = util_temp.reformat_param('{}_M') * X(\"femdum == 0\")\n",
    "util_temp_f = util_temp.reformat_param('{}_F') * X(\"femdum == 1\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.262791Z",
     "start_time": "2020-03-20T04:31:48.370Z"
    }
   },
   "outputs": [],
   "source": [
    "m17e.utility_ca = util_temp_m + util_temp_f\n",
    "m17e.remove_unused_parameters()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.263814Z",
     "start_time": "2020-03-20T04:31:48.372Z"
    }
   },
   "outputs": [],
   "source": [
    "m17e.estimate(quiet=True)\n",
    "m17e.loglike_null(use_cache=False);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's also try the approach where we apply the transforms only for one gender."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.264850Z",
     "start_time": "2020-03-20T04:31:48.374Z"
    }
   },
   "outputs": [],
   "source": [
    "m17f = m17.copy()\n",
    "m17f.title = 'Model 17F'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.265849Z",
     "start_time": "2020-03-20T04:31:48.375Z"
    }
   },
   "outputs": [],
   "source": [
    "util_temp = sum([\n",
    "    P.motor_time * X('tottime*(altnum in (1,2,3,4))'),\n",
    "    P('ovtt/dist') * X('(ovtt/dist)*(altnum in (1,2,3,4))'),\n",
    "    P.nonmotor_time * X('tottime*(altnum in (5,6))'),\n",
    "    P('totcost/hhinc') * X('totcost/hhinc'),\n",
    "])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.266803Z",
     "start_time": "2020-03-20T04:31:48.377Z"
    }
   },
   "outputs": [],
   "source": [
    "util_temp = util_temp.reformat_param('{}_F') * X(\"femdum == 1\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.267824Z",
     "start_time": "2020-03-20T04:31:48.378Z"
    }
   },
   "outputs": [],
   "source": [
    "util_temp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.268795Z",
     "start_time": "2020-03-20T04:31:48.380Z"
    }
   },
   "outputs": [],
   "source": [
    "m17f.utility_ca = m17f.utility_ca + util_temp\n",
    "# Don't use \"m17f.utility_ca += ...\", there is a bug!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.269809Z",
     "start_time": "2020-03-20T04:31:48.381Z"
    }
   },
   "outputs": [],
   "source": [
    "m17f.estimate(quiet=True)\n",
    "m17f.loglike_null(use_cache=False);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.270708Z",
     "start_time": "2020-03-20T04:31:48.383Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "joint_parameter_summary([m17, m17e, m17f])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Models 17E and 17F are mathematically the same model.\n",
    "\n",
    "What are some advantages of the design of each version? "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Summary\n",
    "\n",
    "It needs to be emphasized that the specification search was not necessarily exhaustive and improvements to the final preferred model specifications are possible. The example describes the basis for the decisions made at each point in the model specification search process. Clearly, different decisions could be made at some of these points. Thus, the final model result is based on a complex mix of empirical results, statistical analysis and judgment. The challenge to the analyst is to make good judgments, describe the basis for the judgments made, and be prepared to demonstrate the implications of making different judgments."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-03-20T04:32:32.271743Z",
     "start_time": "2020-03-20T04:31:48.385Z"
    }
   },
   "outputs": [],
   "source": [
    "xl.save()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:garage37] *",
   "language": "python",
   "name": "conda-env-garage37-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "304.792px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {},
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
